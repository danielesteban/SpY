{"version":3,"sources":["webpack:///./src/engine/camera.js","webpack:///./src/engine/grid.js","webpack:///./src/engine/moon.js","webpack:///./src/engine/starfield.js","webpack:///./src/engine/scene.js","webpack:///./src/engine/music.js","webpack:///./src/engine/input.js","webpack:///./src/engine/actor.js","webpack:///./src/actors/dude.js","webpack:///./src/items/marker.js","webpack:///./src/scenes/debug.js","webpack:///./src/building/elevator.js","webpack:///./src/building/hallway.js","webpack:///./src/building/doors.js","webpack:///./src/building/shaft.js","webpack:///./src/building/index.js","webpack:///./src/scenes/game.js","webpack:///./src/scenes/index.js","webpack:///./src/materials/grid.js","webpack:///./src/index.js"],"names":["Camera","_this","_classCallCheck","this","_getPrototypeOf","call","distance","maxHeight","Infinity","offset","tilt","Math","PI","pitch","speed","step","Vector3","root","Object3D","add","_assertThisInitialized","updateOrbit","PerspectiveCamera","delta","_ref","position","target","distanceTo","copy","sub","normalize","multiplyScalar","movement","_ref2","secondary","wheel","hasUpdated","x","y","min","max","set","cos","sin","lookAt","Grid","arguments","length","undefined","_ref$background","background","Color","_ref$size","size","_ref$subdivisions","subdivisions","grid_classCallCheck","geometry","CircleBufferGeometry","translate","rotateX","grid_possibleConstructorReturn","grid_getPrototypeOf","GridMaterial","material","color","Mesh","Moon","moon_classCallCheck","moon_possibleConstructorReturn","moon_getPrototypeOf","SphereBufferGeometry","MeshBasicMaterial","fog","Starfield","starfield_classCallCheck","radius","BufferGeometry","Float32Array","count","aux","i","floor","random","o","z","addAttribute","BufferAttribute","starfield_possibleConstructorReturn","starfield_getPrototypeOf","PointsMaterial","sizeAttenuation","moon","Points","Scene","_ref$mount","mount","document","body","scene_classCallCheck","camera","clock","Clock","renderer","WebGLRenderer","alpha","antialias","setAnimationLoop","onAnimate","bind","setPixelRatio","window","devicePixelRatio","sky","setClearColor","appendChild","domElement","Root","FogExp2","AmbientLight","light","DirectionalLight","secondaryLight","grid","starfield","addEventListener","onResize","ShaderChunk","fog_pars_vertex","replace","fog_vertex","fog_pars_fragment","fog_fragment","join","stats","begin","animation","getDelta","time","oldTime","onAnimationTick","children","forEach","child","render","end","_mount$getBoundingCli","getBoundingClientRect","width","height","setSize","aspect","updateProjectionMatrix","fixThreeJSFog","QuaternionKeyframeTrack","DefaultInterpolation","InterpolateSmooth","VectorKeyframeTrack","Music","toggle","api","SC","initialize","client_id","tracks","shuffle","track","temp","index","play","_this2","player","kill","id","stream","concat","then","on","next","catch","button","isPlaying","pause","className","Input","pointer","current","Vector2","normalized","last","raycaster","Raycaster","touches","Touches","preventSimulated","onPointerDown","onPointerMove","onPointerUp","addWheelListener","onPointerWheel","e","preventDefault","frame","_objectSpread","primaryDown","primaryUp","secondaryDown","secondaryUp","isEnabled","primary","_ref4","_slicedToArray","_ref3","rect","top","left","_touches$i","clientX","clientY","_ref5","deltaY","_ref6","Actor","hip","Bone","torso","head","leftArm","rightArm","leftLeg","rightLeg","Skeleton","mixer","AnimationMixer","actions","Object","keys","animations","reduce","action","_defineProperty","clipAction","idle","timeScale","rotationAux","movementAux","SkinnedMesh","limbs","merged","Geometry","limb","faces","face","materialIndex","Bones","merge","vertices","a","bone","b","c","vertex","skinIndices","push","Vector4","skinWeights","fromGeometry","computeVertexNormals","computeBoundingSphere","walkingSpeed","walk","destination","destinationMarker","rotationSpeed","targetRotation","update","rotationStep","rotationDelta","rotation","abs","setAnimation","visible","onDestinationCallback","fadeOut","reset","fadeIn","point","clone","faceTo","angle","eulerToQuat","Quaternion","setFromEuler","Euler","toArray","AnimationClip","_toConsumableArray","Dude","palette","dude_classCallCheck","bones","dude_assertThisInitialized","dude_getPrototypeOf","skeleton","CylinderGeometry","SphereGeometry","leftEye","eyes","rightEye","arms","legs","geometryFromLimbs","boundingSphere","center","MeshPhongMaterial","skinning","vertexColors","VertexColors","Marker","marker_classCallCheck","marker_possibleConstructorReturn","marker_getPrototypeOf","transparent","scale","inc","s","opacity","debug","input","scene","pack","dudes","debug_toConsumableArray","Array","map","v","dude","walkTo","mainDudeX","mainDudeZ","mainDude","getPointerFrame","processInput","setFromCamera","hit","intersectObject","Elevator","floors","origin","elevator_classCallCheck","BoxGeometry","setHSL","splice","elevator_possibleConstructorReturn","elevator_getPrototypeOf","side","DoubleSide","animationStart","mid","Hallway","_ref2$hasElevator","hasElevator","_ref2$isEdge","isEdge","_ref2$isLobby","isLobby","hallway_classCallCheck","generateWall","aoBottom","orientation","wall","aoTop","rotateY","hallway_possibleConstructorReturn","hallway_getPrototypeOf","_ref$aoTop","_ref$aoBottom","_ref$width","_ref$height","PlaneGeometry","ceil","hallway_toConsumableArray","j","offsetHSL","Doors","doors_classCallCheck","doors_possibleConstructorReturn","doors_getPrototypeOf","plane","door","Shaft","elevator","shaft_classCallCheck","back","shaft_possibleConstructorReturn","shaft_getPrototypeOf","doors","shaft_toConsumableArray","Building","elevators","building_classCallCheck","building_possibleConstructorReturn","building_getPrototypeOf","pallete","mesh","shaft","rooms","room","type","findIndex","game","timer","positionAux","clearTimeout","setTimeout","getWorldPosition","building","game_toConsumableArray","intersectObjects","object","__webpack_require__","d","__webpack_exports__","_ref$color","rest","_objectWithoutProperties","vertexShader","ShaderLib","phong","primaryGrid","secondaryGrid","fragmentShader","_possibleConstructorReturn","name","uniforms","UniformsUtils","extensions","derivatives","lights","diffuse","value","ShaderMaterial","r","setImmediate","fonts","loaded","_engine_input__WEBPACK_IMPORTED_MODULE_0__","_engine_music__WEBPACK_IMPORTED_MODULE_1__","_engine_scene__WEBPACK_IMPORTED_MODULE_2__","_scenes__WEBPACK_IMPORTED_MODULE_3__","getElementById","music","route","location","hash","split","slice","Scenes","reload","font","test","fontTester","createElement","innerText","style","fontFamily","initialWidth","check","removeChild","once","display"],"mappings":"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","file":"code/main.e034a5ba91785c8b57d3.js","sourcesContent":["import {\n  Object3D,\n  PerspectiveCamera,\n  Vector3,\n} from 'three';\n\nclass Camera extends PerspectiveCamera {\n  constructor() {\n    super(60, 1, 0.01, 2048);\n    this.distance = 4;\n    this.maxHeight = Infinity;\n    this.offset = 1.2;\n    this.tilt = Math.PI * -0.65;\n    this.pitch = Math.PI * 0.1;\n    this.speed = 1.25;\n    this.step = new Vector3();\n    this.root = new Object3D();\n    this.root.add(this);\n    this.updateOrbit();\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      root: { position },\n      speed,\n      step,\n      target,\n    } = this;\n    if (!target || position.distanceTo(target) <= 0.1) return;\n    step\n      .copy(target)\n      .sub(position)\n      .normalize()\n      .multiplyScalar(delta * speed);\n    position.add(step);\n  }\n\n  processInput({\n    movement,\n    secondary,\n    wheel,\n  }) {\n    let hasUpdated = false;\n    if (secondary) {\n      const sensitivity = 0.003;\n      this.tilt -= movement.x * sensitivity;\n      this.pitch += movement.y * sensitivity;\n      this.pitch = Math.min(Math.max(this.pitch, Math.PI * -0.45), Math.PI * 0.45);\n      hasUpdated = true;\n    }\n    if (wheel) {\n      const sensitivity = 0.006;\n      this.distance = Math.min(Math.max(this.distance + (wheel * sensitivity), 1), 8);\n      hasUpdated = true;\n    }\n    if (hasUpdated) this.updateOrbit();\n    return hasUpdated;\n  }\n\n  updateOrbit() {\n    const {\n      distance,\n      maxHeight,\n      offset,\n      pitch,\n      position,\n      root,\n      tilt,\n    } = this;\n    position.set(\n      Math.cos(tilt) * Math.cos(pitch),\n      Math.sin(pitch),\n      Math.sin(-tilt) * Math.cos(pitch)\n    )\n      .normalize()\n      .multiplyScalar(distance);\n    position.y = Math.min(Math.max(position.y, 0.1 - offset), maxHeight - offset);\n    this.lookAt(root.position);\n    position.y += offset;\n  }\n}\n\nexport default Camera;\n","import {\n  Color,\n  Mesh,\n  CircleBufferGeometry,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Grid extends Mesh {\n  constructor({\n    background = new Color(0xFFFFFF),\n    size = 1,\n    subdivisions = 10,\n  } = {}) {\n    const geometry = new CircleBufferGeometry(1024, 8);\n    geometry.translate(0, 0, -0.01);\n    geometry.rotateX(Math.PI * -0.5);\n    super(\n      geometry,\n      new GridMaterial({\n        size,\n        subdivisions,\n      })\n    );\n    this.material.color.set(background);\n  }\n}\n\nexport default Grid;\n","import {\n  Mesh,\n  MeshBasicMaterial,\n  SphereBufferGeometry,\n} from 'three';\n\nclass Moon extends Mesh {\n  constructor() {\n    super(\n      new SphereBufferGeometry(100, 32, 32),\n      new MeshBasicMaterial({\n        color: 0x999999,\n        fog: false,\n      })\n    );\n  }\n}\n\nexport default Moon;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  Vector3,\n} from 'three';\nimport Moon from './moon';\n\nclass Starfield extends Points {\n  constructor() {\n    const count = 10000;\n    const radius = 1024;\n    const geometry = new BufferGeometry();\n    const position = new Float32Array(count * 3);\n    const size = new Float32Array(count);\n    const aux = new Vector3();\n    for (let i = 0; i < count; i += 1) {\n      aux.set(\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius,\n        Math.floor(Math.random() * (radius + 1)),\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius\n      ).normalize().multiplyScalar(radius);\n      const o = i * 3;\n      position[o] = aux.x;\n      position[o + 1] = aux.y;\n      position[o + 2] = aux.z;\n      size[i] = 10 + Math.floor(Math.random() * 100);\n    }\n    geometry.addAttribute('position', new BufferAttribute(position, 3));\n    geometry.addAttribute('size', new BufferAttribute(size, 1));\n    super(\n      geometry,\n      new PointsMaterial({\n        color: 0x999999,\n        fog: false,\n        sizeAttenuation: false,\n      })\n    );\n    this.moon = new Moon();\n    this.moon.position.set(radius, radius * 0.5, radius);\n    this.add(this.moon);\n  }\n}\n\nexport default Starfield;\n","import Stats from 'stats.js';\nimport {\n  AmbientLight,\n  Clock,\n  Color,\n  DirectionalLight,\n  FogExp2,\n  InterpolateSmooth,\n  QuaternionKeyframeTrack,\n  Scene as Root,\n  ShaderChunk,\n  VectorKeyframeTrack,\n  WebGLRenderer,\n} from 'three';\nimport Camera from './camera';\nimport Grid from './grid';\nimport Starfield from './starfield';\n\nclass Scene {\n  constructor({\n    mount = document.body,\n  } = {}) {\n    this.camera = new Camera();\n    this.clock = new Clock();\n    this.mount = mount;\n    this.renderer = new WebGLRenderer({\n      alpha: false,\n      antialias: true,\n    });\n    this.renderer.setAnimationLoop(this.onAnimate.bind(this));\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n    const sky = new Color(0x334455);\n    this.renderer.setClearColor(sky);\n    mount.appendChild(this.renderer.domElement);\n    this.root = new Root();\n    this.root.fog = new FogExp2(sky, 0.025);\n    this.root.add(new AmbientLight(0x333333));\n    const light = new DirectionalLight(0xffffff, 0.8);\n    light.position.set(1, 0.5, 1);\n    this.root.add(light);\n    const secondaryLight = new DirectionalLight(0xffffff, 0.4);\n    secondaryLight.position.set(-1, -0.5, 1);\n    this.root.add(secondaryLight);\n    this.root.add(this.camera.root);\n    this.grid = new Grid({ background: new Color(0x333344) });\n    this.root.add(this.grid);\n    this.starfield = new Starfield();\n    this.root.add(this.starfield);\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = 'absolute';\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      mount.style.position = 'relative';\n      mount.appendChild(this.stats.dom);\n    }\n  }\n\n  onAnimate() {\n    const {\n      clock,\n      camera,\n      grid,\n      renderer,\n      root,\n      starfield,\n      stats,\n    } = this;\n    if (stats) stats.begin();\n    const animation = { delta: Math.min(clock.getDelta(), 1), time: clock.oldTime / 1000 };\n    if (this.onAnimationTick) {\n      this.onAnimationTick(animation);\n    }\n    root.children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n    if (camera.onAnimationTick) {\n      camera.onAnimationTick(animation);\n    }\n    grid.position.set(camera.root.position.x, 0, camera.root.position.z);\n    starfield.position.copy(grid.position);\n    renderer.render(root, camera);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      camera,\n      mount,\n      renderer,\n    } = this;\n    const { width, height } = mount.getBoundingClientRect();\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n  }\n\n  static fixThreeJSFog() {\n    ShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n      'fogDepth = -mvPosition.z;',\n      'fogDepth = mvPosition;'\n    );\n    ShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n      'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n      [\n        'float fogDist = length(fogDepth);',\n        'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n      ].join('\\n')\n    ).replace(\n      'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n      'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n    );\n  }\n}\n\nScene.fixThreeJSFog();\nQuaternionKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\nVectorKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\n\nexport default Scene;\n","class Music {\n  static shuffle(tracks) {\n    let temp;\n    let random;\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      random = Math.floor(Math.random() * index);\n      temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    return tracks;\n  }\n\n  constructor({ toggle }) {\n    this.api = window.SC;\n    this.api.initialize({\n      client_id: 'eb5fcff9e107aab508431b4c3c416415',\n    });\n    // this.api.resolve('https://soundcloud.com/travis-stanley-3/sets/jazz-noir-dark-jazz').then(({ tracks }) => {\n    //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n    // });\n    // eslint-disable-next-line\n    this.tracks = Music.shuffle([15107449,14281750,135099881,11470035,14449372,132576042,201545618,7546385,199917181,130450594,43516158,20969172,209771982,29561041,6582510,89379153,96594845,187242780,193388680,199889475,2665818,8834943,187747016,137188503,74658085,151273675,177686789,135693650,90256034,51186312,183847047,3916883,167411437]);\n    this.track = 0;\n    toggle.addEventListener('click', () => this.toggle(toggle), false);\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    const id = tracks[track];\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('ended', () => this.next());\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  toggle(button) {\n    const { player } = this;\n    if (!player) return;\n    if (player.isPlaying()) {\n      player.pause();\n      button.className = 'muted';\n    } else {\n      button.className = '';\n      player.play();\n    }\n  }\n}\n\nexport default Music;\n","import { Raycaster, Vector2 } from 'three';\nimport Touches from 'touches';\nimport { addWheelListener } from 'wheel';\n\nclass Input {\n  constructor({\n    mount = document.body,\n  }) {\n    this.mount = mount;\n    this.pointer = {\n      current: new Vector2(0, 0),\n      movement: { x: 0, y: 0 },\n      normalized: new Vector2(0, 0),\n      last: new Vector2(0, 0),\n      raycaster: new Raycaster(),\n      wheel: 0,\n    };\n    this.touches = Touches(window, {\n      preventSimulated: false,\n      target: mount,\n    })\n      .on('start', this.onPointerDown.bind(this))\n      .on('move', this.onPointerMove.bind(this))\n      .on('end', this.onPointerUp.bind(this));\n    addWheelListener(window, this.onPointerWheel.bind(this));\n    window.addEventListener('contextmenu', e => e.preventDefault(), false);\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n  }\n\n  getPointerFrame() {\n    const { pointer } = this;\n    const frame = { ...pointer };\n    pointer.primaryDown = false;\n    pointer.primaryUp = false;\n    pointer.secondaryDown = false;\n    pointer.secondaryUp = false;\n    pointer.movement = { x: 0, y: 0 };\n    pointer.wheel = 0;\n    return frame;\n  }\n\n  onPointerDown(e) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    const { button, touches } = e;\n    if (touches) {\n      if (touches.length > 1) {\n        e.preventDefault();\n      }\n      if (!pointer.secondary) {\n        if (touches.length === 1) {\n          pointer.primary = true;\n          pointer.primaryDown = true;\n        } else {\n          pointer.secondary = true;\n          pointer.secondaryDown = true;\n          pointer.primary = false;\n        }\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = true;\n        pointer.primaryDown = true;\n        break;\n      case 2:\n        pointer.secondary = true;\n        pointer.secondaryDown = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerMove({ touches }, [x, y]) {\n    const { isEnabled, pointer, rect } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      const { top, left } = rect;\n      x = 0;\n      y = 0;\n      for (let i = 0; i < touches.length; i += 1) {\n        const { clientX, clientY } = touches[i];\n        x += (clientX - left);\n        y += (clientY - top);\n      }\n      x /= touches.length;\n      y /= touches.length;\n    }\n    const { width, height } = rect;\n    pointer.current.x = x;\n    pointer.current.y = y;\n    pointer.normalized.x = ((x / width) * 2) - 1;\n    pointer.normalized.y = 1 - ((y / height) * 2);\n    pointer.movement = {\n      x: pointer.current.x - pointer.last.x,\n      y: pointer.current.y - pointer.last.y,\n    };\n    pointer.last.copy(pointer.current);\n  }\n\n  onPointerUp({ button, touches }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      if (pointer.primary) {\n        pointer.primary = false;\n        pointer.primaryUp = true;\n      }\n      if (pointer.secondary) {\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = false;\n        pointer.primaryUp = true;\n        break;\n      case 2:\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerWheel({ deltaY }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    pointer.wheel = deltaY;\n  }\n\n  onResize() {\n    const { mount } = this;\n    this.rect = mount.getBoundingClientRect();\n  }\n}\n\n\nexport default Input;\n","import {\n  AnimationClip,\n  AnimationMixer,\n  Bone,\n  BufferGeometry,\n  Euler,\n  Geometry,\n  QuaternionKeyframeTrack,\n  Quaternion,\n  SkinnedMesh,\n  Skeleton,\n  Vector2,\n  Vector3,\n  Vector4,\n} from 'three';\n\nclass Actor extends SkinnedMesh {\n  static geometryFromLimbs(limbs) {\n    const merged = new Geometry();\n    Object.keys(limbs).forEach((limb) => {\n      limbs[limb].faces.forEach((face) => {\n        face.materialIndex = Actor.Bones[limb];\n      });\n      merged.merge(limbs[limb]);\n    });\n    merged.faces.forEach((face) => {\n      merged.vertices[face.a].bone = face.materialIndex;\n      merged.vertices[face.b].bone = face.materialIndex;\n      merged.vertices[face.c].bone = face.materialIndex;\n      face.materialIndex = 0;\n    });\n    merged.vertices.forEach((vertex) => {\n      merged.skinIndices.push(new Vector4(vertex.bone, 0, 0, 0));\n      merged.skinWeights.push(new Vector4(1, 0, 0, 0));\n    });\n    const geometry = (new BufferGeometry()).fromGeometry(merged);\n    geometry.computeVertexNormals();\n    geometry.computeBoundingSphere();\n    return geometry;\n  }\n\n  constructor({\n    geometry,\n    material,\n  }) {\n    super(\n      geometry,\n      material\n    );\n    const hip = new Bone();\n    this.add(hip);\n    const torso = new Bone();\n    hip.add(torso);\n    const head = new Bone();\n    torso.add(head);\n    const leftArm = new Bone();\n    torso.add(leftArm);\n    const rightArm = new Bone();\n    torso.add(rightArm);\n    const leftLeg = new Bone();\n    hip.add(leftLeg);\n    const rightLeg = new Bone();\n    hip.add(rightLeg);\n    this.bind(new Skeleton([\n      hip,\n      torso,\n      head,\n      leftArm,\n      rightArm,\n      leftLeg,\n      rightLeg,\n    ]));\n    this.mixer = new AnimationMixer(this);\n    this.actions = Object.keys(Actor.animations).reduce((actions, action) => ({\n      ...actions,\n      [action]: this.mixer.clipAction(Actor.animations[action]),\n    }), {});\n    this.animation = 'idle';\n    this.actions.idle.timeScale = 0.5;\n    this.actions.idle.play();\n    this.rotationAux = new Vector2();\n    this.movementAux = new Vector3();\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      actions: { walk: { timeScale: walkingSpeed } },\n      destination,\n      destinationMarker,\n      mixer,\n      movementAux,\n      position,\n      rotationSpeed,\n      targetRotation,\n    } = this;\n    mixer.update(delta);\n    if (targetRotation) {\n      const rotationStep = delta * rotationSpeed;\n      const rotationDelta = targetRotation - this.rotation.y;\n      this.rotation.y += Math.min(\n        Math.max(\n          rotationDelta,\n          -rotationStep\n        ),\n        rotationStep\n      );\n      if (Math.abs(rotationDelta) <= rotationStep) {\n        this.targetRotation = false;\n      }\n    }\n    if (!destination) return;\n    const distance = position.distanceTo(destination);\n    const step = delta * 1.5 * walkingSpeed;\n    position.add(\n      movementAux\n        .copy(destination)\n        .sub(position)\n        .normalize()\n        .multiplyScalar(Math.min(distance, step))\n    );\n    if (distance <= step) {\n      this.setAnimation('idle');\n      this.destination = false;\n      if (destinationMarker) {\n        destinationMarker.visible = false;\n      }\n      if (this.onDestinationCallback) {\n        this.onDestinationCallback();\n      }\n    }\n  }\n\n  setAnimation(animation) {\n    const { actions } = this;\n    if (this.animation === animation) return;\n    actions[this.animation].fadeOut(0.2);\n    this.animation = animation;\n    actions[this.animation]\n      .reset()\n      .fadeIn(0.2)\n      .play();\n  }\n\n  walkTo(point) {\n    const { destinationMarker } = this;\n    this.setAnimation('walk');\n    this.destination = point.clone();\n    if (destinationMarker) {\n      destinationMarker.position.copy(this.destination);\n      destinationMarker.visible = true;\n    }\n    this.faceTo(point);\n  }\n\n  faceTo(point) {\n    const { position, rotationAux } = this;\n    const angle = rotationAux.set(point.x - position.x, point.z - position.z).angle();\n    while (this.rotation.y < -Math.PI) this.rotation.y += Math.PI * 2;\n    while (this.rotation.y > Math.PI) this.rotation.y -= Math.PI * 2;\n    this.targetRotation = (Math.PI * 0.5) - angle;\n    while (this.targetRotation < -Math.PI) this.targetRotation += Math.PI * 2;\n    while (this.targetRotation > Math.PI) this.targetRotation -= Math.PI * 2;\n    if ((this.targetRotation - this.rotation.y) > Math.PI) {\n      this.targetRotation -= Math.PI * 2;\n    } else if ((this.targetRotation - this.rotation.y) < -Math.PI) {\n      this.targetRotation += Math.PI * 2;\n    }\n    this.rotationSpeed = Math.abs(this.targetRotation - this.rotation.y) * 1.5;\n  }\n}\n\nActor.Bones = {\n  hip: 0,\n  torso: 1,\n  head: 2,\n  leftArm: 3,\n  rightArm: 4,\n  leftLeg: 5,\n  rightLeg: 6,\n};\n\nconst eulerToQuat = (x, y, z) => (new Quaternion()).setFromEuler(new Euler(x, y, z)).toArray();\n\nActor.animations = {\n  idle: (\n    new AnimationClip('idle', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n          ...eulerToQuat(0, Math.PI * 0.05, 0),\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * 0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n          ...eulerToQuat(0, 0, Math.PI * -0.1),\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.25,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n          ...eulerToQuat(0, 0, Math.PI * 0.1),\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n        ])\n      ),\n    ])\n  ),\n  walk: (\n    new AnimationClip('walk', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.02, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n          ...eulerToQuat(0, 0, Math.PI * 0.025),\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * -0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n        ])\n      ),\n    ])\n  ),\n};\n\nexport default Actor;\n","import {\n  CylinderGeometry,\n  MeshPhongMaterial,\n  SphereGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport Actor from '@/engine/actor';\n\nclass Dude extends Actor {\n  constructor(palette) {\n    super({\n      geometry: Dude.geometry(palette),\n      material: Dude.material,\n    });\n    const { skeleton: { bones } } = this;\n    Object.keys(Dude.bones).forEach((bone) => {\n      bones[Actor.Bones[bone]].position.copy(Dude.bones[bone]);\n    });\n  }\n}\n\nDude.bones = {\n  hip: new Vector3(0, 0.5, 0),\n  torso: new Vector3(0, 0, 0),\n  head: new Vector3(0, 0.5, 0),\n  leftArm: new Vector3(-0.15, 0.475, 0),\n  rightArm: new Vector3(0.15, 0.475, 0),\n  leftLeg: new Vector3(-0.075, 0, 0),\n  rightLeg: new Vector3(0.075, 0, 0),\n};\n\nDude.geometry = (palette) => {\n  const torso = new CylinderGeometry(0.175, 0.15, 0.5, 6);\n  torso.translate(0, 0.25, 0);\n  torso.faces.forEach((face) => {\n    face.color.set(palette.torso || 0x990000);\n  });\n  const head = new SphereGeometry(0.2, 8, 4);\n  head.translate(0, 0.2, 0);\n  head.faces.forEach((face) => {\n    face.color.set(palette.head);\n  });\n  const leftEye = new SphereGeometry(0.05);\n  leftEye.faces.forEach((face) => {\n    face.color.set(palette.eyes);\n  });\n  const rightEye = leftEye.clone();\n  leftEye.translate(-0.1, 0.2, 0.15);\n  rightEye.translate(0.1, 0.2, 0.15);\n  head.merge(leftEye);\n  head.merge(rightEye);\n  const leftArm = new CylinderGeometry(0.05, 0.03, 0.4, 6);\n  leftArm.faces.forEach((face) => {\n    face.color.set(palette.arms);\n  });\n  const rightArm = leftArm.clone();\n  leftArm.translate(0, -0.2, 0);\n  rightArm.translate(0, -0.2, 0);\n  const leftLeg = new CylinderGeometry(0.05, 0.05, 0.5, 4);\n  leftLeg.faces.forEach((face) => {\n    face.color.set(palette.legs);\n  });\n  const rightLeg = leftLeg.clone();\n  leftLeg.translate(0, -0.25, 0);\n  rightLeg.translate(0, -0.25, 0);\n  const geometry = Actor.geometryFromLimbs({\n    torso,\n    head,\n    leftArm,\n    rightArm,\n    leftLeg,\n    rightLeg,\n  });\n  geometry.boundingSphere.center.set(0, 0.7, 0);\n  geometry.boundingSphere.radius = 0.7;\n  return geometry;\n};\n\nDude.material = new MeshPhongMaterial({\n  skinning: true,\n  vertexColors: VertexColors,\n});\n\nexport default Dude;\n","import {\n  CircleBufferGeometry,\n  Mesh,\n  MeshPhongMaterial,\n} from 'three';\n\nclass Marker extends Mesh {\n  constructor() {\n    const geometry = new CircleBufferGeometry(0.25, 16);\n    geometry.rotateX(Math.PI * -0.5);\n    geometry.translate(0, 0.001, 0);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x222222,\n        transparent: true,\n      })\n    );\n    this.visible = false;\n  }\n\n  onAnimationTick({ time }) {\n    const { material, scale, visible } = this;\n    if (!visible) return;\n    const inc = ((1 + Math.sin(time * 4)) * 0.125);\n    const s = 0.75 + inc;\n    scale.set(s, 1, s);\n    material.opacity = 0.25 + inc;\n  }\n}\n\nexport default Marker;\n","import Dude from '@/actors/dude';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  const pack = {\n    dudes: [...Array(13)].map((v, i) => {\n      const dude = new Dude({\n        arms: 0x222222,\n        eyes: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n        head: i === 0 ? 0x333333 : (0x999999 * Math.random()),\n        legs: 0x222222,\n        torso: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n      });\n      dude.position.set(Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1), 0, 0);\n      scene.root.add(dude);\n      return dude;\n    }),\n    walkTo(point) {\n      const { x: mainDudeX, z: mainDudeZ } = point;\n      this.dudes.forEach((dude, i) => {\n        point.x = mainDudeX + Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1);\n        point.z = mainDudeZ + Math.floor((i + 1) / 2) * -1;\n        if (i > 0) {\n          point.x += (Math.random() * 2) - 1;\n          point.z += (Math.random() * 2) - 1;\n          dude.actions.walk.timeScale = 0.8 + Math.random() * 0.4;\n        }\n        dude.walkTo(point);\n      });\n    },\n  };\n\n  const [mainDude] = pack.dudes;\n  mainDude.destinationMarker = new Marker();\n  scene.root.add(mainDude.destinationMarker);\n  scene.camera.target = mainDude.position;\n\n  scene.camera.distance = 6;\n  scene.camera.pitch = Math.PI * 0.125;\n  scene.camera.updateOrbit();\n\n  scene.onAnimationTick = () => {\n    const { camera, grid } = scene;\n    const pointer = input.getPointerFrame();\n    camera.processInput(pointer);\n    if (pointer.primaryUp) {\n      const { raycaster } = pointer;\n      raycaster.setFromCamera(pointer.normalized, camera);\n      const hit = raycaster.intersectObject(grid)[0];\n      if (!hit) return;\n      pack.walkTo(hit.point);\n    }\n  };\n};\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  Vector3,\n  VertexColors,\n} from 'three';\n\nclass Elevator extends Mesh {\n  constructor({\n    floors,\n    origin,\n  }) {\n    const geometry = new BoxGeometry(\n      0.99, 0.99, 0.99,\n      Elevator.scale.x, Elevator.scale.y, Elevator.scale.z\n    );\n    const color = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(color);\n    });\n    geometry.translate(0, 0.5, 0);\n    for (let i = 0; i < 12; i += 1) {\n      geometry.faces.splice(40, 1);\n    }\n    geometry.scale(Elevator.scale.x, Elevator.scale.y, Elevator.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        color: Elevator.color,\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n    this.floors = floors;\n    this.origin = origin;\n    this.animationStart = Math.random() * 512;\n  }\n\n  onAnimationTick({ time }) {\n    const { animationStart, floors, position } = this;\n    const mid = (floors - 1) * Elevator.scale.y * 0.5;\n    position.y = mid + (Math.sin((animationStart + time) * 0.5) * mid);\n  }\n}\n\nElevator.color = 0x440000;\nElevator.scale = new Vector3(2, 3, 2);\n\nexport default Elevator;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Hallway extends Mesh {\n  static generateWall({\n    aoTop = true,\n    aoBottom = true,\n    width = 1,\n    height = 1,\n    material,\n    orientation,\n  }) {\n    const wall = new PlaneGeometry(\n      width,\n      height,\n      Math.ceil(width * Hallway.scale.x),\n      Math.ceil(height * (orientation === 'horizontal' ? Hallway.scale.x : Hallway.scale.y))\n    );\n    const color = new Color();\n    wall.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.materialIndex = material;\n      const vertices = [\n        wall.vertices[face.a],\n        wall.vertices[face.b],\n        wall.vertices[face.c],\n      ];\n      face.vertexColors = [...Array(3)].map((v, j) => {\n        const c = color.clone();\n        if (\n          (aoTop && Math.abs(vertices[j].y - height * 0.5) < 0.0001)\n          || (aoBottom && Math.abs(vertices[j].y - height * -0.5) < 0.0001)\n        ) {\n          c.offsetHSL(0, 0, -0.1);\n        }\n        return c;\n      });\n    });\n    if (orientation === 'horizontal') {\n      wall.rotateX(Math.PI * -0.5);\n    }\n    return wall;\n  }\n\n  constructor({\n    hasElevator = false,\n    isEdge = false,\n    isLobby = false,\n  } = {}) {\n    const merged = new Geometry();\n    const floor = Hallway.generateWall({\n      aoBottom: !isLobby,\n      material: 0,\n      orientation: 'horizontal',\n    });\n    floor.translate(0, -0.0005, 0);\n    merged.merge(floor);\n    if (hasElevator) {\n      const wall = Hallway.generateWall({\n        width: 0.25,\n        material: 1,\n      });\n      wall.translate(-0.375, 0.5, -0.5);\n      merged.merge(wall);\n      wall.translate(0.75, 0, 0);\n      merged.merge(wall);\n    } else {\n      const wall = Hallway.generateWall({\n        material: 1,\n      });\n      wall.translate(0, 0.5, -0.5);\n      merged.merge(wall);\n    }\n    if (!isLobby) {\n      const wall = Hallway.generateWall({\n        aoTop: false,\n        height: 1 / 3,\n        material: 1,\n      });\n      wall.rotateY(Math.PI);\n      wall.translate(0, 1 / 3 / 2, 0.5);\n      merged.merge(wall);\n      if (isEdge) {\n        const wall = Hallway.generateWall({\n          aoTop: false,\n          height: 1 / 3,\n          material: 1,\n        });\n        wall.rotateY(Math.PI * 0.5 * (isEdge === 'left' ? 1 : -1));\n        wall.translate(isEdge === 'left' ? -0.5 : 0.5, 1 / 3 / 2, 0);\n        merged.merge(wall);\n      }\n    }\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      [\n        new GridMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n        new MeshPhongMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n      ]\n    );\n    this.scale.copy(Hallway.scale);\n  }\n}\n\nHallway.scale = new Vector3(4, 3, 4);\n\nexport default Hallway;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  Object3D,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\n\nclass Doors extends Object3D {\n  constructor({\n    floor,\n  }) {\n    super();\n    const plane = new PlaneGeometry(0.5, 1, Doors.scale.x * 0.5, Doors.scale.y);\n    const color = new Color();\n    plane.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(color);\n    });\n    plane.scale(Doors.scale.x, Doors.scale.y, Doors.scale.z);\n    const geometry = (new BufferGeometry()).fromGeometry(plane);\n    for (let i = 0; i < 2; i += 1) {\n      const door = new Mesh(\n        geometry,\n        new MeshPhongMaterial({\n          color: Doors.color,\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      door.position.set(\n        (-0.25 + (i * 0.5)) * Doors.scale.x,\n        0.5 * Doors.scale.y,\n        0.499 * Doors.scale.z\n      );\n      this.add(door);\n    }\n    this.position.y = floor * Doors.scale.y;\n    this.animationStart = Math.random() * 512;\n  }\n\n  onAnimationTick({ time }) {\n    const { animationStart, children } = this;\n    const step = (0.25 + (Math.sin(animationStart + time) * 0.24));\n    children.forEach((door, i) => {\n      door.position.x = (-0.25 + (i * 0.5) + (step * (i === 0 ? -1 : 1))) * Doors.scale.x;\n    });\n  }\n}\n\nDoors.color = 0x333333;\nDoors.scale = new Vector3(2, 3, 2);\n\nexport default Doors;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n  Vector3,\n} from 'three';\nimport Doors from './doors';\n\nclass Shaft extends Mesh {\n  constructor({\n    elevator,\n  }) {\n    const { floors, origin } = elevator;\n    const merged = new Geometry();\n    for (let i = 0; i <= floors; i += 1) {\n      if (i === 0 || i === floors) {\n        const floor = new PlaneGeometry(1, 1);\n        floor.rotateX(Math.PI * -0.5);\n        floor.translate(0, i, 0);\n        merged.merge(floor);\n        if (i === floors) break;\n      }\n      const back = new PlaneGeometry(1, 1);\n      back.translate(0, i + 0.5, -0.5);\n      merged.merge(back);\n      const side = new PlaneGeometry(1, 1);\n      side.rotateY(Math.PI * -0.5);\n      side.translate(-0.5, i + 0.5, 0);\n      merged.merge(side);\n      side.translate(1, 0, 0);\n      merged.merge(side);\n    }\n    merged.scale(Shaft.scale.x, Shaft.scale.y, Shaft.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      new MeshPhongMaterial({\n        color: Shaft.color,\n        side: DoubleSide,\n      })\n    );\n    this.doors = [...Array(floors)].map((v, floor) => {\n      const doors = new Doors({ floor });\n      this.add(doors);\n      return doors;\n    });\n    this.position.x = origin.x * 4;\n    this.position.y = origin.y * 3;\n    this.position.z = -1.5 * Shaft.scale.z;\n    this.add(elevator);\n  }\n}\n\nShaft.color = 0x333333;\nShaft.scale = new Vector3(2, 3, 2);\n\nexport default Shaft;\n","import { Object3D } from 'three';\nimport Dude from '@/actors/dude';\nimport Elevator from './elevator';\nimport Hallway from './hallway';\nimport Shaft from './shaft';\n\nclass Building extends Object3D {\n  constructor({\n    dudes,\n    elevators,\n    floors,\n  }) {\n    super();\n    this.dudes = dudes.map(({\n      pallete,\n      position,\n    }) => {\n      const mesh = new Dude(pallete);\n      mesh.position.copy(position);\n      this.add(mesh);\n      return mesh;\n    });\n    this.elevators = elevators.map(({\n      floors,\n      origin,\n    }) => {\n      const elevator = new Elevator({ floors, origin });\n      const shaft = new Shaft({ elevator });\n      elevator.doors = shaft.doors;\n      this.add(shaft);\n      return elevator;\n    });\n    this.floors = floors.map((rooms, floor) => rooms.map(({ type }, room) => {\n      let isEdge = false;\n      if (room === 0) isEdge = 'left';\n      else if (room === rooms.length - 1) isEdge = 'right';\n      const hasElevator = (\n        this.elevators.findIndex(({\n          floors,\n          origin,\n        }) => (\n          origin.x === room - Math.floor(rooms.length / 2)\n          && origin.y <= floor\n          && origin.y + floors > floor\n        ))\n      ) !== -1;\n      let mesh;\n      switch (type) {\n        default:\n          mesh = new Hallway({\n            hasElevator,\n            isEdge,\n            isLobby: floor === 0,\n          });\n          break;\n      }\n      mesh.position.set(room * 4 - (Math.floor(rooms.length / 2) * 4), floor * 3, 0);\n      this.add(mesh);\n      return mesh;\n    }));\n  }\n\n  onAnimationTick(animation) {\n    const { dudes, elevators } = this;\n    dudes.forEach(dude => dude.onAnimationTick(animation));\n    elevators.forEach((elevator) => {\n      elevator.onAnimationTick(animation);\n      elevator.doors.forEach(door => door.onAnimationTick(animation));\n    });\n  }\n}\n\nexport default Building;\n","import { Vector3 } from 'three';\nimport Dude from '@/actors/dude';\nimport Building from '@/building';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  /* Spawn main dude */\n  const dude = new Dude({\n    arms: 0x222222,\n    eyes: 0x990000,\n    head: 0x333333,\n    legs: 0x222222,\n    torso: 0x990000,\n  });\n  dude.position.set(2, 3, 0);\n  dude.destinationMarker = new Marker();\n  const positionAux = new Vector3();\n  let timer;\n  dude.onDestinationCallback = () => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      if (dude.destination) return;\n      scene.camera.getWorldPosition(positionAux);\n      dude.faceTo(positionAux);\n    }, 5000);\n  };\n  scene.root.add(dude);\n  scene.root.add(dude.destinationMarker);\n  scene.camera.maxHeight = 2.9;\n  scene.camera.target = dude.position;\n\n  /* Spawn test building */\n  const building = new Building({\n    dudes: [...Array(4)].map(() => ({\n      pallete: {\n        arms: 0x222222,\n        eyes: 0x999999 * Math.random(),\n        head: 0x999999 * Math.random(),\n        legs: 0x222222,\n        torso: 0x999999 * Math.random(),\n      },\n      position: new Vector3(\n        (Math.random() * 9 - 4.5) * 2,\n        Math.floor(Math.random() * 3) * 3,\n        0\n      ),\n    })),\n    elevators: [\n      {\n        floors: 2,\n        origin: { x: -1, y: 0 },\n      },\n      {\n        floors: 2,\n        origin: { x: 1, y: 1 },\n      },\n    ],\n    floors: [\n      [...Array(5)].map(() => ({ type: 'hallway' })),\n      [...Array(5)].map(() => ({ type: 'hallway' })),\n      [...Array(5)].map(() => ({ type: 'hallway' })),\n      [...Array(5)].map(() => ({ type: 'hallway' })),\n    ],\n  });\n  scene.root.add(building);\n\n  /* Animation loop */\n  const floor = 1;\n  scene.onAnimationTick = () => {\n    const { camera } = scene;\n    const pointer = input.getPointerFrame();\n    if (camera.processInput(pointer)) {\n      dude.onDestinationCallback();\n    }\n    if (pointer.primaryUp) {\n      const { raycaster } = pointer;\n      raycaster.setFromCamera(pointer.normalized, camera);\n      const hit = raycaster.intersectObjects([\n        // ...building.elevators,\n        ...building.floors[floor],\n      ])[0];\n      if (!hit) return;\n      hit.point.x = Math.min(Math.max(hit.point.x, -9.5), 9.5);\n      hit.point.y = hit.object.position.y;\n      hit.point.z = Math.min(Math.max(hit.point.z, -1.5), 1.5);\n      dude.walkTo(hit.point);\n    }\n  };\n};\n","export { default as debug } from './debug';\nexport { default as game } from './game';\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass GridMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    size = 1,\n    subdivisions = 10,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.phong.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'varying vec3 vPosition;',\n      ].join('\\n')\n    ).replace(\n      '#include <fog_vertex>',\n      [\n        '#include <fog_vertex>',\n        'vPosition = (modelMatrix * vec4( transformed, 1.0 )).xyz;',\n      ].join('\\n')\n    );\n    const primaryGrid = 1 / size;\n    const secondaryGrid = primaryGrid * subdivisions;\n    const fragmentShader = ShaderLib.phong.fragmentShader.replace(\n      '#include <clipping_planes_pars_fragment>',\n      [\n        '#include <clipping_planes_pars_fragment>',\n        'varying vec3 vPosition;',\n        'float getGrid(float scale) {',\n        ' vec2 coord = vPosition.xz * scale;',\n        ' vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);',\n        ' return 1.0 - min(min(grid.x, grid.y), 1.0);',\n        '}',\n      ].join('\\n')\n    ).replace(\n      'vec4 diffuseColor = vec4( diffuse, opacity );',\n      [\n        `float primaryGrid = getGrid(${primaryGrid}${primaryGrid % 1 === 0 ? '.0' : ''});`,\n        `float secondaryGrid = getGrid(${secondaryGrid}${secondaryGrid % 1 === 0 ? '.0' : ''});`,\n        'vec3 grid = mix(mix(diffuse, diffuse * 0.95, secondaryGrid), diffuse * 1.15, primaryGrid);',\n        'vec4 diffuseColor = vec4(grid, opacity);',\n      ].join('\\n')\n    );\n    super({\n      name: `grid-material-${size}-${subdivisions}`,\n      uniforms: UniformsUtils.clone(ShaderLib.phong.uniforms),\n      fragmentShader,\n      vertexShader,\n      extensions: { derivatives: true },\n      fog: true,\n      lights: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default GridMaterial;\n","import Input from '@/engine/input';\nimport Music from '@/engine/music';\nimport Scene from '@/engine/scene';\nimport * as Scenes from '@/scenes';\n\nconst mount = document.getElementById('mount');\nconst input = new Input({ mount });\nconst music = new Music({ toggle: document.getElementById('sound') });\nconst scene = new Scene({ mount });\n\nlet route = window.location.hash.split('/').slice(1)[0];\nif (!Scenes[route]) {\n  window.location.hash = '/game';\n  route = 'game';\n}\nsetImmediate(() => window.addEventListener('hashchange', () => window.location.reload(), false));\n\nfunction onLoad() {\n  document.body.className = 'loaded';\n  Scenes[route]({ input, scene });\n  input.touches.once('end', () => {\n    document.getElementById('splash').style.display = 'none';\n    input.isEnabled = true;\n    music.play();\n  });\n}\n\nfunction waitForFonts(fonts) {\n  let loaded = 0;\n  fonts.forEach(({ font, test }) => {\n    const fontTester = document.createElement('div');\n    fontTester.innerText = test;\n    fontTester.style.position = 'absolute';\n    fontTester.style.fontFamily = 'sans-serif';\n    fontTester.style.top = '-999999px';\n    document.body.appendChild(fontTester);\n    const { width: initialWidth } = fontTester.getBoundingClientRect();\n    fontTester.style.fontFamily = font;\n    const check = () => {\n      const { width } = fontTester.getBoundingClientRect();\n      if (width > initialWidth) {\n        document.body.removeChild(fontTester);\n        loaded += 1;\n        if (loaded === fonts.length) {\n          onLoad();\n        }\n      } else {\n        setTimeout(check, 10);\n      }\n    };\n    check();\n  });\n}\n\nwaitForFonts([\n  { font: \"'Print Char 21'\", test: 'QW@HhsXJ' },\n]);\n"],"sourceRoot":""}