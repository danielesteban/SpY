{"version":3,"sources":["webpack:///./src/engine/camera.js","webpack:///./src/engine/grid.js","webpack:///./src/materials/rain.js","webpack:///./src/engine/rain.js","webpack:///./src/engine/moon.js","webpack:///./src/engine/starfield.js","webpack:///./src/engine/vignette.js","webpack:///./src/engine/scene.js","webpack:///./src/engine/music.js","webpack:///./src/engine/input.js","webpack:///./src/items/bubble.js","webpack:///./src/engine/actor.js","webpack:///./src/actors/dude.js","webpack:///./src/items/marker.js","webpack:///./src/scenes/debug.js","webpack:///./src/actors/thiccboi.js","webpack:///./src/building/elevator/cabin.js","webpack:///./src/items/button.js","webpack:///./src/building/elevator/doors.js","webpack:///./src/building/elevator/shaft.js","webpack:///./src/building/elevator/index.js","webpack:///./src/building/wall.js","webpack:///./src/building/hallway.js","webpack:///./src/engine/walkable.js","webpack:///./src/building/index.js","webpack:///./src/ui/dialog.js","webpack:///./src/ui/elevator.js","webpack:///./src/scenes/game.js","webpack:///./src/scenes/index.js","webpack:///./src/materials/grid.js","webpack:///./src/index.js","webpack:///./src/materials/sprite.js"],"names":["Camera","_this","_classCallCheck","this","_getPrototypeOf","call","distance","maxHeight","Infinity","offset","Vector3","tilt","Math","PI","pitch","speed","step","raycaster","Raycaster","root","Object3D","add","_assertThisInitialized","updateOrbit","PerspectiveCamera","pointer","setFromCamera","far","delta","_ref","position","target","distanceTo","copy","sub","normalize","multiplyScalar","movement","_ref2","secondary","wheel","hasUpdated","x","y","min","max","testMeshes","set","cos","sin","ray","origin","direction","hit","intersectObjects","lookAt","Grid","arguments","length","undefined","_ref$background","background","Color","_ref$size","size","_ref$subdivisions","subdivisions","grid_classCallCheck","geometry","CircleBufferGeometry","translate","rotateX","grid_possibleConstructorReturn","grid_getPrototypeOf","GridMaterial","material","color","Mesh","RainMaterial","_ref$color","rest","_objectWithoutProperties","rain_classCallCheck","vertexShader","ShaderLib","basic","replace","join","rain_possibleConstructorReturn","rain_getPrototypeOf","_objectSpread","name","uniforms","UniformsUtils","clone","fragmentShader","fog","diffuse","value","ShaderMaterial","Rain","engine_rain_classCallCheck","drop","BufferGeometry","fromGeometry","BoxGeometry","attributes","array","offsets","Float32Array","numDrops","InstancedBufferGeometry","addAttribute","BufferAttribute","InstancedBufferAttribute","setDynamic","engine_rain_possibleConstructorReturn","engine_rain_getPrototypeOf","frustumCulled","i","resetDrop","height","testHeight","z","needsUpdate","random","radius","func","Moon","moon_classCallCheck","moon_possibleConstructorReturn","moon_getPrototypeOf","SphereBufferGeometry","MeshBasicMaterial","Starfield","starfield_classCallCheck","count","aux","floor","o","starfield_possibleConstructorReturn","starfield_getPrototypeOf","PointsMaterial","sizeAttenuation","moon","Points","Vignette","vignette_classCallCheck","vignette_possibleConstructorReturn","vignette_getPrototypeOf","camera","OrthographicCamera","sprite","SpriteMaterial","width","map","wrapS","ClampToEdgeWrapping","wrapT","magFilter","NearestFilter","minFilter","LinearFilter","Sprite","Scene","renderer","ctx","grd","createRadialGradient","addColorStop","fillStyle","beginPath","rect","fill","clearDepth","render","_ref$mount","mount","document","body","scene_classCallCheck","clock","Clock","WebGLRenderer","alpha","antialias","autoClear","setAnimationLoop","onAnimate","bind","setPixelRatio","window","devicePixelRatio","sky","setClearColor","appendChild","domElement","Root","FogExp2","AmbientLight","light","DirectionalLight","secondaryLight","grid","rain","starfield","vignette","addEventListener","onResize","ShaderChunk","fog_pars_vertex","fog_vertex","fog_pars_fragment","fog_fragment","stats","begin","animation","getDelta","time","oldTime","onAnimationTick","children","forEach","child","clear","end","_mount$getBoundingCli","getBoundingClientRect","setSize","aspect","updateProjectionMatrix","fixThreeJSFog","QuaternionKeyframeTrack","DefaultInterpolation","InterpolateSmooth","VectorKeyframeTrack","Music","toggle","script","createElement","async","defer","src","check","SC","api","initialize","client_id","tracks","shuffle","track","wantsToPlay","play","setTimeout","index","temp","_this2","player","kill","id","stream","concat","then","on","next","setVolume","catch","button","isPlaying","pause","className","Input","current","Vector2","normalized","last","touches","Touches","preventSimulated","onPointerDown","onPointerMove","onPointerUp","addWheelListener","onPointerWheel","e","preventDefault","frame","primaryDown","primaryUp","secondaryDown","secondaryUp","isEnabled","primary","_ref4","_slicedToArray","_ref3","top","left","_touches$i","clientX","clientY","_ref5","deltaY","_ref6","Bubble","_possibleConstructorReturn","depthTest","scale","visible","lines","delay","_this$material","clearRect","textAlign","textBaseline","shadowColor","shadowBlur","font","fillText","shift","clearTimeout","timer","display","Actor","bonesOrigin","collisionGeometry","actor_classCallCheck","actor_getPrototypeOf","hip","Bone","torso","head","leftArm","rightArm","leftLeg","rightLeg","Skeleton","Object","keys","bone","skeleton","bones","Bones","mixer","AnimationMixer","actor_assertThisInitialized","actions","animations","reduce","action","_defineProperty","clipAction","idle","timeScale","rotationAux","movementAux","collisionMesh","opacity","transparent","wireframe","SkinnedMesh","limbs","merged","Geometry","limb","faces","face","materialIndex","merge","vertices","a","b","c","vertex","skinIndices","push","Vector4","skinWeights","computeVertexNormals","computeBoundingSphere","walkingSpeed","walk","destinationMarker","callback","onDestinationCallback","rotationSpeed","route","targetRotation","update","rotationStep","rotationDelta","rotation","abs","waypoint","path","faceTo","setAnimation","fadeOut","reset","fadeIn","point","angle","bubble","boundingSphere","eulerToQuat","Quaternion","setFromEuler","Euler","toArray","AnimationClip","_toConsumableArray","Dude","palette","dude_classCallCheck","dude_possibleConstructorReturn","dude_getPrototypeOf","CylinderBufferGeometry","CylinderGeometry","SphereGeometry","hat","leftEye","eyes","rightEye","arms","legs","geometryFromLimbs","center","MeshPhongMaterial","skinning","vertexColors","VertexColors","Marker","marker_classCallCheck","marker_possibleConstructorReturn","marker_getPrototypeOf","inc","s","debug","input","scene","pack","dudes","debug_toConsumableArray","Array","v","dude","getPointerFrame","processInput","getRaycaster","intersectObject","walkTo","mainDudeX","mainDudeZ","mainDude","ThiccBoi","thiccboi_classCallCheck","thiccboi_possibleConstructorReturn","thiccboi_getPrototypeOf","Cabin","cabin_classCallCheck","setHSL","splice","cabin_possibleConstructorReturn","cabin_getPrototypeOf","side","DoubleSide","Button","onTap","button_classCallCheck","BoxBufferGeometry","button_possibleConstructorReturn","button_getPrototypeOf","animationVector","ret","tapping","ThreeMath","smoothstep","addScaledVector","Doors","onCall","doors_classCallCheck","doors_possibleConstructorReturn","doors_getPrototypeOf","plane","PlaneGeometry","door","animationScale","state","states","CLOSED","targetState","callButton","PlaneBufferGeometry","MOVING","OPEN","close","open","animationStep","Shaft","floors","shaft_classCallCheck","back","rotateY","shaft_possibleConstructorReturn","shaft_getPrototypeOf","Elevator","elevator_classCallCheck","elevator_getPrototypeOf","animationStart","shaft","doors","elevator_toConsumableArray","elevator","elevator_assertThisInitialized","cabin","passengers","passenger","findIndex","p","travel","to","from","Wall","_ref2$aoTop","aoTop","_ref2$aoBottom","aoBottom","wall_classCallCheck","getGeometry","orientation","wall_possibleConstructorReturn","wall_getPrototypeOf","_ref$aoTop","_ref$aoBottom","_ref$width","_ref$height","wall","ceil","wall_toConsumableArray","j","offsetHSL","Hallway","hasCeiling","hasElevator","isEdge","isLobby","hallway_classCallCheck","hallway_possibleConstructorReturn","hallway_getPrototypeOf","Walkable","walkable_classCallCheck","intersect","walkable_possibleConstructorReturn","walkable_getPrototypeOf","finder","AStarFinder","allowDiagonal","dontCrossCorners","setWalkableAt","worldToGrid","findPath","walkable_slicedToArray","localToWorld","worldToLocal","isWalkableAt","Building","elevators","building_classCallCheck","building_possibleConstructorReturn","building_getPrototypeOf","layout","split","heightmap","building_toConsumableArray","buttons","meshes","rooms","type","room","mesh","indexOf","elevatorIndex","walkable","Dialog","dialog_classCallCheck","wrapper","content","removeChild","tag","node","firstChild","ElevatorUI","onFloor","onExit","empty","unmount","innerText","game","building","reverse","game_toConsumableArray","setHeightTest","getHeight","actors","spawn","addToFloorGrid","game_objectSpread","elevatorUI","_building$floors$floo","object","parent","onDestination","say","getPath","slice","elevatorFloor","show","addPassenger","tap","__webpack_require__","d","__webpack_exports__","lambert","primaryGrid","secondaryGrid","extensions","derivatives","lights","r","setImmediate","fonts","loaded","_engine_input__WEBPACK_IMPORTED_MODULE_0__","_engine_music__WEBPACK_IMPORTED_MODULE_1__","_engine_scene__WEBPACK_IMPORTED_MODULE_2__","_scenes__WEBPACK_IMPORTED_MODULE_3__","getElementById","music","location","hash","Scenes","reload","test","fontTester","style","fontFamily","initialWidth","once","texture","CanvasTexture","getContext","ThreeSprite"],"mappings":"01BAyGeA,cAjGb,SAAAA,IAAc,IAAAC,MAAA,mGAAAC,CAAAC,KAAAH,KACZG,MAAAF,MAAAG,EAAAJ,GAAAK,KAAAF,KAAM,GAAI,EAAG,GAAK,sDACbG,SAAW,EAChBL,EAAKM,UAAYC,IACjBP,EAAKQ,OAAS,IAAIC,IAAQ,EAAG,IAAK,GAClCT,EAAKU,MAAkB,IAAXC,KAAKC,GACjBZ,EAAKa,MAAkB,GAAVF,KAAKC,GAClBZ,EAAKc,MAAQ,KACbd,EAAKe,KAAO,IAAIN,IAChBT,EAAKgB,UAAY,IAAIC,IACrBjB,EAAKkB,KAAO,IAAIC,IAChBnB,EAAKkB,KAAKE,IAAVC,IAAArB,KACAA,EAAKsB,cAZOtB,wPADKuB,mDAgBNC,GAAS,IACZR,EAAcd,KAAdc,UAGR,OAFAA,EAAUS,cAAcD,EAAStB,MACjCc,EAAUU,IAAMnB,IACTS,6CAGkB,IAATW,EAASC,EAATD,MAENE,EAIN3B,KAJFgB,KAAQW,SACRf,EAGEZ,KAHFY,MACAC,EAEEb,KAFFa,KACAe,EACE5B,KADF4B,QAEGA,GAAUD,EAASE,WAAWD,IAAW,KAC9Cf,EACGiB,KAAKF,GACLG,IAAIJ,GACJK,YACAC,eAAeR,EAAQb,GAC1Be,EAAST,IAAIL,4CAOZ,IAHDqB,EAGCC,EAHDD,SACAE,EAECD,EAFDC,UACAC,EACCF,EADDE,MAEIC,GAAa,EACjB,GAAIF,EAAW,CAEbpC,KAAKQ,MADe,KACP0B,EAASK,EACtBvC,KAAKW,OAFe,KAENuB,EAASM,EACvBxC,KAAKW,MAAQF,KAAKgC,IAAIhC,KAAKiC,IAAI1C,KAAKW,OAAkB,IAAXF,KAAKC,IAAuB,IAAVD,KAAKC,IAClE4B,GAAa,EAEf,GAAID,EAAO,CAETrC,KAAKG,SAAWM,KAAKgC,IAAIhC,KAAKiC,IAAI1C,KAAKG,SADnB,KAC+BkC,EAAsB,GAAI,IAC7EC,GAAa,EAGf,OADIA,GAAYtC,KAAKoB,cACdkB,wCAGK,IAEVlC,EAQEJ,KARFI,UACAE,EAOEN,KAPFM,OACAK,EAMEX,KANFW,MACAgB,EAKE3B,KALF2B,SACAb,EAIEd,KAJFc,UACAE,EAGEhB,KAHFgB,KACA2B,EAEE3C,KAFF2C,WACAnC,EACER,KADFQ,KAEIL,EAAaH,KAAbG,SASN,GARAwB,EAASiB,IACPnC,KAAKoC,IAAIrC,GAAQC,KAAKoC,IAAIlC,GAC1BF,KAAKqC,IAAInC,GACTF,KAAKqC,KAAKtC,GAAQC,KAAKoC,IAAIlC,IAC3BqB,YACFlB,EAAUiC,IAAIC,OACXlB,KAAKd,EAAKW,UACVT,IAAIZ,GACHqC,EAAY,CACd7B,EAAUiC,IAAIE,UACXnB,KAAKH,GACRb,EAAUU,IAAMrB,EAChB,IAAM+C,EAAMpC,EAAUqC,iBAAiBR,GAAY,GAC/CO,IACF/C,EAAW+C,EAAI/C,SAAW,KAG9BwB,EACGM,eAAe9B,GACfe,IAAIZ,GACPqB,EAASa,EAAI/B,KAAKgC,IAAIhC,KAAKiC,IAAIf,EAASa,EAAG,IAAMpC,GACjDJ,KAAKoD,OAAOtC,EAAUiC,IAAIC,8rBC1EfK,cAnBb,SAAAA,IAIQ,IAAAvD,EAAA4B,EAAA,EAAA4B,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIG,EAAA/B,EAHNgC,kBAGM,IAAAD,EAHO,IAAIE,IAAM,UAGjBF,EAAAG,EAAAlC,EAFNmC,YAEM,IAAAD,EAFC,EAEDA,EAAAE,EAAApC,EADNqC,oBACM,IAAAD,EADS,GACTA,+FAAAE,CAAAhE,KAAAqD,GACN,IAAMY,EAAW,IAAIC,IAAqB,IAAK,GADzC,OAEND,EAASE,UAAU,EAAG,GAAI,KAC1BF,EAASG,SAAmB,GAAX3D,KAAKC,KACtBZ,EAAAuE,EAAArE,KAAAsE,EAAAjB,GAAAnD,KAAAF,KACEiE,EACA,IAAIM,IAAa,CACfV,OACAE,oBAGCS,SAASC,MAAM7B,IAAIc,GAXlB5D,8OALS4E,sgCC6BJC,cA7Bb,SAAAA,IAGQ,IAAA7E,EAAA4B,EAAA,EAAA4B,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIsB,EAAAlD,EAFN+C,aAEM,IAAAG,EAFE,SAEFA,EADHC,EACGC,EAAApD,EAAA,wGAAAqD,CAAA/E,KAAA2E,GACN,IAAMK,EAAeC,IAAUC,MAAMF,aAAaG,QAChD,yCACA,CACE,yCACA,0BACAC,KAAK,OACPD,QACA,0BACA,CACE,+CACAC,KAAK,OAXH,OAaNtF,EAAAuF,EAAArF,KAAAsF,EAAAX,GAAAzE,KAAAF,+aAAAuF,CAAA,CACEC,KAAM,gBACNC,SAAUC,IAAcC,MAAMV,IAAUC,MAAMO,UAC9CG,eAAgBX,IAAUC,MAAMU,eAChCZ,eACAa,KAAK,GACFhB,MAEAJ,MAAQ3E,EAAK2F,SAASK,QAAQC,MACnCjG,EAAK2E,MAAM7B,IAAI6B,GAtBT3E,8OAJiBkG,wzBCKrBC,cACJ,SAAAA,IAAc,IAAAnG,+FAAAoG,CAAAlG,KAAAiG,GACZ,IAAME,GAAQ,IAAIC,KAAkBC,aACjC,IAAIC,IAAY,IAAM,GAAK,KAAOnC,UAAU,EAAG,IAAM,IACtDoC,WAAW5E,SAAS6E,MAChBC,EAAU,IAAIC,aAA6B,EAAhBT,EAAKU,UAChC1C,EAAW,IAAI2C,IACrB3C,EAAS4C,aAAa,WAAY,IAAIC,IAAgBX,EAAM,IAC5DlC,EAAS4C,aAAa,SAAW,IAAIE,IAAyBN,EAAS,GAAGO,YAAW,KACrFlH,EAAAmH,EAAAjH,KAAAkH,EAAAjB,GAAA/F,KAAAF,KACEiE,EACA,IAAIU,EAAa,CACfF,MAAO,cAGN0C,eAAgB,EACrBrH,EAAKqG,KAAO,IAAI5F,IAChBT,EAAK2G,QAAUA,EACf,IAAK,IAAIW,EAAI,EAAGA,EAAoB,EAAhBnB,EAAKU,SAAcS,GAAK,EAC1CtH,EAAKuH,UAAUD,GAlBL,OAAAtH,wPADG4E,yDA0Bf,IAHyB,IAATjD,EAASC,EAATD,MACRwC,EAAgCjE,KAAhCiE,SAAUwC,EAAsBzG,KAAtByG,QAAS9E,EAAa3B,KAAb2B,SACrBd,EAAe,GAARY,EACJ2F,EAAI,EAAGA,EAAoB,EAAhBnB,EAAKU,SAAcS,GAAK,EAAG,CAC7CX,EAAQW,EAAI,IAAMvG,EAClB,IAAIyG,EAAS,EACTtH,KAAKuH,aACPD,EAAStH,KAAKuH,WAAWd,EAAQW,GAAKzF,EAASY,EAAGkE,EAAQW,EAAI,GAAKzF,EAAS6F,IAE1Ef,EAAQW,EAAI,IAAME,GACpBtH,KAAKqH,UAAUD,GAGnBnD,EAASsC,WAAWjG,OAAOmH,aAAc,oCAGjCL,GAAG,IACHjB,EAA4BnG,KAA5BmG,KAAMM,EAAsBzG,KAAtByG,QAAS9E,EAAa3B,KAAb2B,SACvBwE,EAAKvD,IACFnC,KAAKiH,UAA0B,EAAdzB,EAAK0B,OAAa,GAAM1B,EAAK0B,OAC/C,EACClH,KAAKiH,UAA0B,EAAdzB,EAAK0B,OAAa,GAAM1B,EAAK0B,QAEjD,IAAIL,EAAS7G,KAAKiH,SAAWzB,EAAK0B,OAAS,GACvC3H,KAAKuH,aACPD,EAAS7G,KAAKiC,IAAI4E,EAAQtH,KAAKuH,WAAWpB,EAAK5D,EAAIZ,EAASY,EAAG4D,EAAKqB,EAAI7F,EAAS6F,KAEnFf,EAAQW,GAAKjB,EAAK5D,EAClBkE,EAAQW,EAAI,GAAKE,EACjBb,EAAQW,EAAI,GAAKjB,EAAKqB,wCAGVI,GAAM,IACV3D,EAAajE,KAAbiE,SACRjE,KAAKuH,WAAaK,EAClB,IAAK,IAAIR,EAAI,EAAGA,EAAoB,EAAhBnB,EAAKU,SAAcS,GAAK,EAC1CpH,KAAKqH,UAAUD,GAEjBnD,EAASsC,WAAWjG,OAAOmH,aAAc,uCAI7CxB,EAAKU,SAAW,IAChBV,EAAK0B,OAAS,GAEC1B,6oBC7DA4B,cAXb,SAAAA,IAAc,mGAAAC,CAAA9H,KAAA6H,GAAAE,EAAA/H,KAAAgI,EAAAH,GAAA3H,KAAAF,KAEV,IAAIiI,IAAqB,IAAK,GAAI,IAClC,IAAIC,IAAkB,CACpBzD,MAAO,SACPoB,KAAK,kPANMnB,kpBCuCJyD,cAnCb,SAAAA,IAAc,IAAArI,+FAAAsI,CAAApI,KAAAmI,GAOZ,IANA,IACMR,EAAS,KACT1D,EAAW,IAAImC,IACfzE,EAAW,IAAI+E,aAAa2B,KAC5BxE,EAAO,IAAI6C,aAJH,KAKR4B,EAAM,IAAI/H,IACP6G,EAAI,EAAGA,EANF,IAMaA,GAAK,EAAG,CACjCkB,EAAI1F,IACFnC,KAAK8H,MAAM,KAAA9H,KAAKiH,UAAiCC,EACjDlH,KAAK8H,MAAM,KAAA9H,KAAKiH,UAChBjH,KAAK8H,MAAM,KAAA9H,KAAKiH,UAAiCC,GACjD3F,YAAYC,eAAe0F,GAC7B,IAAMa,EAAQ,EAAJpB,EACVzF,EAAS6G,GAAKF,EAAI/F,EAClBZ,EAAS6G,EAAI,GAAKF,EAAI9F,EACtBb,EAAS6G,EAAI,GAAKF,EAAId,EACtB3D,EAAKuD,GAAK,GAAK3G,KAAK8H,MAAsB,IAAhB9H,KAAKiH,UAjBrB,OAmBZzD,EAAS4C,aAAa,WAAY,IAAIC,IAAgBnF,EAAU,IAChEsC,EAAS4C,aAAa,OAAQ,IAAIC,IAAgBjD,EAAM,KACxD/D,EAAA2I,EAAAzI,KAAA0I,EAAAP,GAAAjI,KAAAF,KACEiE,EACA,IAAI0E,IAAe,CACjBlE,MAAO,SACPoB,KAAK,EACL+C,iBAAiB,OAGhBC,KAAO,IAAIhB,EAChB/H,EAAK+I,KAAKlH,SAASiB,IAAI+E,EAAQA,IAAcA,GAC7C7H,EAAKoB,IAAIpB,EAAK+I,MA/BF/I,8OADQgJ,o0BC0CTC,cAvCb,SAAAA,IAAc,IAAAjJ,EAAA,mGAAAkJ,CAAAhJ,KAAA+I,IACZjJ,EAAAmJ,EAAAjJ,KAAAkJ,EAAAH,GAAA7I,KAAAF,QACKmJ,OAAS,IAAIC,KAAoB,GAAK,GAAK,IAAM,GAAK,EAAG,GAC9DtJ,EAAKuJ,OAAS,IAAIC,IAAe,CAC/BC,MAAO,EACPjC,OAAQ,IAEVxH,EAAKuJ,OAAOG,IAAIC,MAAQC,IACxB5J,EAAKuJ,OAAOG,IAAIG,MAAQD,IACxB5J,EAAKuJ,OAAOG,IAAII,UAAYC,IAC5B/J,EAAKuJ,OAAOG,IAAIM,UAAYC,IAC5BjK,EAAKoB,IAAI,IAAI8I,IAAOlK,EAAKuJ,SAXbvJ,wPADOmK,kDAeO,IAAjBV,EAAiB7H,EAAjB6H,MAAOjC,EAAU5F,EAAV4F,OACR+B,EAAWrJ,KAAXqJ,OACAa,EAAkBb,EAAlBa,SAAUC,EAAQd,EAARc,IACZtG,EAAOpD,KAAKiC,IAAI6G,EAAOjC,GAC7B4C,EAASX,MAAQ1F,EACjBqG,EAAS5C,OAASzD,EAClB,IAAMuG,EAAMD,EAAIE,qBACP,GAAPxG,EAAmB,GAAPA,EAAmB,GAAPA,EACjB,GAAPA,EAAmB,GAAPA,EAAYA,GAE1BuG,EAAIE,aAAa,EAAG,oBACpBF,EAAIE,aAAa,EAAG,oBACpBH,EAAII,UAAYH,EAChBD,EAAIK,YACJL,EAAIM,KAAK,EAAG,EAAG5G,EAAMA,GACrBsG,EAAIO,OACJrB,EAAOG,IAAI/B,aAAc,iCAGpByC,GACLA,EAASS,aACTT,EAASU,OAAO5K,KAAMA,KAAKmJ,uNC3BzBc,aACJ,SAAAA,IAEQ,IAAAY,GAAA,EAAAvH,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,IADFwH,aACM,IAAAD,EADEE,SAASC,KACXH,+FAAAI,CAAAjL,KAAAiK,GACNjK,KAAKmJ,OAAS,IAAItJ,EAClBG,KAAKkL,MAAQ,IAAIC,IACjBnL,KAAK8K,MAAQA,EACb9K,KAAKkK,SAAW,IAAIkB,KAAc,CAChCC,OAAO,EACPC,WAAW,IAEbtL,KAAKkK,SAASqB,WAAY,EAC1BvL,KAAKkK,SAASsB,iBAAiBxL,KAAKyL,UAAUC,KAAK1L,OACnDA,KAAKkK,SAASyB,cAAcC,OAAOC,kBAAoB,GACvD,IAAMC,EAAM,IAAInI,IAAM,SACtB3D,KAAKkK,SAAS6B,cAAcD,GAC5BhB,EAAMkB,YAAYhM,KAAKkK,SAAS+B,YAChCjM,KAAKgB,KAAO,IAAIkL,IAChBlM,KAAKgB,KAAK6E,IAAM,IAAIsG,IAAQL,EAAK,KACjC9L,KAAKgB,KAAKE,IAAI,IAAIkL,IAAa,UAC/B,IAAMC,EAAQ,IAAIC,IAAiB,SAAU,IAC7CD,EAAM1K,SAASiB,IAAI,EAAG,GAAK,GAC3B5C,KAAKgB,KAAKE,IAAImL,GACd,IAAME,EAAiB,IAAID,IAAiB,SAAU,IACtDC,EAAe5K,SAASiB,KAAK,GAAI,GAAK,GACtC5C,KAAKgB,KAAKE,IAAIqL,GACdvM,KAAKgB,KAAKE,IAAIlB,KAAKmJ,OAAOnI,MAC1BhB,KAAKwM,KAAO,IAAInJ,EAAK,CAAEK,WAAY,IAAIC,IAAM,WAC7C3D,KAAKgB,KAAKE,IAAIlB,KAAKwM,MACnBxM,KAAKyM,KAAO,IAAIxG,EAChBjG,KAAKgB,KAAKE,IAAIlB,KAAKyM,MACnBzM,KAAK0M,UAAY,IAAIvE,EACrBnI,KAAKgB,KAAKE,IAAIlB,KAAK0M,WACnB1M,KAAK2M,SAAW,IAAI5D,EACpB6C,OAAOgB,iBAAiB,SAAU5M,KAAK6M,SAASnB,KAAK1L,OAAO,GAC5DA,KAAK6M,yEA4DLC,IAAYC,gBAAkBD,IAAYC,gBAAgB5H,QACxD,0BACA,0BAEF2H,IAAYE,WAAaF,IAAYE,WAAW7H,QAC9C,4BACA,0BAEF2H,IAAYG,kBAAoBH,IAAYG,kBAAkB9H,QAC5D,0BACA,0BAEF2H,IAAYI,aAAeJ,IAAYI,aAAa/H,QAClD,uGACA,CACE,oCACA,sGACAC,KAAK,OACPD,QACA,6DACA,+GAnEQ,IAER+F,EAQElL,KARFkL,MACA/B,EAOEnJ,KAPFmJ,OACAqD,EAMExM,KANFwM,KACAtC,EAKElK,KALFkK,SACAlJ,EAIEhB,KAJFgB,KACA0L,EAGE1M,KAHF0M,UACAS,EAEEnN,KAFFmN,MACAR,EACE3M,KADF2M,SAEEQ,GAAOA,EAAMC,QACjB,IAAMC,EAAY,CAAE5L,MAAOhB,KAAKgC,IAAIyI,EAAMoC,WAAY,GAAIC,KAAMrC,EAAMsC,QAAU,KAC5ExN,KAAKyN,iBACPzN,KAAKyN,gBAAgBJ,GAEvBrM,EAAK0M,SAASC,QAAQ,SAACC,GACjBA,EAAMH,iBACRG,EAAMH,gBAAgBJ,KAGtBlE,EAAOsE,iBACTtE,EAAOsE,gBAAgBJ,GAEzBb,EAAK7K,SAASiB,IAAIuG,EAAOnI,KAAKW,SAASY,EAAG,EAAG4G,EAAOnI,KAAKW,SAAS6F,GAClEkF,EAAU/K,SAASG,KAAK0K,EAAK7K,UAC7BuI,EAAS2D,QACT3D,EAASU,OAAO5J,EAAMmI,GACtBwD,EAAS/B,OAAOV,GACZiD,GAAOA,EAAMW,yCAGR,IAEP3E,EAIEnJ,KAJFmJ,OACA2B,EAGE9K,KAHF8K,MACAZ,EAEElK,KAFFkK,SACAyC,EACE3M,KADF2M,SALOoB,EAOiBjD,EAAMkD,wBAAxBzE,EAPCwE,EAODxE,MAAOjC,EAPNyG,EAOMzG,OACf4C,EAAS+D,QAAQ1E,EAAOjC,GACxB6B,EAAO+E,OAAS3E,EAAQjC,EACxB6B,EAAOgF,yBACPxB,EAASE,SAAS,CAAEtD,QAAOjC,gDA6B/B2C,EAAMmE,gBACNC,IAAwBC,qBAAuBC,IAC/CC,KAAoBF,qBAAuBC,IAE5BtE,sVChJTwE,aAWJ,SAAAA,EAAA/M,GAAwB,IAAA5B,EAAAE,KAAV0O,EAAUhN,EAAVgN,oGAAU3O,CAAAC,KAAAyO,GACtB,IAwBME,EAAS5D,SAAS6D,cAAc,UACtCD,EAAOE,OAAQ,EACfF,EAAOG,OAAQ,EACfH,EAAOI,IAAM,kDACbhE,SAASC,KAAKgB,YAAY2C,GAXZ,SAARK,IACCpD,OAAOqD,IAjBZnP,EAAKoP,IAAMtD,OAAOqD,GAClBnP,EAAKoP,IAAIC,WAAW,CAClBC,UAAW,qCAMbtP,EAAKuP,OAASZ,EAAMa,QAAQ,CAAC,SAAS,SAAS,UAAU,UAAU,SAAS,SAAS,QAAQ,SAAS,SAAS,UAAU,UAAU,SAAS,SAAS,UAAU,UAC/JxP,EAAKyP,MAAQ,EACbb,EAAO9B,iBAAiB,QAAS,kBAAM9M,EAAK4O,OAAOA,KAAS,GACxD5O,EAAK0P,qBACA1P,EAAK0P,YACZ1P,EAAK2P,SAKLC,WAAWV,EAAO,IAUtBA,kDAxCaK,GACb,IAAK,IAAIM,EAAQN,EAAO9L,OAAS,EAAY,GAAToM,EAAYA,GAAS,EAAG,CAC1D,IAAMjI,EAASjH,KAAK8H,MAAM9H,KAAKiH,SAAW2H,EAAO9L,QAC3CqM,EAAOP,EAAOM,GACpBN,EAAOM,GAASN,EAAO3H,GACvB2H,EAAO3H,GAAUkI,EAEnB,OAAOP,wCAqCPrP,KAAKuP,OAASvP,KAAKuP,MAAQ,GAAKvP,KAAKqP,OAAO9L,OAC5CvD,KAAKyP,sCAGA,IAAAI,EAAA7P,KAEHkP,EAIElP,KAJFkP,IACAY,EAGE9P,KAHF8P,OACAP,EAEEvP,KAFFuP,MACAF,EACErP,KADFqP,OAEF,GAAKH,EAAL,CAIIY,IACFA,EAAOC,cACA/P,KAAK8P,QAEd,IAAME,EAAKX,EAAOE,GACd,EACJL,EAAIe,OAAJ,WAAAC,OAAsBF,IAAMG,KAAK,SAACL,IAChCD,EAAKC,OAASA,GACPM,GAAG,cAAe,kBAAMP,EAAKQ,SACpCP,EAAOM,GAAG,SAAU,kBAAMP,EAAKQ,SAC/BP,EAAOQ,UAAU,IACjBR,EAAOL,SACNc,MAAM,WACPV,EAAKQ,cAhBLrQ,KAAKwP,aAAc,iCAoBhBgB,GAAQ,IACLV,EAAW9P,KAAX8P,OACHA,IACDA,EAAOW,aACTX,EAAOY,QACPF,EAAOG,UAAY,UAEnBH,EAAOG,UAAY,GACnBb,EAAOL,kBAKEhB,spBCtFTmC,aACJ,SAAAA,EAAAlP,GAEG,IAAAmJ,EAAAnJ,EADDoJ,aACC,IAAAD,EADOE,SAASC,KAChBH,+FAAA9K,CAAAC,KAAA4Q,GACD5Q,KAAK8K,MAAQA,EACb9K,KAAKsB,QAAU,CACbuP,QAAS,IAAIC,IAAQ,EAAG,GACxB5O,SAAU,CAAEK,EAAG,EAAGC,EAAG,GACrBuO,WAAY,IAAID,IAAQ,EAAG,GAC3BE,KAAM,IAAIF,IAAQ,EAAG,GACrBzO,MAAO,GAETrC,KAAKiR,QAAUC,IAAQtF,OAAQ,CAC7BuF,kBAAkB,EAClBvP,OAAQkJ,IAEPsF,GAAG,QAASpQ,KAAKoR,cAAc1F,KAAK1L,OACpCoQ,GAAG,OAAQpQ,KAAKqR,cAAc3F,KAAK1L,OACnCoQ,GAAG,MAAOpQ,KAAKsR,YAAY5F,KAAK1L,OACnCuR,2BAAiB3F,OAAQ5L,KAAKwR,eAAe9F,KAAK1L,OAClD4L,OAAOgB,iBAAiB,cAAe,SAAA6E,GAAC,OAAIA,EAAEC,mBAAkB,GAChE9F,OAAOgB,iBAAiB,SAAU5M,KAAK6M,SAASnB,KAAK1L,OAAO,GAC5DA,KAAK6M,4EAGW,IACRvL,EAAYtB,KAAZsB,QACFqQ,4aAAKpM,CAAA,GAAQjE,GAOnB,OANAA,EAAQsQ,aAAc,EACtBtQ,EAAQuQ,WAAY,EACpBvQ,EAAQwQ,eAAgB,EACxBxQ,EAAQyQ,aAAc,EACtBzQ,EAAQY,SAAW,CAAEK,EAAG,EAAGC,EAAG,GAC9BlB,EAAQe,MAAQ,EACTsP,wCAGKF,GAAG,IACPO,EAAuBhS,KAAvBgS,UAAW1Q,EAAYtB,KAAZsB,QACnB,GAAK0Q,EAAL,CAFe,IAGPxB,EAAoBiB,EAApBjB,OAAQS,EAAYQ,EAAZR,QAChB,GAAIA,EAcF,OAbqB,EAAjBA,EAAQ1N,QACVkO,EAAEC,sBAECpQ,EAAQc,YACY,IAAnB6O,EAAQ1N,QACVjC,EAAQ2Q,SAAU,EAClB3Q,EAAQsQ,aAAc,IAEtBtQ,EAAQc,WAAY,EACpBd,EAAQwQ,eAAgB,EACxBxQ,EAAQ2Q,SAAU,KAKxB,OAAQzB,GACN,KAAK,EACHlP,EAAQ2Q,SAAU,EAClB3Q,EAAQsQ,aAAc,EACtB,MACF,KAAK,EACHtQ,EAAQc,WAAY,EACpBd,EAAQwQ,eAAgB,+CAMK,IAAnBb,EAAmB9O,EAAnB8O,QAAmBiB,EAAAC,EAAAC,EAAA,GAAP7P,EAAO2P,EAAA,GAAJ1P,EAAI0P,EAAA,GACzBF,EAA6BhS,KAA7BgS,UAAW1Q,EAAkBtB,KAAlBsB,QAASmJ,EAASzK,KAATyK,KAC5B,GAAKuH,EAAL,CACA,GAAIf,EAAS,CAIX,IAJW,IACHoB,EAAc5H,EAAd4H,IAAKC,EAAS7H,EAAT6H,KAGJlL,EADT5E,EADAD,EAAI,EAEY6E,EAAI6J,EAAQ1N,OAAQ6D,GAAK,EAAG,KAAAmL,EACbtB,EAAQ7J,GACrC7E,GAF0CgQ,EAClCC,QACQF,EAChB9P,GAH0C+P,EACzBE,QAEDJ,EAElB9P,GAAK0O,EAAQ1N,OACbf,GAAKyO,EAAQ1N,OAbkB,IAezBgG,EAAkBkB,EAAlBlB,MAAOjC,EAAWmD,EAAXnD,OACfhG,EAAQuP,QAAQtO,EAAIA,EACpBjB,EAAQuP,QAAQrO,EAAIA,EACpBlB,EAAQyP,WAAWxO,EAAMA,EAAIgH,EAAS,EAAK,EAC3CjI,EAAQyP,WAAWvO,EAAI,EAAMA,EAAI8E,EAAU,EAC3ChG,EAAQY,SAAW,CACjBK,EAAGjB,EAAQuP,QAAQtO,EAAIjB,EAAQ0P,KAAKzO,EACpCC,EAAGlB,EAAQuP,QAAQrO,EAAIlB,EAAQ0P,KAAKxO,GAEtClB,EAAQ0P,KAAKlP,KAAKR,EAAQuP,iDAGK,IAAnBL,EAAmBkC,EAAnBlC,OAAQS,EAAWyB,EAAXzB,QACZe,EAAuBhS,KAAvBgS,UAAW1Q,EAAYtB,KAAZsB,QACnB,GAAK0Q,EAAL,CACA,GAAIf,EASF,OARI3P,EAAQ2Q,UACV3Q,EAAQ2Q,SAAU,EAClB3Q,EAAQuQ,WAAY,QAElBvQ,EAAQc,YACVd,EAAQc,WAAY,EACpBd,EAAQyQ,aAAc,IAI1B,OAAQvB,GACN,KAAK,EACHlP,EAAQ2Q,SAAU,EAClB3Q,EAAQuQ,WAAY,EACpB,MACF,KAAK,EACHvQ,EAAQc,WAAY,EACpBd,EAAQyQ,aAAc,8CAMD,IAAVY,EAAUC,EAAVD,OACPX,EAAuBhS,KAAvBgS,UAAW1Q,EAAYtB,KAAZsB,QACd0Q,IACL1Q,EAAQe,MAAQsQ,sCAGP,IACD7H,EAAU9K,KAAV8K,MACR9K,KAAKyK,KAAOK,EAAMkD,6DAKP4C,u3BCrGAiC,cAlCb,SAAAA,IAAc,IAAA/S,EAAA,mGAAAC,CAAAC,KAAA6S,IACZ/S,EAAAgT,EAAA9S,KAAAC,EAAA4S,GAAA3S,KAAAF,KAAM,IAAIsJ,IAAe,CACvBC,MAAO,IACPjC,OAAQ,GACRyL,WAAW,OAERC,MAAMpQ,IAAI,EAAG,KAAO,GACzB9C,EAAKmT,SAAU,EAPHnT,wPADKkK,8CAWXkJ,GAAqB,IAAArD,EAAA7P,KAAdmT,EAAc,EAAA7P,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,KAAM8P,EACDpT,KAAKwE,SAAvB0F,EADmBkJ,EACnBlJ,SAAUC,EADSiJ,EACTjJ,IACVZ,EAAkBW,EAAlBX,MAAOjC,EAAW4C,EAAX5C,OACf6C,EAAIkJ,UAAU,EAAG,EAAG9J,EAAOjC,GAC3B6C,EAAII,UAAY,OAChBJ,EAAImJ,UAAY,SAChBnJ,EAAIoJ,aAAe,SACnBpJ,EAAIqJ,YAAc,qBAClBrJ,EAAIsJ,WAAa,GACjBtJ,EAAIuJ,KAAO,iCACXvJ,EAAIwJ,SAAST,EAAMU,QAAiB,GAARrK,EAAsB,GAATjC,GACzCtH,KAAKwE,SAASgF,IAAI/B,aAAc,EAChCzH,KAAKiT,SAAU,EACfY,aAAa7T,KAAK8T,OAClB9T,KAAK8T,MAAQpE,WAAW,WAClBwD,EAAM3P,OACRsM,EAAKkE,QAAQb,EAAOC,GAGtBtD,EAAKoD,SAAU,GACdE,qxCCjBDa,cAyBJ,SAAAA,EAAAtS,GAKG,IAAA5B,MAJDmU,EAICvS,EAJDuS,YACAC,EAGCxS,EAHDwS,kBACAjQ,EAECvC,EAFDuC,SACAO,EACC9C,EADD8C,sGACC2P,CAAAnU,KAAAgU,KACDhU,OAAAoU,EAAAJ,GAAA9T,KAAAF,KACEiE,EACAO,GAFF1E,mDAIA,IAAMuU,EAAM,IAAIC,IAChBxU,EAAKoB,IAAImT,GACT,IAAME,EAAQ,IAAID,IAClBD,EAAInT,IAAIqT,GACR,IAAMC,EAAO,IAAIF,IACjBC,EAAMrT,IAAIsT,GACV,IAAMC,EAAU,IAAIH,IACpBC,EAAMrT,IAAIuT,GACV,IAAMC,EAAW,IAAIJ,IACrBC,EAAMrT,IAAIwT,GACV,IAAMC,EAAU,IAAIL,IACpBD,EAAInT,IAAIyT,GACR,IAAMC,EAAW,IAAIN,IAjBpB,OAkBDD,EAAInT,IAAI0T,GACR9U,EAAK4L,KAAK,IAAImJ,IAAS,CACrBR,EACAE,EACAC,EACAC,EACAC,EACAC,EACAC,KAEFE,OAAOC,KAAKd,GAAatG,QAAQ,SAACqH,GAChClV,EAAKmV,SAASC,MAAMlB,EAAMmB,MAAMH,IAAOrT,SAASG,KAAKmS,EAAYe,MAEnElV,EAAKsV,MAAQ,IAAIC,IAAJC,IAAAxV,KACbA,EAAKyV,QAAUT,OAAOC,KAAKf,EAAMwB,YAAYC,OAAO,SAACF,EAASG,GAAV,yUAAAnQ,CAAA,GAC/CgQ,EAD+CI,EAAA,GAEjDD,EAAS5V,EAAKsV,MAAMQ,WAAW5B,EAAMwB,WAAWE,OAC/C,IACJ5V,EAAKuN,UAAY,OACjBvN,EAAKyV,QAAQM,KAAKC,UAAY,GAC9BhW,EAAKyV,QAAQM,KAAKpG,OAClB3P,EAAKiW,YAAc,IAAIjF,IACvBhR,EAAKkW,YAAc,IAAIzV,IACvBT,EAAKmW,cAAgB,IAAIvR,IACvBwP,EACA,IAAIhM,IAAkB,CACpBgO,QAAS,GACTC,aAAa,EACblD,SAAS,EACTmD,WAAW,KAGftW,EAAKoB,IAAIpB,EAAKmW,eAlDbnW,8OA9BeuW,0DACOC,GACvB,IAAMC,EAAS,IAAIC,IACnB1B,OAAOC,KAAKuB,GAAO3I,QAAQ,SAAC8I,GAC1BH,EAAMG,GAAMC,MAAM/I,QAAQ,SAACgJ,GACzBA,EAAKC,cAAgB5C,EAAMmB,MAAMsB,KAEnCF,EAAOM,MAAMP,EAAMG,MAErBF,EAAOG,MAAM/I,QAAQ,SAACgJ,GACpBJ,EAAOO,SAASH,EAAKI,GAAG/B,KAAO2B,EAAKC,cACpCL,EAAOO,SAASH,EAAKK,GAAGhC,KAAO2B,EAAKC,cACpCL,EAAOO,SAASH,EAAKM,GAAGjC,KAAO2B,EAAKC,cACpCD,EAAKC,cAAgB,IAEvBL,EAAOO,SAASnJ,QAAQ,SAACuJ,GACvBX,EAAOY,YAAYC,KAAK,IAAIC,KAAQH,EAAOlC,KAAM,EAAG,EAAG,IACvDuB,EAAOe,YAAYF,KAAK,IAAIC,KAAQ,EAAG,EAAG,EAAG,MAE/C,IAAMpT,GAAY,IAAImC,KAAkBC,aAAakQ,GAGrD,OAFAtS,EAASsT,uBACTtT,EAASuT,wBACFvT,oDA6DkB,IAATxC,EAASU,EAATV,MAEgBgW,EAS5BzX,KATFuV,QAAWmC,KAAQ5B,UACnB6B,EAQE3X,KARF2X,kBACAvC,EAOEpV,KAPFoV,MACAY,EAMEhW,KANFgW,YACuB4B,EAKrB5X,KALF6X,sBACAlW,EAIE3B,KAJF2B,SACAmW,EAGE9X,KAHF8X,cACAC,EAEE/X,KAFF+X,MACAC,EACEhY,KADFgY,eAGF,GADA5C,EAAM6C,OAAOxW,QACU+B,IAAnBwU,EAA8B,CAChC,IAAME,EAAezW,EAAQqW,EACvBK,EAAgBH,EAAiBhY,KAAKoY,SAAS5V,EACrDxC,KAAKoY,SAAS5V,GAAK/B,KAAKgC,IACtBhC,KAAKiC,IACHyV,GACCD,GAEHA,GAEEzX,KAAK4X,IAAIF,IAAkBD,UACtBlY,KAAKgY,eAGhB,GAAKD,EAAL,CACA,IAAMO,EAAWP,EAAMQ,KAAKR,EAAMlH,SAC5B1Q,EAAWwB,EAASE,WAAWyW,GAC/BzX,EAAe,IAARY,EAAcgW,EAQ3B,GAPA9V,EAAST,IACP8U,EACGlU,KAAKwW,GACLvW,IAAIJ,GACJK,YACAC,eAAexB,KAAKgC,IAAItC,EAAUU,OAExBA,EAAXV,GAAJ,CAGA,GAAI4X,EAAMlH,QAAUkH,EAAMQ,KAAKhV,OAAS,EAGtC,OAFAwU,EAAMlH,SAAW,OACjB7Q,KAAKwY,OAAOT,EAAMQ,KAAKR,EAAMlH,UAG/B7Q,KAAKyY,aAAa,eACXzY,KAAK+X,MACRJ,IACFA,EAAkB1E,SAAU,GAE1B2E,WACK5X,KAAK6X,sBACZD,4CAISvK,GAAW,IACdkI,EAAYvV,KAAZuV,QACJvV,KAAKqN,YAAcA,IACvBkI,EAAQvV,KAAKqN,WAAWqL,QAAQ,IAChC1Y,KAAKqN,UAAYA,EACjBkI,EAAQvV,KAAKqN,WACVsL,QACAC,OAAO,IACPnJ,qCAGA8I,EAAMX,GAAU,IACXD,EAAgC3X,KAAhC2X,kBACFxX,EADkCH,KAAb2B,SACDE,WAAW0W,EAAKA,EAAKhV,OAAS,WACjDvD,KAAK6X,sBACK,IAAb1X,GAIJH,KAAKyY,aAAa,QAClBzY,KAAK+X,MAAQ,CACXlH,QAAS,EACT0H,QAEEZ,IACFA,EAAkBhW,SAASG,KAAKyW,EAAKA,EAAKhV,OAAS,IACnDoU,EAAkB1E,SAAU,GAE1B2E,IACF5X,KAAK6X,sBAAwBD,GAE/B5X,KAAKwY,OAAOD,EAAK,KAfXX,GAAUA,mCAkBXiB,GAGL,IAHY,IACJlX,EAA0B3B,KAA1B2B,SACFmX,EAD4B9Y,KAAhB+V,YACQnT,IAAIiW,EAAMtW,EAAIZ,EAASY,EAAGsW,EAAMrR,EAAI7F,EAAS6F,GAAGsR,QACnE9Y,KAAKoY,SAAS5V,GAAK/B,KAAKC,IAAIV,KAAKoY,SAAS5V,GAAe,EAAV/B,KAAKC,GAC3D,KAAOV,KAAKoY,SAAS5V,EAAI/B,KAAKC,IAAIV,KAAKoY,SAAS5V,GAAe,EAAV/B,KAAKC,GAE1D,IADAV,KAAKgY,eAA4B,GAAVvX,KAAKC,GAAYoY,EACjC9Y,KAAKgY,gBAAkBvX,KAAKC,IAAIV,KAAKgY,gBAA4B,EAAVvX,KAAKC,GACnE,KAAOV,KAAKgY,eAAiBvX,KAAKC,IAAIV,KAAKgY,gBAA4B,EAAVvX,KAAKC,GAC7DV,KAAKgY,eAAiBhY,KAAKoY,SAAS5V,EAAK/B,KAAKC,GACjDV,KAAKgY,gBAA4B,EAAVvX,KAAKC,GAClBV,KAAKgY,eAAiBhY,KAAKoY,SAAS5V,GAAM/B,KAAKC,KACzDV,KAAKgY,gBAA4B,EAAVvX,KAAKC,IAE9BV,KAAK8X,cAAkE,IAAlDrX,KAAK4X,IAAIrY,KAAKgY,eAAiBhY,KAAKoY,SAAS5V,+BAGhE0Q,EAAOC,GACJnT,KAAK+Y,SACR/Y,KAAK+Y,OAAS,IAAIlG,EAClB7S,KAAK+Y,OAAOpX,SAASiB,IAAI,EAAyC,KAAtC5C,KAAKiE,SAAS+U,eAAerR,OAAe,GACxE3H,KAAKkB,IAAIlB,KAAK+Y,SAEG/Y,KAAX+Y,OACDhF,QAAQb,EAAOC,YAI1Ba,EAAMmB,MAAQ,CACZd,IAAK,EACLE,MAAO,EACPC,KAAM,EACNC,QAAS,EACTC,SAAU,EACVC,QAAS,EACTC,SAAU,GAGZ,IAAMqE,EAAc,SAAC1W,EAAGC,EAAGgF,GAAP,OAAc,IAAI0R,KAAcC,aAAa,IAAIC,IAAM7W,EAAGC,EAAGgF,IAAI6R,WAErFrF,EAAMwB,WAAa,CACjBK,KACE,IAAIyD,IAAc,OAAQ,EAAG,CAC3B,IAAIjL,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMZ,MADxB,gBAEE,IAAI7N,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAY,GAAc,IAAXxY,KAAKC,GAAY,IADrCwP,OAAAqJ,EAEKN,EAAY,EAAa,IAAVxY,KAAKC,GAAW,IAFpC6Y,EAGKN,EAAY,GAAc,IAAXxY,KAAKC,GAAY,OAGvC,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMX,KADxB,gBAEE,IAAI9N,aAAa,CACf,EACA,IACA,IAEF,IAAIA,aAAJ6S,EACKN,GAAuB,KAAXxY,KAAKC,GAAa,GAAc,KAAXD,KAAKC,KAD3CwP,OAAAqJ,EAEKN,GAAuB,KAAXxY,KAAKC,GAAa,EAAa,KAAVD,KAAKC,KAF3C6Y,EAGKN,GAAuB,KAAXxY,KAAKC,GAAa,GAAc,KAAXD,KAAKC,QAG7C,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMV,QADxB,gBAEE,IAAI/N,aAAa,CACf,EACA,IACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAY,EAAG,GAAc,IAAXxY,KAAKC,KAD5BwP,OAAAqJ,EAEKN,EAAY,EAAG,GAAc,GAAXxY,KAAKC,KAF5B6Y,EAGKN,EAAY,EAAG,GAAc,IAAXxY,KAAKC,QAG9B,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMT,SADxB,gBAEE,IAAIhO,aAAa,CACf,EACA,IACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAY,EAAG,EAAa,IAAVxY,KAAKC,KAD5BwP,OAAAqJ,EAEKN,EAAY,EAAG,EAAa,GAAVxY,KAAKC,KAF5B6Y,EAGKN,EAAY,EAAG,EAAa,IAAVxY,KAAKC,UAKlCgX,KACE,IAAI4B,IAAc,OAAQ,EAAG,CAC3B,IAAIjL,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMZ,MADxB,gBAEE,IAAI7N,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,GAAuB,IAAXxY,KAAKC,GAAY,EAAa,IAAVD,KAAKC,KAD1CwP,OAAAqJ,EAEKN,EAAsB,IAAVxY,KAAKC,GAAW,GAAc,IAAXD,KAAKC,KAFzC6Y,EAGKN,GAAuB,IAAXxY,KAAKC,GAAY,EAAa,IAAVD,KAAKC,QAG5C,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMX,KADxB,gBAEE,IAAI9N,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAY,EAAG,GAAc,KAAXxY,KAAKC,KAD5BwP,OAAAqJ,EAEKN,EAAY,EAAG,EAAa,KAAVxY,KAAKC,KAF5B6Y,EAGKN,EAAY,EAAG,GAAc,KAAXxY,KAAKC,QAG9B,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMV,QADxB,gBAEE,IAAI/N,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAsB,GAAVxY,KAAKC,GAAU,EAAG,IADnCwP,OAAAqJ,EAEKN,GAAuB,GAAXxY,KAAKC,GAAW,GAAc,GAAXD,KAAKC,KAFzC6Y,EAGKN,EAAsB,GAAVxY,KAAKC,GAAU,EAAG,OAGrC,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMT,SADxB,gBAEE,IAAIhO,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,GAAuB,GAAXxY,KAAKC,GAAW,EAAa,GAAVD,KAAKC,KADzCwP,OAAAqJ,EAEKN,EAAsB,GAAVxY,KAAKC,GAAU,EAAG,IAFnC6Y,EAGKN,GAAuB,GAAXxY,KAAKC,GAAW,EAAa,GAAVD,KAAKC,QAG3C,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMR,QADxB,gBAEE,IAAIjO,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,GAAuB,IAAXxY,KAAKC,GAAY,EAAa,IAAVD,KAAKC,KAD1CwP,OAAAqJ,EAEKN,EAAsB,IAAVxY,KAAKC,GAAW,GAAc,IAAXD,KAAKC,KAFzC6Y,EAGKN,GAAuB,IAAXxY,KAAKC,GAAY,EAAa,IAAVD,KAAKC,QAG5C,IAAI2N,IAAJ,UAAA6B,OACY8D,EAAMmB,MAAMP,SADxB,gBAEE,IAAIlO,aAAa,CACf,EACA,GACA,IAEF,IAAIA,aAAJ6S,EACKN,EAAsB,IAAVxY,KAAKC,GAAW,GAAc,IAAXD,KAAKC,KADzCwP,OAAAqJ,EAEKN,GAAuB,IAAXxY,KAAKC,GAAY,EAAa,IAAVD,KAAKC,KAF1C6Y,EAGKN,EAAsB,IAAVxY,KAAKC,GAAW,GAAc,IAAXD,KAAKC,WAOlCsT,6oBC3WTwF,cACJ,SAAAA,EAAYC,GAAS,mGAAAC,CAAA1Z,KAAAwZ,GAAAG,EAAA3Z,KAAA4Z,EAAAJ,GAAAtZ,KAAAF,KACb,CACJiU,YAAauF,EAAKtE,MAClBhB,kBACG,IAAI2F,IAAuB,IAAM,IAAM,KACrC1V,UAAU,EAAG,GAAK,GAEvBF,SAAUuV,EAAKvV,SAASwV,GACxBjV,SAAUgV,EAAKhV,wPATFwP,QAcnBwF,EAAKtE,MAAQ,CACXb,IAAK,IAAI9T,IAAQ,EAAG,GAAK,GACzBgU,MAAO,IAAIhU,IAAQ,EAAG,EAAG,GACzBiU,KAAM,IAAIjU,IAAQ,EAAG,IAAM,GAC3BkU,QAAS,IAAIlU,KAAS,IAAM,KAAO,GACnCmU,SAAU,IAAInU,IAAQ,IAAM,KAAO,GACnCoU,QAAS,IAAIpU,KAAS,KAAO,EAAG,GAChCqU,SAAU,IAAIrU,IAAQ,KAAO,EAAG,IAGlCiZ,EAAKvV,SAAW,SAACwV,GACf,IAAMlF,EAAQ,IAAIuF,IAAiB,KAAO,IAAM,GAAK,GACrDvF,EAAMpQ,UAAU,EAAG,IAAM,GACzBoQ,EAAMmC,MAAM/I,QAAQ,SAACgJ,GACnBA,EAAKlS,MAAM7B,IAAI6W,EAAQlF,OAAS,YAElC,IAAMC,EAAO,IAAIuF,IAAe,GAAK,EAAG,GAKxC,GAJAvF,EAAKrQ,UAAU,EAAG,GAAK,GACvBqQ,EAAKkC,MAAM/I,QAAQ,SAACgJ,GAClBA,EAAKlS,MAAM7B,IAAI6W,EAAQjF,QAErBiF,EAAQO,IAAK,CACf,IAAMA,EAAM,IAAIF,IAAiB,GAAK,GAAK,KACrCzH,EAAM,IAAIyH,IAAiB,GAAK,GAAK,IAC3CzH,EAAIlO,UAAU,EAAG,IAAM,GACvB6V,EAAInD,MAAMxE,GACV2H,EAAI7V,UAAU,EAAG,GAAK,GACtB6V,EAAItD,MAAM/I,QAAQ,SAACgJ,GACjBA,EAAKlS,MAAM7B,IAAI6W,EAAQO,OAEzBxF,EAAKqC,MAAMmD,GAEb,IAAMC,EAAU,IAAIF,IAAe,KACnCE,EAAQvD,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQS,QAEzB,IAAMC,EAAWF,EAAQtU,QACzBsU,EAAQ9V,WAAW,GAAK,GAAK,KAC7BgW,EAAShW,UAAU,GAAK,GAAK,KAC7BqQ,EAAKqC,MAAMoD,GACXzF,EAAKqC,MAAMsD,GACX,IAAM1F,EAAU,IAAIqF,IAAiB,IAAM,IAAM,GAAK,GACtDrF,EAAQiC,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQW,QAEzB,IAAM1F,EAAWD,EAAQ9O,QACzB8O,EAAQtQ,UAAU,GAAI,GAAK,GAC3BuQ,EAASvQ,UAAU,GAAI,GAAK,GAC5B,IAAMwQ,EAAU,IAAImF,IAAiB,IAAM,IAAM,GAAK,GACtDnF,EAAQ+B,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQY,QAEzB,IAAMzF,EAAWD,EAAQhP,QACzBgP,EAAQxQ,UAAU,GAAI,IAAM,GAC5ByQ,EAASzQ,UAAU,GAAI,IAAM,GAC7B,IAAMF,EAAW+P,EAAMsG,kBAAkB,CACvC/F,QACAC,OACAC,UACAC,WACAC,UACAC,aAIF,OAFA3Q,EAAS+U,eAAeuB,OAAO3X,IAAI,EAAG,GAAK,GAC3CqB,EAAS+U,eAAerR,OAAS,GAC1B1D,GAGTuV,EAAKhV,SAAW,IAAIgW,IAAkB,CACpCC,UAAU,EACVC,aAAcC,OAGDnB,mzBClEAoB,cAxBb,SAAAA,IAAc,IAAA9a,+FAAA+a,CAAA7a,KAAA4a,GACZ,IAAM3W,EAAW,IAAIC,IAAqB,IAAM,IADpC,OAEZD,EAASG,SAAmB,GAAX3D,KAAKC,IACtBuD,EAASE,UAAU,EAAG,KAAO,IAC7BrE,EAAAgb,EAAA9a,KAAA+a,EAAAH,GAAA1a,KAAAF,KACEiE,EACA,IAAIuW,IAAkB,CACpB/V,MAAO,QACP0R,aAAa,OAGZlD,SAAU,EAXHnT,wPADK4E,yDAeO,IAAR6I,EAAQ7L,EAAR6L,KACR/I,EAA6BxE,KAA7BwE,SAAUwO,EAAmBhT,KAAnBgT,MAClB,GADqChT,KAAZiT,QACzB,CACA,IAAM+H,EAAkC,MAA1B,EAAIva,KAAKqC,IAAW,EAAPyK,IACrB0N,EAAI,IAAOD,EACjBhI,EAAMpQ,IAAIqY,EAAG,EAAGA,GAChBzW,EAAS0R,QAAU,IAAO8E,+wBCxBf,IAAAE,EAAA,SAAAxZ,GAAsB,IAAnByZ,EAAmBzZ,EAAnByZ,MAAOC,EAAY1Z,EAAZ0Z,MACjBC,EAAO,CACXC,MAAOC,EAAIC,MAAM,KAAKhS,IAAI,SAACiS,EAAGrU,GAC5B,IAAMsU,EAAO,IAAIlC,EAAK,CACpBY,KAAM,QACNF,KAAY,IAAN9S,EAAU,SAAY,SAAW3G,KAAKiH,SAC5C8M,KAAY,IAANpN,EAAU,QAAY,SAAW3G,KAAKiH,SAC5CsS,IAAqB,GAAhBvZ,KAAKiH,UAAkB,SAAWjH,KAAKiH,SAC5C2S,KAAM,QACN9F,MAAa,IAANnN,EAAU,SAAY,SAAW3G,KAAKiH,WAI/C,OAFAgU,EAAK/Z,SAASiB,IAAInC,KAAK8H,OAAOnB,EAAI,GAAK,KAAOA,EAAI,GAAK,GAAM,EAAI,GAAK,GAAI,EAAG,GAC7EgU,EAAMpa,KAAKE,IAAIwa,GACRA,IAETjO,gBAdW,WAcO,IACRtE,EAAiBiS,EAAjBjS,OAAQqD,EAAS4O,EAAT5O,KACVlL,EAAU6Z,EAAMQ,kBAEtB,GADAxS,EAAOyS,aAAata,GAChBA,EAAQuQ,UAAW,CACrB,IACM3O,EADYiG,EAAO0S,aAAava,EAAQyP,YACxB+K,gBAAgBtP,GAAM,GAC5C,IAAKtJ,EAAK,OACVmY,EAAKU,OAAO7Y,EAAI2V,SAGpBkD,OAzBW,SAyBJlD,GAAO,IACDmD,EAA4BnD,EAA/BtW,EAAiB0Z,EAAcpD,EAAjBrR,EACtBxH,KAAKsb,MAAM3N,QAAQ,SAAC+N,EAAMtU,GACxByR,EAAMtW,EAAIyZ,EAAYvb,KAAK8H,OAAOnB,EAAI,GAAK,KAAOA,EAAI,GAAK,GAAM,EAAI,GAAK,GAC1EyR,EAAMrR,EAAIyU,GAAuC,EAA3Bxb,KAAK8H,OAAOnB,EAAI,GAAK,GACnC,EAAJA,IACFyR,EAAMtW,GAAsB,EAAhB9B,KAAKiH,SAAgB,EACjCmR,EAAMrR,GAAsB,EAAhB/G,KAAKiH,SAAgB,EACjCgU,EAAKnG,QAAQmC,KAAK5B,UAAY,GAAsB,GAAhBrV,KAAKiH,UAE3CgU,EAAKhE,KAAK,CAACmB,EAAMlT,cAKhBuW,EAzC4B/J,EAyChBkJ,EAAKC,MAzCW,MA0CnCY,EAASvE,kBAAoB,IAAIiD,EACjCQ,EAAMpa,KAAKE,IAAIgb,EAASvE,mBACxByD,EAAMjS,OAAOvH,OAASsa,EAASva,SAE/ByZ,EAAMjS,OAAOhJ,SAAW,EACxBib,EAAMjS,OAAOxI,MAAkB,KAAVF,KAAKC,GAC1B0a,EAAMjS,OAAO/H,cAEbga,EAAM3N,gBAAkB4N,EAAK5N,gBAAgB/B,KAAK2P,yoBC3C9Cc,cACJ,SAAAA,EAAY1C,GAAS,mGAAA2C,CAAApc,KAAAmc,GAAAE,EAAArc,KAAAsc,EAAAH,GAAAjc,KAAAF,KACb,CACJiU,YAAakI,EAASjH,MACtBhB,kBACG,IAAI2F,IAAuB,IAAM,IAAM,KACrC1V,UAAU,EAAG,GAAK,GAEvBF,SAAUkY,EAASlY,SAASwV,GAC5BjV,SAAU2X,EAAS3X,wPATFwP,QAcvBmI,EAASjH,MAAQ,CACfb,IAAK,IAAI9T,IAAQ,EAAG,GAAK,GACzBgU,MAAO,IAAIhU,IAAQ,EAAG,EAAG,GACzBiU,KAAM,IAAIjU,IAAQ,EAAG,GAAK,GAC1BkU,QAAS,IAAIlU,KAAS,KAAO,IAAM,GACnCmU,SAAU,IAAInU,IAAQ,KAAO,IAAM,GACnCoU,QAAS,IAAIpU,KAAS,IAAM,GAAK,GACjCqU,SAAU,IAAIrU,IAAQ,IAAM,GAAK,IAGnC4b,EAASlY,SAAW,SAACwV,GAEnB,IAAMlF,EAAQ,IAAIwF,IAAe,IAAM,EAAG,GAC1CxF,EAAMpQ,UAAU,EAAG,IAAM,GACzBoQ,EAAMvB,MAAM,IAAK,EAAG,KACpBuB,EAAMmC,MAAM/I,QAAQ,SAACgJ,GACnBA,EAAKlS,MAAM7B,IAAI6W,EAAQlF,OAAS,YAElC,IAAMC,EAAO,IAAIsF,IAAiB,KAAO,IAAM,GAAK,GAMpD,GAJAtF,EAAKrQ,UAAU,EAAG,GAAK,GACvBqQ,EAAKkC,MAAM/I,QAAQ,SAACgJ,GAClBA,EAAKlS,MAAM7B,IAAI6W,EAAQjF,QAErBiF,EAAQO,IAAK,CACf,IAAMA,EAAM,IAAIF,IAAiB,GAAK,GAAK,KACrCzH,EAAM,IAAIyH,IAAiB,GAAK,GAAK,IAC3CzH,EAAIlO,UAAU,EAAG,IAAM,GACvB6V,EAAInD,MAAMxE,GACV2H,EAAI7V,UAAU,EAAG,GAAK,GACtB6V,EAAItD,MAAM/I,QAAQ,SAACgJ,GACjBA,EAAKlS,MAAM7B,IAAI6W,EAAQO,OAEzBxF,EAAKqC,MAAMmD,GAEb,IAAMC,EAAU,IAAIF,IAAe,KACnCE,EAAQvD,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQS,QAEzB,IAAMC,EAAWF,EAAQtU,QACzBsU,EAAQ9V,WAAW,GAAK,GAAK,KAC7BgW,EAAShW,UAAU,GAAK,GAAK,KAC7BqQ,EAAKqC,MAAMoD,GACXzF,EAAKqC,MAAMsD,GACX,IAAM1F,EAAU,IAAIqF,IAAiB,IAAM,KAAO,GAAK,GACvDrF,EAAQiC,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQW,QAEzB,IAAM1F,EAAWD,EAAQ9O,QACzB8O,EAAQtQ,UAAU,GAAI,IAAM,GAC5BuQ,EAASvQ,UAAU,GAAI,IAAM,GAC7B,IAAMwQ,EAAU,IAAImF,IAAiB,IAAM,GAAK,GAAK,GACrDnF,EAAQ+B,MAAM/I,QAAQ,SAACgJ,GACrBA,EAAKlS,MAAM7B,IAAI6W,EAAQY,QAEzB,IAAMzF,EAAWD,EAAQhP,QACzBgP,EAAQxQ,UAAU,GAAI,GAAK,GAC3ByQ,EAASzQ,UAAU,GAAI,GAAK,GAC5B,IAAMF,EAAW+P,EAAMsG,kBAAkB,CACvC/F,QACAC,OACAC,UACAC,WACAC,UACAC,aAIF,OAFA3Q,EAAS+U,eAAeuB,OAAO3X,IAAI,EAAG,GAAK,GAC3CqB,EAAS+U,eAAerR,OAAS,GAC1B1D,GAGTkY,EAAS3X,SAAW,IAAIgW,IAAkB,CACxCC,UAAU,EACVC,aAAcC,OAGDwB,6oBC1DAI,cA/Bb,SAAAA,EAAA7a,GAGG,IAFD+C,EAEC/C,EAFD+C,MACAuO,EACCtR,EADDsR,mGACCwJ,CAAAxc,KAAAuc,GACD,IAAMtY,EAAW,IAAIqC,IACnB,KAAO,KAAO,KACd0M,EAAMzQ,EAAGyQ,EAAMxQ,EAAGwQ,EAAMxL,GAEpBc,EAAM,IAAI3E,IAChBM,EAASyS,MAAM/I,QAAQ,SAACgJ,EAAMvP,GACxBA,EAAI,GAAM,GACZkB,EAAImU,OAAOhc,KAAKiH,SAAU,IAAM,IAAwB,KAAhBjH,KAAKiH,UAE/CiP,EAAKlS,MAAM3C,KAAKwG,KAElBrE,EAASE,UAAU,EAAG,GAAK,GAC3B,IAAK,IAAIiD,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAC3BnD,EAASyS,MAAMgG,OAAO,GAAI,GAd3B,OAgBDzY,EAAS+O,MAAMA,EAAMzQ,EAAGyQ,EAAMxQ,EAAGwQ,EAAMxL,GAhBtCmV,EAAA3c,KAAA4c,EAAAL,GAAArc,KAAAF,MAkBE,IAAIoG,KAAkBC,aAAapC,GACpC,IAAIuW,IAAkB,CACpB/V,QACAoY,KAAMC,IACNpC,aAAcC,qPA1BFjW,wzBC6CLqY,cA9Cb,SAAAA,EAAArb,GAAiC,IAAA5B,EAAnBkd,EAAmBtb,EAAnBsb,MAAOrb,EAAYD,EAAZC,sGAAYsb,CAAAjd,KAAA+c,GAC/B,IAAM9Y,EAAW,IAAIiZ,IAAkB,GAAK,IAAM,KADnB,OAE/BjZ,EAASE,UAAU,EAAG,EAAG,OACzBrE,EAAAqd,EAAAnd,KAAAod,EAAAL,GAAA7c,KAAAF,KACEiE,EACA,IAAIuW,IAAkB,CACpB/V,MAAO,aAGN4I,UAAY,EACjBvN,EAAKud,gBAAkB,IAAI9c,IAAQ,EAAG,GAAI,KAC1CT,EAAKkd,MAAQA,EACbld,EAAK6B,SAASG,KAAKH,GACnB7B,EAAKkD,OAASrB,EAASgE,QAbQ7F,wPADd4E,4CAiBb,IAGA4Y,EAFIN,EAAmBhd,KAAnBgd,MACR,OAD2Bhd,KAAZud,UAGXP,IACFM,EAAMN,KAERhd,KAAKqN,UAAY,EACjBrN,KAAKud,SAAU,EACRD,8CAGkB,IAAT7b,EAASU,EAATV,MACR4b,EAAqCrd,KAArCqd,gBAAiBra,EAAoBhD,KAApBgD,OACzB,GAD6ChD,KAAZud,QACjC,CACAvd,KAAKqN,UAAY5M,KAAKgC,IAAIzC,KAAKqN,UAAqB,IAAR5L,EAAe,GACpC,IAAnBzB,KAAKqN,kBACArN,KAAKud,QAEd,IAAM1c,EAAO2c,IAAUC,WAC0C,GAA7C,GAAjBzd,KAAKqN,UAAkB,EAAIrN,KAAKqN,UAAYrN,KAAKqN,WAClD,EACA,GAEFrN,KAAK2B,SACFG,KAAKkB,GACL0a,gBAAgBL,EAAiBxc,61BCnClC8c,eACJ,SAAAA,EAAAjc,GAIG,IAAA5B,EAHD2E,EAGC/C,EAHD+C,MACAmZ,EAEClc,EAFDkc,OACA5K,EACCtR,EADDsR,mGACC6K,CAAA7d,KAAA2d,GACD7d,EAAAge,GAAA9d,KAAA+d,GAAAJ,GAAAzd,KAAAF,OACA,IAAMge,EAAQ,IAAIC,IAAc,GAAK,EAAa,GAAVjL,EAAMzQ,EAASyQ,EAAMxQ,GACvD8F,EAAM,IAAI3E,IAChBqa,EAAMtH,MAAM/I,QAAQ,SAACgJ,EAAMvP,GACrBA,EAAI,GAAM,GACZkB,EAAImU,OAAOhc,KAAKiH,SAAU,IAAM,IAAwB,KAAhBjH,KAAKiH,UAE/CiP,EAAKlS,MAAM3C,KAAKwG,KAElB0V,EAAMhL,MAAMA,EAAMzQ,EAAGyQ,EAAMxQ,EAAGwQ,EAAMxL,GAEpC,IADA,IAAMvD,GAAY,IAAImC,KAAkBC,aAAa2X,GAC5C5W,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,IAAM8W,EAAO,IAAIxZ,IACfT,EACA,IAAIuW,IAAkB,CACpB/V,QACAoY,KAAMC,IACNpC,aAAcC,QAGlBuD,EAAKvc,SAASiB,KACE,IAAJwE,EAAR,KAAqB4L,EAAMzQ,EAC7B,GAAMyQ,EAAMxQ,EACZ,KAAQwQ,EAAMxL,GAEhB1H,EAAKoB,IAAIgd,GA1BV,OA4BDpe,EAAKuN,UAAY,EACjBvN,EAAKqe,eAAiBnL,EAAMzQ,EAC5BzC,EAAKse,MAAQT,EAAMU,OAAOC,OAC1Bxe,EAAKye,YAAcze,EAAKse,MACxBte,EAAK0e,WAAa,IAAIzB,EAAO,CAC3BC,MAAOY,EACPjc,SAAU,IAAIpB,IAAQ,GAAMyS,EAAMzQ,EAAI,EAAI,EAAKyQ,EAAMxQ,EAAG,GAAMwQ,EAAMxL,KAEtE1H,EAAKoB,IAAIpB,EAAK0e,YACd1e,EAAKmW,cAAgB,IAAIvR,IACvB,IAAI+Z,IAAoB,EAAG,GACxBzL,MAAMA,EAAMzQ,EAAGyQ,EAAMxQ,EAAG,GACxB2B,UAAU,EAAa,GAAV6O,EAAMxQ,EAAmB,GAAVwQ,EAAMxL,GACrC,IAAIU,IAAkB,CACpBgO,QAAS,GACTC,aAAa,EACblD,SAAS,EACTmD,WAAW,KAGftW,EAAKoB,IAAIpB,EAAKmW,eAhDbnW,yPALemB,6CAyDhBjB,KAAKoe,MAAQT,EAAMU,OAAOK,OAC1B1e,KAAKue,YAAcZ,EAAMU,OAAOM,qCAIhC3e,KAAKoe,MAAQT,EAAMU,OAAOK,OAC1B1e,KAAKue,YAAcZ,EAAMU,OAAOC,wCAKhC,OADkBte,KAAVoe,OAEN,KAAKT,EAAMU,OAAOM,KAChB3e,KAAK4e,QACL,MACF,KAAKjB,EAAMU,OAAOC,OAChBte,KAAK6e,gDAOKxR,GAAW,IAEvB8Q,EAIEne,KAJFme,eACAzQ,EAGE1N,KAHF0N,SACA0Q,EAEEpe,KAFFoe,MACAG,EACEve,KADFue,YAGF,GADAve,KAAKwe,WAAW/Q,gBAAgBJ,GAC5B+Q,IAAUT,EAAMU,OAAOK,OAA3B,CARyB,IAUnBI,EAAwB,IADZzR,EAAV5L,MAER,OAAQ8c,GACN,KAAKZ,EAAMU,OAAOM,KAChB3e,KAAKqN,UAAY5M,KAAKgC,IAAIzC,KAAKqN,UAAYyR,EAAe,GACnC,IAAnB9e,KAAKqN,YACPrN,KAAKoe,MAAQT,EAAMU,OAAOM,MAE5B,MACF,KAAKhB,EAAMU,OAAOC,OAChBte,KAAKqN,UAAY5M,KAAKiC,IAAI1C,KAAKqN,UAAYyR,EAAe,GACnC,IAAnB9e,KAAKqN,YACPrN,KAAKoe,MAAQT,EAAMU,OAAOC,QAOhC,IADA,IAAMzd,EAAoD,GAA7C2c,IAAUC,WAAWzd,KAAKqN,UAAW,EAAG,GAC5CjG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BsG,EAAStG,GAAGzF,SAASY,GAAkB,IAAJ6E,EAAR,IAAqBvG,GAAc,IAANuG,GAAW,EAAI,IAAO+W,0CAKpFR,GAAMU,OAAS,CACbM,KAAM,EACNL,OAAQ,EACRI,OAAQ,GAGKf,upBC3FAoB,eAnCb,SAAAA,EAAArd,GAIG,IAHD+C,EAGC/C,EAHD+C,MACAua,EAECtd,EAFDsd,OACAhM,EACCtR,EADDsR,mGACCiM,CAAAjf,KAAA+e,GAED,IADA,IAAMxI,EAAS,IAAIC,IACVpP,EAAI,EAAGA,GAAK4X,EAAQ5X,GAAK,EAAG,CACnC,GAAU,IAANA,GAAWA,IAAM4X,EAAQ,CAC3B,IAAMzW,EAAQ,IAAI0V,IAAc,EAAG,GAInC,GAHA1V,EAAMnE,SAAmB,GAAX3D,KAAKC,IACnB6H,EAAMpE,UAAU,EAAGiD,EAAG,GACtBmP,EAAOM,MAAMtO,GACTnB,IAAM4X,EAAQ,MAEpB,IAAME,EAAO,IAAIjB,IAAc,EAAG,GAClCiB,EAAK/a,UAAU,EAAGiD,EAAI,IAAM,IAC5BmP,EAAOM,MAAMqI,GACb,IAAMrC,EAAO,IAAIoB,IAAc,EAAG,GAClCpB,EAAKsC,SAAmB,GAAX1e,KAAKC,IAClBmc,EAAK1Y,WAAW,GAAKiD,EAAI,GAAK,GAC9BmP,EAAOM,MAAMgG,GACbA,EAAK1Y,UAAU,EAAG,EAAG,GACrBoS,EAAOM,MAAMgG,GAlBd,OAoBDtG,EAAOvD,MAAMA,EAAMzQ,EAAGyQ,EAAMxQ,EAAGwQ,EAAMxL,GApBpC4X,GAAApf,KAAAqf,GAAAN,GAAA7e,KAAAF,MAsBE,IAAIoG,KAAkBC,aAAakQ,GACpC,IAAIiE,IAAkB,CACpB/V,QACAoY,KAAMC,qPA9BMpY,klCCAd4a,eACJ,SAAAA,EAAA5d,GAGG,IAAA5B,MAFDkf,EAECtd,EAFDsd,OACAhc,EACCtB,EADDsB,OACC,mGAAAuc,CAAAvf,KAAAsf,KACDtf,OAAAwf,GAAAF,GAAApf,KAAAF,OAAAF,sDACKkf,OAASA,EACdlf,EAAKkD,OAASA,EACdlD,EAAK2f,eAAiC,IAAhBhf,KAAKiH,SAE3B5H,EAAK4f,MAAQ,IAAIX,GAAM,CACrBta,MAAO6a,EAASI,MAChBV,SACAhM,MAAOsM,EAAStM,QAElBlT,EAAKoB,IAAIpB,EAAK4f,OAEd5f,EAAK6f,MAAQC,GAAIpE,MAAMwD,IAASxV,IAAI,SAACiS,EAAGlT,GACtC,IAAMoX,EAAQ,IAAIhC,GAAM,CACtBlZ,MAAO6a,EAASK,MAChB/B,OAAQ,kBAAM9d,EAAK8d,OAAOrV,IAC1ByK,MAAOsM,EAAStM,QAKlB,OAHA2M,EAAM1J,cAAc4J,SAApBC,MAAAhgB,IACA6f,EAAMhe,SAASa,EAAI+F,EAAQ+W,EAAStM,MAAMxQ,EAC1C1C,EAAKoB,IAAIye,GACFA,IAGT7f,EAAKigB,MAAQ,IAAIxD,EAAM,CACrB9X,MAAO6a,EAASS,MAChB/M,MAAOsM,EAAStM,QAElBlT,EAAKoB,IAAIpB,EAAKigB,OACdjgB,EAAK6B,SAAS6F,GAAK,IAAM8X,EAAStM,MAAMxL,EACxC1H,EAAKyI,MAAQ,EACbzI,EAAKkgB,WAAa,GAhCjBlgB,yPAJkBmB,mDAuCRgf,GACYjgB,KAAfggB,WACG5I,KAAK6I,2CAGFA,GAAW,IACjBD,EAAehgB,KAAfggB,WACFrQ,EAAQqQ,EAAWE,UAAU,SAAAC,GAAC,OAAKA,IAAMF,KAC1CtQ,GACHqQ,EAAWtD,OAAO/M,EAAO,2CAIbtC,GAAW,IAEvB0S,EAKE/f,KALF+f,MACAJ,EAIE3f,KAJF2f,MACAK,EAGEhgB,KAHFggB,WACAre,EAEE3B,KAFF2B,SACAoW,EACE/X,KADF+X,MAEF,GAAIA,EAAO,CACTA,EAAMlX,MAA2B,GAAlBwM,EAAU5L,MAAehB,KAAK4X,IAAIN,EAAMqI,QACrC,GAAdrI,EAAMlX,OACRkX,EAAMlX,KAAO,EACb8e,EAAM5H,EAAMsI,IAAIxB,OAChB7e,KAAKuI,MAAQwP,EAAMsI,UACZrgB,KAAK+X,MACRA,EAAMH,UACRG,EAAMH,YAGV,IAAM/W,EAAO2c,IAAUC,WAAW1F,EAAMlX,KAAM,EAAG,GAAKkX,EAAMqI,OAC5DL,EAAMpe,SAASa,GAAKuV,EAAMuI,KAAOzf,GAAQye,EAAStM,MAAMxQ,EACxDwd,EAAWrS,QAAQ,SAACsS,GAClBA,EAAUte,SACPG,KAAKie,EAAMpe,UACXT,IAAIS,KAGXge,EAAMhS,QAAQ,SAAAuQ,GAAI,OAAIA,EAAKzQ,gBAAgBJ,oCAGtC9E,EAAOqP,GAAU,IACdG,EAAiB/X,KAAjB+X,MAAO4H,EAAU3f,KAAV2f,MACX5H,IACAxP,IAAUvI,KAAKuI,OAInBoX,EAAM3f,KAAKuI,OAAOqW,QAClB5e,KAAK+X,MAAQ,CACXH,WACA0I,KAAMtgB,KAAKuI,MACX8X,GAAI9X,EACJ6X,OAAQ7X,EAAQvI,KAAKuI,MACrB1H,KAAM,IATN8e,EAAMpX,GAAOmG,iDAcnB4Q,GAAStM,MAAQ,IAAIzS,IAAQ,EAAG,EAAG,GACnC+e,GAASS,MAAQ,QACjBT,GAASK,MAAQ,QACjBL,GAASI,MAAQ,QAEFJ,iqCCvGTiB,yBA2CJ,SAAAA,IAGQ,IAAApe,EAAA,EAAAmB,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIkd,EAAAre,EAFNse,aAEM,IAAAD,KAAAE,EAAAve,EADNwe,gBACM,IAAAD,kGAAAE,CAAA5gB,KAAAugB,GACN,IAAMtc,EAAWsc,EAAKM,YAAY,CAChCJ,QACAE,WACAG,YAAa,WACbtc,SAAU,IALN,OAONP,EAASE,UAAU,EAAG,IAAM,IAC5BF,EAAS+O,MAAMuN,EAAKvN,MAAMzQ,EAAGge,EAAKvN,MAAMxQ,EAAG+d,EAAKvN,MAAMxL,GARhDuZ,GAAA/gB,KAAAghB,GAAAT,GAAArgB,KAAAF,MAUH,IAAIoG,KAAkBC,aAAapC,GACpC,IAAIuW,IAAkB,CACpBqC,KAAMC,IACNpC,aAAcC,sPA3DHjW,oDAQd,IAAAuc,EAAAvf,EAND+e,aAMC,IAAAQ,KAAAC,EAAAxf,EALDif,gBAKC,IAAAO,KAAAC,EAAAzf,EAJD6H,aAIC,IAAA4X,EAJO,EAIPA,EAAAC,EAAA1f,EAHD4F,cAGC,IAAA8Z,EAHQ,EAGRA,EAFD5c,EAEC9C,EAFD8C,SACAsc,EACCpf,EADDof,YAEMO,EAAO,IAAIpD,IACf1U,EACAjC,EACA7G,KAAK6gB,KAAK/X,EAAQgX,EAAKvN,MAAMzQ,GAC7B9B,KAAK6gB,KAAKha,GAA0B,eAAhBwZ,EAA+BP,EAAKvN,MAAMzQ,EAAIge,EAAKvN,MAAMxQ,KAEzEiC,EAAQ,IAAId,IAyBlB,OAxBA0d,EAAK3K,MAAM/I,QAAQ,SAACgJ,EAAMvP,GACpBA,EAAI,GAAM,GACZ3C,EAAMgY,OAAOhc,KAAKiH,SAAU,IAAM,IAAwB,KAAhBjH,KAAKiH,UAEjDiP,EAAKC,cAAgBpS,EACrB,IAAMsS,EAAW,CACfuK,EAAKvK,SAASH,EAAKI,GACnBsK,EAAKvK,SAASH,EAAKK,GACnBqK,EAAKvK,SAASH,EAAKM,IAErBN,EAAK+D,aAAe6G,GAAI/F,MAAM,IAAIhS,IAAI,SAACiS,EAAG+F,GACxC,IAAMvK,EAAIxS,EAAMkB,QAOhB,OALG8a,GAAShgB,KAAK4X,IAAIvB,EAAS0K,GAAGhf,EAAa,GAAT8E,GAAgB,MAC/CqZ,GAAYlgB,KAAK4X,IAAIvB,EAAS0K,GAAGhf,IAAc,GAAV8E,GAAiB,OAE1D2P,EAAEwK,UAAU,EAAG,GAAI,IAEdxK,MAGS,eAAhB6J,GACFO,EAAKjd,SAAmB,GAAX3D,KAAKC,IAEb2gB,iDAyBXd,GAAKvN,MAAQ,IAAIzS,IAAQ,EAAG,EAAG,GAEhBggB,upBCEAmB,eApEb,SAAAA,EAAAhgB,GAKG,IAJDigB,EAICjgB,EAJDigB,WACAC,EAGClgB,EAHDkgB,YACAC,EAECngB,EAFDmgB,OACAC,EACCpgB,EADDogB,qGACCC,CAAA/hB,KAAA0hB,GACD,IAAMnL,EAAS,IAAIC,IACbjO,EAAQgY,GAAKM,YAAY,CAC7BF,UAAWmB,EACXtd,SAAU,EACVsc,YAAa,eAGf,GADAvK,EAAOM,MAAMtO,GACTqZ,EAAa,CACf,IAAMP,EAAOd,GAAKM,YAAY,CAC5BJ,MAAOkB,EACPpY,MAAO,IACP/E,SAAU,IAEZ6c,EAAKld,WAAW,KAAO,IAAM,IAC7BoS,EAAOM,MAAMwK,GACbA,EAAKld,UAAU,IAAM,EAAG,GACxBoS,EAAOM,MAAMwK,OACR,CACL,IAAMA,EAAOd,GAAKM,YAAY,CAC5BJ,MAAOkB,EACPnd,SAAU,IAEZ6c,EAAKld,UAAU,EAAG,IAAM,IACxBoS,EAAOM,MAAMwK,GAEf,IAAKS,EAAS,CACZ,IAAMT,EAAOd,GAAKM,YAAY,CAC5BJ,OAAO,EACPnZ,OAAQ,EAAI,EACZ9C,SAAU,IAKZ,GAHA6c,EAAKlC,QAAQ1e,KAAKC,IAClB2gB,EAAKld,UAAU,EAAG,EAAI,EAAI,EAAG,IAC7BoS,EAAOM,MAAMwK,GACTQ,EAAQ,CACV,IAAMR,EAAOd,GAAKM,YAAY,CAC5BJ,OAAO,EACPnZ,OAAQ,EAAI,EACZ9C,SAAU,IAEZ6c,EAAKlC,QAAkB,GAAV1e,KAAKC,IAAuB,SAAXmhB,EAAoB,GAAK,IACvDR,EAAKld,UAAqB,SAAX0d,GAAqB,GAAM,GAAK,EAAI,EAAI,EAAG,GAC1DtL,EAAOM,MAAMwK,IA3ChB,OA8CD9K,EAAOvD,MAAMuN,GAAKvN,MAAMzQ,EAAGge,GAAKvN,MAAMxQ,EAAG+d,GAAKvN,MAAMxL,GA9CnDwa,GAAAhiB,KAAAiiB,GAAAP,GAAAxhB,KAAAF,MAgDE,IAAIoG,KAAkBC,aAAakQ,GACpC,CACE,IAAIhS,KAAa,CACfsY,KAAMC,IACNpC,aAAcC,OAEhB,IAAIH,IAAkB,CACpBqC,KAAMC,IACNpC,aAAcC,uPA9DFjW,iuCCmDPwd,eAlDb,SAAAA,EAAY1V,GAAM,IAAA1M,+FAAAqiB,CAAAniB,KAAAkiB,GAChB,IAAMje,EAAW,IAAIuS,IACfjO,EAAQ,IAAI0V,IAAc,KAAM,KAAM,EAAG,GAC/C1V,EAAMnE,SAAmB,GAAX3D,KAAKC,IACnB6H,EAAMpE,UAAU,EAAG,EAAG,KACtB,IAAMie,EAAY,IAAInE,IAAc,KAAM,KAAM,EAAG,GALnC,OAMhBmE,EAAUje,UAAU,EAAG,IAAK,GAC5BF,EAAS4S,MAAMtO,GACftE,EAAS4S,MAAMuL,IACftiB,EAAAuiB,GAAAriB,KAAAsiB,GAAAJ,GAAAhiB,KAAAF,MACG,IAAIoG,KAAkBC,aAAapC,GACpC,IAAIiE,IAAkB,CACpBiO,aAAa,EACblD,SAAS,OAGRsP,OAAS,IAAIC,eAAY,CAC5BC,eAAe,EACfC,kBAAkB,IAEpB5iB,EAAK0M,KAAO,IAAInJ,QAAKmJ,GACrB1M,EAAK0M,KAAKmW,cAAc,EAAG,GAAG,GArBd7iB,yPADG4E,8CAyBb4b,EAAMD,GAAI,IAAAxQ,EAAA7P,KACRwM,EAAiBxM,KAAjBwM,KAAM+V,EAAWviB,KAAXuiB,OAGd,OAFAjC,EAAOtgB,KAAK4iB,YAAYtC,GACxBD,EAAKrgB,KAAK4iB,YAAYvC,GACfkC,EAAOM,SAASvC,EAAK/d,EAAG+d,EAAK9Y,EAAG6Y,EAAG9d,EAAG8d,EAAG7Y,EAAGgF,EAAK7G,SAAS6D,IAAI,SAAA9H,GAAA,IAAAS,EAAA2gB,GAAAphB,EAAA,GAAEa,EAAFJ,EAAA,GAAKqF,EAALrF,EAAA,UACnE0N,EAAKkT,aAAa,IAAIxiB,IAAQgC,EAAI,GAAK,EAAGiF,EAAI,2CAItCqR,GAAO,IACTrM,EAAmBxM,KAAnBwM,KAAM7K,EAAa3B,KAAb2B,SASd,IARAkX,EAAMrW,EAAIb,EAASa,EACnBxC,KAAKgjB,aAAanK,GAClBA,EAAMtW,EAAI9B,KAAKgC,IAAIhC,KAAKiC,IAAImW,EAAMtW,EAAG,GAAIiK,EAAKjD,MAAQ,GACtDsP,EAAMrR,EAAI/G,KAAKgC,IAAIhC,KAAKiC,IAAImW,EAAMrR,EAAG,GAAIgF,EAAKlF,OAAS,GACvDuR,EAAQ,CACNtW,EAAG9B,KAAK8H,MAAMsQ,EAAMtW,GACpBiF,EAAG/G,KAAK8H,MAAMsQ,EAAMrR,KAEdgF,EAAKyW,aAAapK,EAAMtW,EAAGsW,EAAMrR,IAAMqR,EAAMrR,EAAIgF,EAAKlF,OAAS,GACrEuR,EAAMrR,GAAK,EAEb,OAAOqR,mrCC8EIqK,eAjIb,SAAAA,EAAAxhB,GAGG,IAAA5B,EAFDqjB,EAECzhB,EAFDyhB,UACAnE,EACCtd,EADDsd,oGACCoE,CAAApjB,KAAAkjB,IACDpjB,EAAAujB,GAAArjB,KAAAsjB,GAAAJ,GAAAhjB,KAAAF,QACKmjB,UAAYA,EAAU3Z,IAAI,SAAArH,GAGzB,IAFJ6c,EAEI7c,EAFJ6c,OACAhc,EACIb,EADJa,OAEM6c,EAAW,IAAIP,GAAS,CAAEN,SAAQhc,WAIxC,OAHA6c,EAASle,SAASY,EAAe,EAAXS,EAAOT,EAC7Bsd,EAASle,SAASa,EAAe,EAAXQ,EAAOR,EAC7B1C,EAAKoB,IAAI2e,GACFA,IAET,IAAMtW,EAAQyV,EAAOvJ,OAAO,SAAClM,EAAOga,GAAR,OAAmB9iB,KAAKiC,IAAI6G,EAAiC,EAA1Bga,EAAOC,MAAM,IAAIjgB,SAAa,GAZ5F,OAaDzD,EAAK2jB,UAAYC,GAAIlI,MAAM,IAAIhS,IAAI,kBAAMka,GAAIlI,MAAMjS,IAAQC,IAAI,kBAAO,MACtE1J,EAAKkf,OAASA,EAAOxV,IAAI,SAAC+Z,EAAQhb,GAChC,IAAMob,EAAU,GACVR,EAAY,GACZS,EAAS,GACTC,EAAQN,EAAOC,MAAM,IACrBhX,EAAOkX,GAAIlI,MAAM,IAAIhS,IAAI,kBAAMka,GAAIlI,MAAqB,EAAfqI,EAAMtgB,SAAaiG,IAAI,kBAAO,MAC7Eqa,EAAMlW,QAAQ,SAACmW,EAAMC,GACnB,IAAIC,EACJ,OAAQF,GACN,IAAK,IACH,OACF,IAAK,IACHE,EAAO,IAAIzD,GACX,MACF,IAAK,IACL,QACE,IAAIsB,GAAS,EACA,IAATkC,IAAe,CAAC,IAAK,KAAKE,QAAQJ,EAAME,EAAO,IAAKlC,EAAS,QACxDkC,IAASF,EAAMtgB,OAAS,IAAM,CAAC,IAAK,KAAK0gB,QAAQJ,EAAME,EAAO,OAAKlC,EAAS,SACrF,IAAMF,EAAapZ,EAAQyW,EAAOzb,OAAS,IAAgE,IAA3D,CAAC,IAAK,KAAK0gB,QAAQjF,EAAOzW,EAAQ,GAAGib,MAAM,IAAIO,IACzFG,EACJpkB,EAAKqjB,UAAUjD,UAAU,SAAA9N,GAAA,IACvB4M,EADuB5M,EACvB4M,OACAhc,EAFuBoP,EAEvBpP,OAFuB,OAIvBA,EAAOT,IAAMwhB,GACV/gB,EAAOR,GAAK+F,GACZvF,EAAOR,EAAIwc,EAASzW,IAGrBqZ,GAAesC,EACrB,GAAItC,EAAa,CACf,IAAM/B,EAAW/f,EAAKqjB,UAAUe,GAC1BvE,EAAQE,EAASF,MAAMpX,EAAQsX,EAAS7c,OAAOR,GACrDmhB,EAAQvM,KAAKuI,EAAMnB,YACnB2E,EAAU/L,KAAKuI,EAAM1J,eACrB2N,EAAOxM,KAAKuI,EAAM1J,eAEpB+N,EAAO,IAAItC,GAAQ,CACjBC,aACAC,cACAC,SACAC,QAAmB,IAAVvZ,IAEX,IAAK,IAAIhG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7B,IAAK,IAAIiF,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAClB,EAAJA,EACF1H,EAAK2jB,UAAUjc,GAAW,EAAPuc,EAAYxhB,GAAa,EAARgG,EAC3BqZ,GAAmB,EAAJrf,GAASA,EAAI,IACrCzC,EAAK2jB,UAAUjc,GAAW,EAAPuc,EAAYxhB,GAAmB,GAAbgG,EAAQ,IAGjD,IAAK,IAAI/F,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BgK,EAAKhK,GAAW,EAAPuhB,EAAYxhB,GAAK,GAMlCyhB,EAAKriB,SAASiB,IAAW,EAAPmhB,EAAkB,EAARxb,EAAW,GACvCzI,EAAKoB,IAAI8iB,GACTJ,EAAOxM,KAAK4M,KAEd,IAAMG,EAAW,IAAIjC,GAAS1V,GAG9B,OAFA2X,EAASxiB,SAASiB,KAAK,EAAW,EAAR2F,GAAY,GACtCzI,EAAKoB,IAAIijB,GACF,CACLR,UACAR,YACAS,SACAO,cApFHrkB,yPAJkBmB,wDAkGlB,IAJDsH,EAIC2J,EAJD3J,MACAyb,EAGC9R,EAHD8R,KACAzhB,EAEC2P,EAFD3P,EACAiF,EACC0K,EADD1K,EAE6B2c,EAAiBnkB,KAAtCgf,OAAWzW,GAAU4b,SAC7BA,EAAS3X,KAAKmW,cAAcpgB,EAAGiF,GAAG,GAClCwc,EAAKriB,SAASiB,IAAIL,EAAI,GAAK,EAAGiF,EAAI,IAAKtG,IAAIijB,EAASxiB,UACpD3B,KAAKkB,IAAI8iB,qCAGDzhB,EAAGiF,GAAG,IACNic,EAAczjB,KAAdyjB,UAGR,OAFAlhB,EAAI9B,KAAK8H,MAAMhG,EAAI,GACnBiF,EAAI/G,KAAK8H,MAAMf,EAAI,GAEjBjF,EAAI,GACDA,EAAIkhB,EAAU,GAAGlgB,OAAS,GAC1BiE,EAAI,GACJA,EAAIic,EAAUlgB,OAAS,EAEnB,EAEFkgB,EAAUjc,GAAGjF,2CAGN8K,GACOrN,KAAb0N,SACCC,QAAQ,SAACC,GACZA,EAAMH,iBACRG,EAAMH,gBAAgBJ,uNC9Ff+W,cAnCb,SAAAA,iGAAcC,CAAArkB,KAAAokB,GACZpkB,KAAKskB,QAAUvZ,SAAS6D,cAAc,OACtC5O,KAAKskB,QAAQ3T,UAAY,SACzB3Q,KAAKukB,QAAUxZ,SAAS6D,cAAc,OACtC5O,KAAKskB,QAAQtY,YAAYhM,KAAKukB,gEAGxB,IACED,EAAYtkB,KAAZskB,QACRvZ,SAASC,KAAKgB,YAAYsY,qCAGlB,IACAA,EAAYtkB,KAAZskB,QACRvZ,SAASC,KAAKwZ,YAAYF,+BAGxBG,EAAK9T,GAAW,IACV4T,EAAYvkB,KAAZukB,QACFG,EAAO3Z,SAAS6D,cAAc6V,GAKpC,OAJI9T,IACF+T,EAAK/T,UAAYA,GAEnB4T,EAAQvY,YAAY0Y,GACbA,kCAKP,IAFM,IACEH,EAAYvkB,KAAZukB,QACDA,EAAQI,YACbJ,EAAQC,YAAYD,EAAQI,u2BCInBC,oaAjCUR,4CAWrB,IAAAtkB,EAAAE,KAREuI,EAQF7G,EARE6G,MACAyW,EAOFtd,EAPEsd,OACAhc,EAMFtB,EANEsB,OAGA6hB,EAGF1iB,EAHE0iB,QACAC,EAEF3iB,EAFE2iB,OAGF9kB,KAAK+kB,QACL,IAAK,IAAI3d,EAAI4X,EAAS,EAAQ,GAAL5X,EAAQA,GAAK,EAAG,CACvC,IAAMoJ,EAASxQ,KAAKkB,IAAI,SAAUqH,IAAUnB,EAAI,SAAW,IACvDmB,IAAUnB,GACZoJ,EAAO5D,iBAAiB,QAAU,SAAAxF,GAAC,OAAI,WACrCtH,EAAKklB,UACLH,EAAQzd,IAFwB,CAG/BA,IAAI,GAEToJ,EAAOyU,UAAYjiB,EAAOR,EAAI4E,EAEhC,IAAMoJ,EAASxQ,KAAKkB,IAAI,SAAU,QAClCsP,EAAO5D,iBAAiB,QAAS,WAC/B9M,EAAKklB,UACLF,MACC,GACHtU,EAAOyU,UAAY,gBACnBjlB,KAAK8K,qYCzBM,IAAAoa,GAAA,SAAAxjB,GAAsB,IAAnByZ,EAAmBzZ,EAAnByZ,MAAOC,EAAY1Z,EAAZ0Z,MAEjBtL,EAAS,IAAI0J,EAAK,CACtBY,KAAM,QACNF,KAAM,SACN1F,KAAM,QACN6F,KAAM,QACN9F,MAAO,WAETzE,EAAOnO,SAASiB,IAAI,EAAG,EAAG,GAC1BkN,EAAO6H,kBAAoB,IAAIiD,EAC/BQ,EAAMpa,KAAKE,IAAI4O,GACfsL,EAAMpa,KAAKE,IAAI4O,EAAO6H,mBACtByD,EAAMjS,OAAOvH,OAASkO,EAAOnO,SAG7B,IAAMwjB,EAAW,IAAIjC,GAAS,CAC5BC,UAAW,CACT,CACEnE,OAAQ,EACRhc,OAAQ,CAAET,EAAG,EAAGC,EAAG,IAErB,CACEwc,OAAQ,EACRhc,OAAQ,CAAET,EAAG,EAAGC,EAAG,KAGvBwc,OAAQ,CACN,QACA,SACA,SACA,SACA,SACAoG,YAEJhK,EAAMpa,KAAKE,IAAIikB,GACf/J,EAAMjS,OAAO/I,UAAY,IACzBgb,EAAMjS,OAAOxG,WAAawiB,EAASnG,OAAOvJ,OAAO,SAACuJ,EAAD7c,GAAA,IAAWyhB,EAAXzhB,EAAWyhB,OAAX,OAAAyB,GAC5CrG,GAD4C9O,OAAAmV,GAE5CzB,KACD,IACJxI,EAAM3O,KAAK9K,SAASY,EAAmC,GAA/B4iB,EAAS1B,UAAU,GAAGlgB,OAC9C6X,EAAM3O,KAAK6Y,cAAcH,EAASI,UAAU7Z,KAAKyZ,IAGjD,IAAMK,EAAS,CAAChM,EAAM2C,EAAUA,GAC1Bb,EAAQ+J,GAAI7J,MAAM2J,EAASnG,OAAOzb,OAASiiB,EAAOjiB,SAASiG,IAAI,WAanE,IAZA,IAWIic,EAVE/J,EAAO,IADC8J,EAAO/kB,KAAK8H,MAAM9H,KAAKiH,SAAW8d,EAAOjiB,UAChC,CACrB6W,KAAM,QACNF,KAAM,SAAWzZ,KAAKiH,SACtBsS,IAAqB,GAAhBvZ,KAAKiH,UAAkB,SAAWjH,KAAKiH,SAC5C8M,KAAM,SAAW/T,KAAKiH,SACtB2S,KAAM,QACN9F,MAAO,SAAW9T,KAAKiH,WAEnBa,EAAQ9H,KAAK8H,MAAM9H,KAAKiH,SAAWyd,EAASnG,OAAOzb,QACrCiJ,EAAW2Y,EAASnG,OAAOzW,GAAvC4b,SAAY3X,KAGlBiZ,EAAQ,CACNljB,EAAG9B,KAAK8H,MAAM9H,KAAKiH,SAAW8E,EAAKjD,OACnC/B,EAAG/G,KAAK8H,MAAM9H,KAAKiH,SAAW8E,EAAKlF,OAAS,KAEtCkF,EAAKyW,aAAawC,EAAMljB,EAAGkjB,EAAMje,KAO3C,OANA2d,EAASO,ybAATC,CAAA,CACEpd,QACAyb,KAAMtI,GACH+J,IAEL/J,EAAKzF,cAAc1N,MAAQA,EACpBmT,EAAKzF,gBACXR,OAAO,SAACuJ,EAAQtD,GAKjB,OAJKsD,EAAOtD,EAAKnT,SACfyW,EAAOtD,EAAKnT,OAAS,IAEvByW,EAAOtD,EAAKnT,OAAO6O,KAAKsE,GACjBsD,GACN,IAEG4G,EAAa,IAAIhB,GAGnBrc,EAAQ,EACZ6S,EAAM3N,gBAAkB,WAAM,IACpBtE,EAAWiS,EAAXjS,OADoB0c,EAEaV,EAASnG,OAAOzW,GAAjDob,EAFoBkC,EAEpBlC,QAASR,EAFW0C,EAEX1C,UAAWgB,EAFA0B,EAEA1B,SACtB7iB,EAAU6Z,EAAMQ,kBAEtB,GADAxS,EAAOyS,aAAata,GACfA,EAAQuQ,UAAb,CAGA,IAAM/Q,EAAYqI,EAAO0S,aAAava,EAAQyP,YAGtC7N,EAAMpC,EAAUqC,iBAAiBmY,EAAM/S,IAAU,IAAI,GAC3D,GAAIrF,EAAJ,CAAS,IACmBwY,EAAWxY,EAA7B4iB,OAAUC,OACZ7S,EAAQ,CACZ,WACA,UACA,kBAEI8S,EAAgB,WACpBlW,EAAO0I,OAAOkD,EAAK/Z,UACnB+N,WAAW,kBACTgM,EAAKuK,IAAI,CAAC/S,EAAMzS,KAAK8H,MAAM9H,KAAKiH,SAAWwL,EAAM3P,YAChD,MAECgV,EAAO4L,EAAS+B,QAAQpW,EAAOnO,SAASgE,QAAS+V,EAAK/Z,SAASgE,SACnD,EAAd4S,EAAKhV,OACPuM,EAAO4H,KAAKa,EAAK4N,MAAM,GAAIH,GAClBzN,EAAKhV,QACdyiB,QAjBJ,CAwBA,IAAM9iB,EAAMpC,EAAUqC,iBAAiBggB,GAAW,GAClD,GAAIjgB,EAAK,KACC2V,EAAgC3V,EAAhC2V,MAAiBgH,EAAe3c,EAAzB4iB,OAAUjG,SACnBuG,EAAgB7d,EAAQsX,EAAS7c,OAAOR,EAC9C,GACEqd,EAAStX,QAAU6d,GACwB,IAAxCvG,EAASF,MAAMyG,GAAehI,MACjC,CACA,IAAM4H,EAAgB,WACpB7K,EAAMnJ,WAAY,EAClB,IAAM+N,EAAQF,EAASE,MAAMpe,SAC1BgE,QACAzE,IAAI2e,EAASle,UAChBmO,EAAO4H,KAAK,CAACqI,GAAQ,WACnBF,EAASF,MAAMyG,GAAexH,QAC9BgH,EAAWS,KAAKxG,EAAU,CACxBgF,QADwB,SAChBjjB,GACNie,EAASyG,aAAaxW,GACtB+P,EAASjC,OAAOhc,EAAQ,WACtBme,EACGje,KAAK+d,EAASE,MAAMpe,UACpBT,IAAI2e,EAASle,UAChBoe,EAAMvY,GAAK,EACXsI,EAAO4H,KAAK,CAACqI,GAAQ,WACnBxX,EAAQsX,EAAS7c,OAAOR,EAAIZ,EAC5BuZ,EAAMnJ,WAAY,OAIxB8S,OAdwB,WAetBjF,EAASF,MAAMyG,GAAevH,OAC9BkB,EAAMvY,GAAK,EACXsI,EAAO4H,KAAK,CAACqI,GAAQ,WACnB5E,EAAMnJ,WAAY,UAMtBuG,EAAO4L,EAAS+B,QAAQpW,EAAOnO,SAASgE,QAASkT,EAAMlT,SAM7D,YALkB,EAAd4S,EAAKhV,OACPuM,EAAO4H,KAAKa,EAAK4N,MAAM,GAAIH,GAClBzN,EAAKhV,QACdyiB,MAQN,IAAM9iB,EAAMpC,EAAUqC,iBAAiBwgB,GAAS,GAChD,GAAIzgB,EAAJ,CAAS,IACC2V,EAA0B3V,EAA1B2V,MAAerI,EAAWtN,EAAnB4iB,OACTE,EAAgB,WACpBlW,EAAO0I,OAAOK,GACdrI,EAAO+V,OAEHhO,EAAO4L,EAAS+B,QAAQpW,EAAOnO,SAASgE,QAASkT,EAAMlT,SAC3C,EAAd4S,EAAKhV,OACPuM,EAAO4H,KAAKa,EAAK4N,MAAM,GAAIH,GAClBzN,EAAKhV,QACdyiB,QAVJ,CAiBA,IAAM9iB,EAAMpC,EAAUgb,gBAAgBqI,GAAU,GAChD,GAAIjhB,EAAK,CACP,IAAMqV,EAAO4L,EAAS+B,QAAQpW,EAAOnO,SAASgE,QAASzC,EAAI2V,OACzC,EAAdN,EAAKhV,QACPuM,EAAO4H,KAAKa,EAAK4N,MAAM,UCvMjCK,EAAAC,EAAAC,EAAA,0BAAAxL,IAAAsL,EAAAC,EAAAC,EAAA,yBAAAxB,ijCCMM3gB,cACJ,SAAAA,IAKQ,IAAAzE,EAAA4B,EAAA,EAAA4B,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GAAIsB,EAAAlD,EAJN+C,aAIM,IAAAG,EAJE,SAIFA,EAAAhB,EAAAlC,EAHNmC,YAGM,IAAAD,EAHC,EAGDA,EAAAE,EAAApC,EAFNqC,oBAEM,IAAAD,EAFS,GAETA,EADHe,EACGC,EAAApD,EAAA,8HAAA3B,CAAAC,KAAAuE,GACN,IAAMS,EAAeC,IAAU0hB,QAAQ3hB,aAAaG,QAClD,yCACA,CACE,yCACA,2BACAC,KAAK,OACPD,QACA,wBACA,CACE,wBACA,6DACAC,KAAK,OAEHwhB,EAAc,EAAI/iB,EAClBgjB,EAAgBD,EAAc7iB,EAC9B6B,EAAiBX,IAAU0hB,QAAQ/gB,eAAeT,QACtD,2CACA,CACE,2CACA,0BACA,+BACA,sCACA,8DACA,+CACA,KACAC,KAAK,OACPD,QACA,gDACA,gCAAA+K,OACiC0W,GADjC1W,OAC+C0W,EAAc,GAAM,EAAI,KAAO,GAD9E,uCAAA1W,OAEmC2W,GAFnC3W,OAEmD2W,EAAgB,GAAM,EAAI,KAAO,GAFpF,MAGE,6FACA,4CACAzhB,KAAK,OAlCH,OAoCNtF,EAAAgT,EAAA9S,KAAAC,EAAAsE,GAAArE,KAAAF,+aAAAuF,CAAA,CACEC,KAAI,iBAAA0K,OAAmBrM,EAAnB,KAAAqM,OAA2BnM,GAC/B0B,SAAUC,IAAcC,MAAMV,IAAU0hB,QAAQlhB,UAChDG,iBACAZ,eACA8hB,WAAY,CAAEC,aAAa,GAC3BlhB,KAAK,EACLmhB,QAAQ,GACLniB,MAEAJ,MAAQ3E,EAAK2F,SAASK,QAAQC,MACnCjG,EAAK2E,MAAM7B,IAAI6B,GA/CT3E,8OANiBkG,aAyDZzB,yCC/DfiiB,EAAAS,EAAAP,GAAA,SAAAQ,GAAA,IA2BsBC,EAChBC,EA5BNC,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QAAAe,EAAAf,EAAA,QAAAgB,EAAAhB,EAAA,QAKM1b,EAAQC,SAAS0c,eAAe,SAChCtM,EAAQ,IAAIvK,IAAM,CAAE9F,UACpB4c,EAAQ,IAAIjZ,IAAM,CAAEC,OAAQ3D,SAAS0c,eAAe,WACpDrM,EAAQ,IAAInR,IAAM,CAAEa,UAEtBiN,EAAQnM,OAAO+b,SAASC,KAAKpE,MAAM,KAAK2C,MAAM,GAAG,GAChD0B,EAAO9P,KACVnM,OAAO+b,SAASC,KAAO,QACvB7P,EAAQ,QAEVmP,EAAa,kBAAMtb,OAAOgB,iBAAiB,aAAc,kBAAMhB,OAAO+b,SAASG,WAAU,KAanFV,EAAS,GADOD,EA2BT,CACX,CAAEzT,KAAM,kBAAmBqU,KAAM,cA1B3Bpa,QAAQ,SAAAjM,GAAoB,IAAjBgS,EAAiBhS,EAAjBgS,KAAMqU,EAAWrmB,EAAXqmB,KACfC,EAAajd,SAAS6D,cAAc,OAC1CoZ,EAAW/C,UAAY8C,EACvBC,EAAWC,MAAMtmB,SAAW,WAC5BqmB,EAAWC,MAAMC,WAAa,aAC9BF,EAAWC,MAAM5V,IAAM,YACvBtH,SAASC,KAAKgB,YAAYgc,GANM,IAOjBG,EAAiBH,EAAWha,wBAAnCzE,MACRye,EAAWC,MAAMC,WAAaxU,EAChB,SAAR1E,IAAc,IACVzF,EAAUye,EAAWha,wBAArBzE,MACI4e,EAAR5e,GACFwB,SAASC,KAAKwZ,YAAYwD,IAC1BZ,GAAU,KACKD,EAAM5jB,SAzB3BwH,SAASC,KAAK2F,UAAY,SAC1BkX,EAAO9P,GAAO,CAAEoD,QAAOC,UACvBD,EAAMlK,QAAQmX,KAAK,MAAO,WACxBrd,SAAS0c,eAAe,UAAUQ,MAAMlU,QAAU,OAClDoH,EAAMnJ,WAAY,EAClB0V,EAAMjY,WAwBFC,WAAWV,EAAO,IAGtBA,olCC7CE1F,cACJ,SAAAA,EAAA5H,GAAwC,IAAA5B,EAA1ByJ,EAA0B7H,EAA1B6H,MAAOjC,EAAmB5F,EAAnB4F,OAAWzC,EAAQC,EAAApD,EAAA,iHAAA3B,CAAAC,KAAAsJ,GACtC,IAAMY,EAAWa,SAAS6D,cAAc,UACxC1E,EAASX,MAAQA,EACjBW,EAAS5C,OAASA,EAClB,IAAM+gB,EAAU,IAAIC,IAAcpe,GAJI,OAKtCpK,EAAAgT,EAAA9S,KAAAC,EAAAqJ,GAAApJ,KAAAF,+aAAAuF,CAAA,CACEiE,IAAK6e,GACFxjB,MAEAqF,SAAWA,EAChBpK,EAAKqK,IAAMD,EAASqe,WAAW,MAVOzoB,8OADb0oB,aAedlf","file":"code/main.a976fc7fb7d102434ab2.js","sourcesContent":["import {\n  Object3D,\n  PerspectiveCamera,\n  Raycaster,\n  Vector3,\n} from 'three';\n\nclass Camera extends PerspectiveCamera {\n  constructor() {\n    super(60, 1, 0.1, 2048);\n    this.distance = 5;\n    this.maxHeight = Infinity;\n    this.offset = new Vector3(0, 1.2, 0);\n    this.tilt = Math.PI * -0.45;\n    this.pitch = Math.PI * 0.1;\n    this.speed = 1.25;\n    this.step = new Vector3();\n    this.raycaster = new Raycaster();\n    this.root = new Object3D();\n    this.root.add(this);\n    this.updateOrbit();\n  }\n\n  getRaycaster(pointer) {\n    const { raycaster } = this;\n    raycaster.setFromCamera(pointer, this);\n    raycaster.far = Infinity;\n    return raycaster;\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      root: { position },\n      speed,\n      step,\n      target,\n    } = this;\n    if (!target || position.distanceTo(target) <= 0.1) return;\n    step\n      .copy(target)\n      .sub(position)\n      .normalize()\n      .multiplyScalar(delta * speed);\n    position.add(step);\n  }\n\n  processInput({\n    movement,\n    secondary,\n    wheel,\n  }) {\n    let hasUpdated = false;\n    if (secondary) {\n      const sensitivity = 0.003;\n      this.tilt -= movement.x * sensitivity;\n      this.pitch += movement.y * sensitivity;\n      this.pitch = Math.min(Math.max(this.pitch, Math.PI * -0.45), Math.PI * 0.45);\n      hasUpdated = true;\n    }\n    if (wheel) {\n      const sensitivity = 0.006;\n      this.distance = Math.min(Math.max(this.distance + (wheel * sensitivity), 1), 16);\n      hasUpdated = true;\n    }\n    if (hasUpdated) this.updateOrbit();\n    return hasUpdated;\n  }\n\n  updateOrbit() {\n    const {\n      maxHeight,\n      offset,\n      pitch,\n      position,\n      raycaster,\n      root,\n      testMeshes,\n      tilt,\n    } = this;\n    let { distance } = this;\n    position.set(\n      Math.cos(tilt) * Math.cos(pitch),\n      Math.sin(pitch),\n      Math.sin(-tilt) * Math.cos(pitch)\n    ).normalize();\n    raycaster.ray.origin\n      .copy(root.position)\n      .add(offset);\n    if (testMeshes) {\n      raycaster.ray.direction\n        .copy(position);\n      raycaster.far = distance;\n      const hit = raycaster.intersectObjects(testMeshes)[0];\n      if (hit) {\n        distance = hit.distance - 0.25;\n      }\n    }\n    position\n      .multiplyScalar(distance)\n      .add(offset);\n    position.y = Math.min(Math.max(position.y, 0.1), maxHeight);\n    this.lookAt(raycaster.ray.origin);\n  }\n}\n\nexport default Camera;\n","import {\n  Color,\n  Mesh,\n  CircleBufferGeometry,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Grid extends Mesh {\n  constructor({\n    background = new Color(0xFFFFFF),\n    size = 1,\n    subdivisions = 10,\n  } = {}) {\n    const geometry = new CircleBufferGeometry(128, 8);\n    geometry.translate(0, 0, -0.01);\n    geometry.rotateX(Math.PI * -0.5);\n    super(\n      geometry,\n      new GridMaterial({\n        size,\n        subdivisions,\n      })\n    );\n    this.material.color.set(background);\n  }\n}\n\nexport default Grid;\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass RainMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.basic.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'attribute vec3 offset;',\n      ].join('\\n')\n    ).replace(\n      '#include <begin_vertex>',\n      [\n        'vec3 transformed = vec3(position + offset);',\n      ].join('\\n')\n    );\n    super({\n      name: 'rain-material',\n      uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n      fragmentShader: ShaderLib.basic.fragmentShader,\n      vertexShader,\n      fog: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default RainMaterial;\n","import {\n  BufferAttribute,\n  BoxGeometry,\n  BufferGeometry,\n  InstancedBufferGeometry,\n  InstancedBufferAttribute,\n  Mesh,\n  Vector3,\n} from 'three';\nimport RainMaterial from '@/materials/rain';\n\nclass Rain extends Mesh {\n  constructor() {\n    const drop = (new BufferGeometry()).fromGeometry(\n      (new BoxGeometry(0.01, 0.5, 0.01)).translate(0, 0.25, 0)\n    ).attributes.position.array;\n    const offsets = new Float32Array(Rain.numDrops * 3);\n    const geometry = new InstancedBufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(drop, 3));\n    geometry.addAttribute('offset', (new InstancedBufferAttribute(offsets, 3).setDynamic(true)));\n    super(\n      geometry,\n      new RainMaterial({\n        color: 0xAAAADD,\n      })\n    );\n    this.frustumCulled = false;\n    this.drop = new Vector3();\n    this.offsets = offsets;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      this.resetDrop(i);\n    }\n  }\n\n  onAnimationTick({ delta }) {\n    const { geometry, offsets, position } = this;\n    const step = delta * 16;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      offsets[i + 1] -= step;\n      let height = 0;\n      if (this.testHeight) {\n        height = this.testHeight(offsets[i] + position.x, offsets[i + 2] + position.z);\n      }\n      if (offsets[i + 1] <= height) {\n        this.resetDrop(i);\n      }\n    }\n    geometry.attributes.offset.needsUpdate = true;\n  }\n\n  resetDrop(i) {\n    const { drop, offsets, position } = this;\n    drop.set(\n      (Math.random() * (Rain.radius * 2 + 1)) - Rain.radius,\n      0,\n      (Math.random() * (Rain.radius * 2 + 1)) - Rain.radius\n    );\n    let height = Math.random() * Rain.radius * 0.5;\n    if (this.testHeight) {\n      height = Math.max(height, this.testHeight(drop.x + position.x, drop.z + position.z));\n    }\n    offsets[i] = drop.x;\n    offsets[i + 1] = height;\n    offsets[i + 2] = drop.z;\n  }\n\n  setHeightTest(func) {\n    const { geometry } = this;\n    this.testHeight = func;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      this.resetDrop(i);\n    }\n    geometry.attributes.offset.needsUpdate = true;\n  }\n}\n\nRain.numDrops = 10000;\nRain.radius = 50;\n\nexport default Rain;\n","import {\n  Mesh,\n  MeshBasicMaterial,\n  SphereBufferGeometry,\n} from 'three';\n\nclass Moon extends Mesh {\n  constructor() {\n    super(\n      new SphereBufferGeometry(100, 32, 32),\n      new MeshBasicMaterial({\n        color: 0xAAAAAA,\n        fog: false,\n      })\n    );\n  }\n}\n\nexport default Moon;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  Vector3,\n} from 'three';\nimport Moon from './moon';\n\nclass Starfield extends Points {\n  constructor() {\n    const count = 10000;\n    const radius = 1024;\n    const geometry = new BufferGeometry();\n    const position = new Float32Array(count * 3);\n    const size = new Float32Array(count);\n    const aux = new Vector3();\n    for (let i = 0; i < count; i += 1) {\n      aux.set(\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius,\n        Math.floor(Math.random() * (radius + 1)),\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius\n      ).normalize().multiplyScalar(radius);\n      const o = i * 3;\n      position[o] = aux.x;\n      position[o + 1] = aux.y;\n      position[o + 2] = aux.z;\n      size[i] = 10 + Math.floor(Math.random() * 100);\n    }\n    geometry.addAttribute('position', new BufferAttribute(position, 3));\n    geometry.addAttribute('size', new BufferAttribute(size, 1));\n    super(\n      geometry,\n      new PointsMaterial({\n        color: 0x999999,\n        fog: false,\n        sizeAttenuation: false,\n      })\n    );\n    this.moon = new Moon();\n    this.moon.position.set(radius, radius * 0.5, radius);\n    this.add(this.moon);\n  }\n}\n\nexport default Starfield;\n","import {\n  ClampToEdgeWrapping,\n  NearestFilter,\n  LinearFilter,\n  Sprite,\n  Scene,\n  OrthographicCamera,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\n\nclass Vignette extends Scene {\n  constructor() {\n    super();\n    this.camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n    this.sprite = new SpriteMaterial({\n      width: 0,\n      height: 0,\n    });\n    this.sprite.map.wrapS = ClampToEdgeWrapping;\n    this.sprite.map.wrapT = ClampToEdgeWrapping;\n    this.sprite.map.magFilter = NearestFilter;\n    this.sprite.map.minFilter = LinearFilter;\n    this.add(new Sprite(this.sprite));\n  }\n\n  onResize({ width, height }) {\n    const { sprite } = this;\n    const { renderer, ctx } = sprite;\n    const size = Math.max(width, height);\n    renderer.width = size;\n    renderer.height = size;\n    const grd = ctx.createRadialGradient(\n      size * 0.5, size * 0.5, size * 0.6,\n      size * 0.5, size * 0.5, size\n    );\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 1)');\n    ctx.fillStyle = grd;\n    ctx.beginPath();\n    ctx.rect(0, 0, size, size);\n    ctx.fill();\n    sprite.map.needsUpdate = true;\n  }\n\n  render(renderer) {\n    renderer.clearDepth();\n    renderer.render(this, this.camera);\n  }\n}\n\nexport default Vignette;\n","import Stats from 'stats.js';\nimport {\n  AmbientLight,\n  Clock,\n  Color,\n  DirectionalLight,\n  FogExp2,\n  InterpolateSmooth,\n  QuaternionKeyframeTrack,\n  Scene as Root,\n  ShaderChunk,\n  VectorKeyframeTrack,\n  WebGLRenderer,\n} from 'three';\nimport Camera from './camera';\nimport Grid from './grid';\nimport Rain from './rain';\nimport Starfield from './starfield';\nimport Vignette from './vignette';\n\nclass Scene {\n  constructor({\n    mount = document.body,\n  } = {}) {\n    this.camera = new Camera();\n    this.clock = new Clock();\n    this.mount = mount;\n    this.renderer = new WebGLRenderer({\n      alpha: false,\n      antialias: true,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setAnimationLoop(this.onAnimate.bind(this));\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n    const sky = new Color(0x334455);\n    this.renderer.setClearColor(sky);\n    mount.appendChild(this.renderer.domElement);\n    this.root = new Root();\n    this.root.fog = new FogExp2(sky, 0.03);\n    this.root.add(new AmbientLight(0x333333));\n    const light = new DirectionalLight(0xffffff, 0.6);\n    light.position.set(1, 0.5, 1);\n    this.root.add(light);\n    const secondaryLight = new DirectionalLight(0xffffff, 0.4);\n    secondaryLight.position.set(-1, -0.5, 1);\n    this.root.add(secondaryLight);\n    this.root.add(this.camera.root);\n    this.grid = new Grid({ background: new Color(0x333344) });\n    this.root.add(this.grid);\n    this.rain = new Rain();\n    this.root.add(this.rain);\n    this.starfield = new Starfield();\n    this.root.add(this.starfield);\n    this.vignette = new Vignette();\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = 'absolute';\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      mount.style.position = 'relative';\n      mount.appendChild(this.stats.dom);\n    }\n  }\n\n  onAnimate() {\n    const {\n      clock,\n      camera,\n      grid,\n      renderer,\n      root,\n      starfield,\n      stats,\n      vignette,\n    } = this;\n    if (stats) stats.begin();\n    const animation = { delta: Math.min(clock.getDelta(), 1), time: clock.oldTime / 1000 };\n    if (this.onAnimationTick) {\n      this.onAnimationTick(animation);\n    }\n    root.children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n    if (camera.onAnimationTick) {\n      camera.onAnimationTick(animation);\n    }\n    grid.position.set(camera.root.position.x, 0, camera.root.position.z);\n    starfield.position.copy(grid.position);\n    renderer.clear();\n    renderer.render(root, camera);\n    vignette.render(renderer);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      camera,\n      mount,\n      renderer,\n      vignette,\n    } = this;\n    const { width, height } = mount.getBoundingClientRect();\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    vignette.onResize({ width, height });\n  }\n\n  static fixThreeJSFog() {\n    ShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n      'fogDepth = -mvPosition.z;',\n      'fogDepth = mvPosition;'\n    );\n    ShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n      'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n      [\n        'float fogDist = length(fogDepth);',\n        'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n      ].join('\\n')\n    ).replace(\n      'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n      'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n    );\n  }\n}\n\nScene.fixThreeJSFog();\nQuaternionKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\nVectorKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\n\nexport default Scene;\n","class Music {\n  static shuffle(tracks) {\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    return tracks;\n  }\n\n  constructor({ toggle }) {\n    const loaded = () => {\n      this.api = window.SC;\n      this.api.initialize({\n        client_id: 'eb5fcff9e107aab508431b4c3c416415',\n      });\n      // this.api.resolve('https://soundcloud.com/travis-stanley-3/sets/jazz-noir-dark-jazz').then(({ tracks }) => {\n      //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n      // });\n      // eslint-disable-next-line\n      this.tracks = Music.shuffle([14281750,14449372,201545618,130450594,43516158,20969172,6582510,89379153,96594845,199889475,137188503,74658085,90256034,183847047,3916883]);\n      this.track = 0;\n      toggle.addEventListener('click', () => this.toggle(toggle), false);\n      if (this.wantsToPlay) {\n        delete this.wantsToPlay;\n        this.play();\n      }\n    };\n    const check = () => {\n      if (!window.SC) {\n        setTimeout(check, 10);\n        return;\n      }\n      loaded();\n    };\n    const script = document.createElement('script');\n    script.async = true;\n    script.defer = true;\n    script.src = 'https://connect.soundcloud.com/sdk/sdk-3.3.1.js';\n    document.body.appendChild(script);\n    check();\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    if (!api) {\n      this.wantsToPlay = true;\n      return;\n    }\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    const id = tracks[track];\n    if (!__PRODUCTION__) console.log(`playing: ${id}`);\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('audio_error', () => this.next());\n      player.on('finish', () => this.next());\n      player.setVolume(0.8);\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  toggle(button) {\n    const { player } = this;\n    if (!player) return;\n    if (player.isPlaying()) {\n      player.pause();\n      button.className = 'muted';\n    } else {\n      button.className = '';\n      player.play();\n    }\n  }\n}\n\nexport default Music;\n","import { Vector2 } from 'three';\nimport Touches from 'touches';\nimport { addWheelListener } from 'wheel';\n\nclass Input {\n  constructor({\n    mount = document.body,\n  }) {\n    this.mount = mount;\n    this.pointer = {\n      current: new Vector2(0, 0),\n      movement: { x: 0, y: 0 },\n      normalized: new Vector2(0, 0),\n      last: new Vector2(0, 0),\n      wheel: 0,\n    };\n    this.touches = Touches(window, {\n      preventSimulated: false,\n      target: mount,\n    })\n      .on('start', this.onPointerDown.bind(this))\n      .on('move', this.onPointerMove.bind(this))\n      .on('end', this.onPointerUp.bind(this));\n    addWheelListener(window, this.onPointerWheel.bind(this));\n    window.addEventListener('contextmenu', e => e.preventDefault(), false);\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n  }\n\n  getPointerFrame() {\n    const { pointer } = this;\n    const frame = { ...pointer };\n    pointer.primaryDown = false;\n    pointer.primaryUp = false;\n    pointer.secondaryDown = false;\n    pointer.secondaryUp = false;\n    pointer.movement = { x: 0, y: 0 };\n    pointer.wheel = 0;\n    return frame;\n  }\n\n  onPointerDown(e) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    const { button, touches } = e;\n    if (touches) {\n      if (touches.length > 1) {\n        e.preventDefault();\n      }\n      if (!pointer.secondary) {\n        if (touches.length === 1) {\n          pointer.primary = true;\n          pointer.primaryDown = true;\n        } else {\n          pointer.secondary = true;\n          pointer.secondaryDown = true;\n          pointer.primary = false;\n        }\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = true;\n        pointer.primaryDown = true;\n        break;\n      case 2:\n        pointer.secondary = true;\n        pointer.secondaryDown = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerMove({ touches }, [x, y]) {\n    const { isEnabled, pointer, rect } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      const { top, left } = rect;\n      x = 0;\n      y = 0;\n      for (let i = 0; i < touches.length; i += 1) {\n        const { clientX, clientY } = touches[i];\n        x += (clientX - left);\n        y += (clientY - top);\n      }\n      x /= touches.length;\n      y /= touches.length;\n    }\n    const { width, height } = rect;\n    pointer.current.x = x;\n    pointer.current.y = y;\n    pointer.normalized.x = ((x / width) * 2) - 1;\n    pointer.normalized.y = 1 - ((y / height) * 2);\n    pointer.movement = {\n      x: pointer.current.x - pointer.last.x,\n      y: pointer.current.y - pointer.last.y,\n    };\n    pointer.last.copy(pointer.current);\n  }\n\n  onPointerUp({ button, touches }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      if (pointer.primary) {\n        pointer.primary = false;\n        pointer.primaryUp = true;\n      }\n      if (pointer.secondary) {\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = false;\n        pointer.primaryUp = true;\n        break;\n      case 2:\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerWheel({ deltaY }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    pointer.wheel = deltaY;\n  }\n\n  onResize() {\n    const { mount } = this;\n    this.rect = mount.getBoundingClientRect();\n  }\n}\n\n\nexport default Input;\n","import {\n  Sprite,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\nclass Bubble extends Sprite {\n  constructor() {\n    super(new SpriteMaterial({\n      width: 512,\n      height: 64,\n      depthTest: false,\n    }));\n    this.scale.set(3, 0.375, 1);\n    this.visible = false;\n  }\n\n  display(lines, delay = 1500) {\n    const { renderer, ctx } = this.material;\n    const { width, height } = renderer;\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = '#fff';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n    ctx.shadowBlur = 10;\n    ctx.font = \"24px 'Print Char 21',monospace\";\n    ctx.fillText(lines.shift(), width * 0.5, height * 0.5);\n    this.material.map.needsUpdate = true;\n    this.visible = true;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      if (lines.length) {\n        this.display(lines, delay);\n        return;\n      }\n      this.visible = false;\n    }, delay);\n  }\n}\n\nexport default Bubble;\n","import {\n  AnimationClip,\n  AnimationMixer,\n  Bone,\n  BufferGeometry,\n  Euler,\n  Geometry,\n  Mesh,\n  MeshBasicMaterial,\n  QuaternionKeyframeTrack,\n  Quaternion,\n  SkinnedMesh,\n  Skeleton,\n  Vector2,\n  Vector3,\n  Vector4,\n} from 'three';\nimport Bubble from '@/items/bubble';\n\nclass Actor extends SkinnedMesh {\n  static geometryFromLimbs(limbs) {\n    const merged = new Geometry();\n    Object.keys(limbs).forEach((limb) => {\n      limbs[limb].faces.forEach((face) => {\n        face.materialIndex = Actor.Bones[limb];\n      });\n      merged.merge(limbs[limb]);\n    });\n    merged.faces.forEach((face) => {\n      merged.vertices[face.a].bone = face.materialIndex;\n      merged.vertices[face.b].bone = face.materialIndex;\n      merged.vertices[face.c].bone = face.materialIndex;\n      face.materialIndex = 0;\n    });\n    merged.vertices.forEach((vertex) => {\n      merged.skinIndices.push(new Vector4(vertex.bone, 0, 0, 0));\n      merged.skinWeights.push(new Vector4(1, 0, 0, 0));\n    });\n    const geometry = (new BufferGeometry()).fromGeometry(merged);\n    geometry.computeVertexNormals();\n    geometry.computeBoundingSphere();\n    return geometry;\n  }\n\n  constructor({\n    bonesOrigin,\n    collisionGeometry,\n    geometry,\n    material,\n  }) {\n    super(\n      geometry,\n      material\n    );\n    const hip = new Bone();\n    this.add(hip);\n    const torso = new Bone();\n    hip.add(torso);\n    const head = new Bone();\n    torso.add(head);\n    const leftArm = new Bone();\n    torso.add(leftArm);\n    const rightArm = new Bone();\n    torso.add(rightArm);\n    const leftLeg = new Bone();\n    hip.add(leftLeg);\n    const rightLeg = new Bone();\n    hip.add(rightLeg);\n    this.bind(new Skeleton([\n      hip,\n      torso,\n      head,\n      leftArm,\n      rightArm,\n      leftLeg,\n      rightLeg,\n    ]));\n    Object.keys(bonesOrigin).forEach((bone) => {\n      this.skeleton.bones[Actor.Bones[bone]].position.copy(bonesOrigin[bone]);\n    });\n    this.mixer = new AnimationMixer(this);\n    this.actions = Object.keys(Actor.animations).reduce((actions, action) => ({\n      ...actions,\n      [action]: this.mixer.clipAction(Actor.animations[action]),\n    }), {});\n    this.animation = 'idle';\n    this.actions.idle.timeScale = 0.5;\n    this.actions.idle.play();\n    this.rotationAux = new Vector2();\n    this.movementAux = new Vector3();\n    this.collisionMesh = new Mesh(\n      collisionGeometry,\n      new MeshBasicMaterial({\n        opacity: 0.1,\n        transparent: true,\n        visible: false,\n        wireframe: true,\n      })\n    );\n    this.add(this.collisionMesh);\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      actions: { walk: { timeScale: walkingSpeed } },\n      destinationMarker,\n      mixer,\n      movementAux,\n      onDestinationCallback: callback,\n      position,\n      rotationSpeed,\n      route,\n      targetRotation,\n    } = this;\n    mixer.update(delta);\n    if (targetRotation !== undefined) {\n      const rotationStep = delta * rotationSpeed;\n      const rotationDelta = targetRotation - this.rotation.y;\n      this.rotation.y += Math.min(\n        Math.max(\n          rotationDelta,\n          -rotationStep\n        ),\n        rotationStep\n      );\n      if (Math.abs(rotationDelta) <= rotationStep) {\n        delete this.targetRotation;\n      }\n    }\n    if (!route) return;\n    const waypoint = route.path[route.current];\n    const distance = position.distanceTo(waypoint);\n    const step = delta * 1.5 * walkingSpeed;\n    position.add(\n      movementAux\n        .copy(waypoint)\n        .sub(position)\n        .normalize()\n        .multiplyScalar(Math.min(distance, step))\n    );\n    if (distance > step) {\n      return;\n    }\n    if (route.current < route.path.length - 1) {\n      route.current += 1;\n      this.faceTo(route.path[route.current]);\n      return;\n    }\n    this.setAnimation('idle');\n    delete this.route;\n    if (destinationMarker) {\n      destinationMarker.visible = false;\n    }\n    if (callback) {\n      delete this.onDestinationCallback;\n      callback();\n    }\n  }\n\n  setAnimation(animation) {\n    const { actions } = this;\n    if (this.animation === animation) return;\n    actions[this.animation].fadeOut(0.2);\n    this.animation = animation;\n    actions[this.animation]\n      .reset()\n      .fadeIn(0.2)\n      .play();\n  }\n\n  walk(path, callback) {\n    const { destinationMarker, position } = this;\n    const distance = position.distanceTo(path[path.length - 1]);\n    delete this.onDestinationCallback;\n    if (distance === 0) {\n      if (callback) callback();\n      return;\n    }\n    this.setAnimation('walk');\n    this.route = {\n      current: 0,\n      path,\n    };\n    if (destinationMarker) {\n      destinationMarker.position.copy(path[path.length - 1]);\n      destinationMarker.visible = true;\n    }\n    if (callback) {\n      this.onDestinationCallback = callback;\n    }\n    this.faceTo(path[0]);\n  }\n\n  faceTo(point) {\n    const { position, rotationAux } = this;\n    const angle = rotationAux.set(point.x - position.x, point.z - position.z).angle();\n    while (this.rotation.y < -Math.PI) this.rotation.y += Math.PI * 2;\n    while (this.rotation.y > Math.PI) this.rotation.y -= Math.PI * 2;\n    this.targetRotation = (Math.PI * 0.5) - angle;\n    while (this.targetRotation < -Math.PI) this.targetRotation += Math.PI * 2;\n    while (this.targetRotation > Math.PI) this.targetRotation -= Math.PI * 2;\n    if ((this.targetRotation - this.rotation.y) > Math.PI) {\n      this.targetRotation -= Math.PI * 2;\n    } else if ((this.targetRotation - this.rotation.y) < -Math.PI) {\n      this.targetRotation += Math.PI * 2;\n    }\n    this.rotationSpeed = Math.abs(this.targetRotation - this.rotation.y) * 1.5;\n  }\n\n  say(lines, delay) {\n    if (!this.bubble) {\n      this.bubble = new Bubble();\n      this.bubble.position.set(0, this.geometry.boundingSphere.radius * 2.25, 0);\n      this.add(this.bubble);\n    }\n    const { bubble } = this;\n    bubble.display(lines, delay);\n  }\n}\n\nActor.Bones = {\n  hip: 0,\n  torso: 1,\n  head: 2,\n  leftArm: 3,\n  rightArm: 4,\n  leftLeg: 5,\n  rightLeg: 6,\n};\n\nconst eulerToQuat = (x, y, z) => (new Quaternion()).setFromEuler(new Euler(x, y, z)).toArray();\n\nActor.animations = {\n  idle: (\n    new AnimationClip('idle', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n          ...eulerToQuat(0, Math.PI * 0.05, 0),\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * 0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n          ...eulerToQuat(0, 0, Math.PI * -0.1),\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.25,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n          ...eulerToQuat(0, 0, Math.PI * 0.1),\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n        ])\n      ),\n    ])\n  ),\n  walk: (\n    new AnimationClip('walk', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.02, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n          ...eulerToQuat(0, 0, Math.PI * 0.025),\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * -0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n        ])\n      ),\n    ])\n  ),\n};\n\nexport default Actor;\n","import {\n  CylinderGeometry,\n  CylinderBufferGeometry,\n  MeshPhongMaterial,\n  SphereGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport Actor from '@/engine/actor';\n\nclass Dude extends Actor {\n  constructor(palette) {\n    super({\n      bonesOrigin: Dude.bones,\n      collisionGeometry: (\n        (new CylinderBufferGeometry(0.25, 0.25, 1.4))\n          .translate(0, 0.7, 0)\n      ),\n      geometry: Dude.geometry(palette),\n      material: Dude.material,\n    });\n  }\n}\n\nDude.bones = {\n  hip: new Vector3(0, 0.5, 0),\n  torso: new Vector3(0, 0, 0),\n  head: new Vector3(0, 0.49, 0),\n  leftArm: new Vector3(-0.15, 0.475, 0),\n  rightArm: new Vector3(0.15, 0.475, 0),\n  leftLeg: new Vector3(-0.075, 0, 0),\n  rightLeg: new Vector3(0.075, 0, 0),\n};\n\nDude.geometry = (palette) => {\n  const torso = new CylinderGeometry(0.175, 0.15, 0.5, 6);\n  torso.translate(0, 0.25, 0);\n  torso.faces.forEach((face) => {\n    face.color.set(palette.torso || 0x990000);\n  });\n  const head = new SphereGeometry(0.2, 8, 4);\n  head.translate(0, 0.2, 0);\n  head.faces.forEach((face) => {\n    face.color.set(palette.head);\n  });\n  if (palette.hat) {\n    const hat = new CylinderGeometry(0.3, 0.3, 0.05);\n    const top = new CylinderGeometry(0.2, 0.2, 0.3);\n    top.translate(0, 0.15, 0);\n    hat.merge(top);\n    hat.translate(0, 0.3, 0);\n    hat.faces.forEach((face) => {\n      face.color.set(palette.hat);\n    });\n    head.merge(hat);\n  }\n  const leftEye = new SphereGeometry(0.05);\n  leftEye.faces.forEach((face) => {\n    face.color.set(palette.eyes);\n  });\n  const rightEye = leftEye.clone();\n  leftEye.translate(-0.1, 0.2, 0.15);\n  rightEye.translate(0.1, 0.2, 0.15);\n  head.merge(leftEye);\n  head.merge(rightEye);\n  const leftArm = new CylinderGeometry(0.05, 0.03, 0.4, 6);\n  leftArm.faces.forEach((face) => {\n    face.color.set(palette.arms);\n  });\n  const rightArm = leftArm.clone();\n  leftArm.translate(0, -0.2, 0);\n  rightArm.translate(0, -0.2, 0);\n  const leftLeg = new CylinderGeometry(0.05, 0.05, 0.5, 4);\n  leftLeg.faces.forEach((face) => {\n    face.color.set(palette.legs);\n  });\n  const rightLeg = leftLeg.clone();\n  leftLeg.translate(0, -0.25, 0);\n  rightLeg.translate(0, -0.25, 0);\n  const geometry = Actor.geometryFromLimbs({\n    torso,\n    head,\n    leftArm,\n    rightArm,\n    leftLeg,\n    rightLeg,\n  });\n  geometry.boundingSphere.center.set(0, 0.7, 0);\n  geometry.boundingSphere.radius = 0.7;\n  return geometry;\n};\n\nDude.material = new MeshPhongMaterial({\n  skinning: true,\n  vertexColors: VertexColors,\n});\n\nexport default Dude;\n","import {\n  CircleBufferGeometry,\n  Mesh,\n  MeshPhongMaterial,\n} from 'three';\n\nclass Marker extends Mesh {\n  constructor() {\n    const geometry = new CircleBufferGeometry(0.25, 16);\n    geometry.rotateX(Math.PI * -0.5);\n    geometry.translate(0, 0.001, 0);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x222222,\n        transparent: true,\n      })\n    );\n    this.visible = false;\n  }\n\n  onAnimationTick({ time }) {\n    const { material, scale, visible } = this;\n    if (!visible) return;\n    const inc = ((1 + Math.sin(time * 4)) * 0.125);\n    const s = 0.75 + inc;\n    scale.set(s, 1, s);\n    material.opacity = 0.25 + inc;\n  }\n}\n\nexport default Marker;\n","import Dude from '@/actors/dude';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  const pack = {\n    dudes: [...Array(13)].map((v, i) => {\n      const dude = new Dude({\n        arms: 0x222222,\n        eyes: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n        head: i === 0 ? 0x333333 : (0x999999 * Math.random()),\n        hat: Math.random() > 0.5 ? (0x999999 * Math.random()) : false,\n        legs: 0x222222,\n        torso: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n      });\n      dude.position.set(Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1), 0, 0);\n      scene.root.add(dude);\n      return dude;\n    }),\n    onAnimationTick() {\n      const { camera, grid } = scene;\n      const pointer = input.getPointerFrame();\n      camera.processInput(pointer);\n      if (pointer.primaryUp) {\n        const raycaster = camera.getRaycaster(pointer.normalized);\n        const hit = raycaster.intersectObject(grid)[0];\n        if (!hit) return;\n        pack.walkTo(hit.point);\n      }\n    },\n    walkTo(point) {\n      const { x: mainDudeX, z: mainDudeZ } = point;\n      this.dudes.forEach((dude, i) => {\n        point.x = mainDudeX + Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1);\n        point.z = mainDudeZ + Math.floor((i + 1) / 2) * -1;\n        if (i > 0) {\n          point.x += (Math.random() * 2) - 1;\n          point.z += (Math.random() * 2) - 1;\n          dude.actions.walk.timeScale = 0.8 + Math.random() * 0.4;\n        }\n        dude.walk([point.clone()]);\n      });\n    },\n  };\n\n  const [mainDude] = pack.dudes;\n  mainDude.destinationMarker = new Marker();\n  scene.root.add(mainDude.destinationMarker);\n  scene.camera.target = mainDude.position;\n\n  scene.camera.distance = 6;\n  scene.camera.pitch = Math.PI * 0.125;\n  scene.camera.updateOrbit();\n\n  scene.onAnimationTick = pack.onAnimationTick.bind(pack);\n};\n","import {\n  CylinderGeometry,\n  CylinderBufferGeometry,\n  MeshPhongMaterial,\n  SphereGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport Actor from '@/engine/actor';\n\nclass ThiccBoi extends Actor {\n  constructor(palette) {\n    super({\n      bonesOrigin: ThiccBoi.bones,\n      collisionGeometry: (\n        (new CylinderBufferGeometry(0.25, 0.25, 1.4))\n          .translate(0, 0.7, 0)\n      ),\n      geometry: ThiccBoi.geometry(palette),\n      material: ThiccBoi.material,\n    });\n  }\n}\n\nThiccBoi.bones = {\n  hip: new Vector3(0, 0.4, 0),\n  torso: new Vector3(0, 0, 0),\n  head: new Vector3(0, 0.5, 0),\n  leftArm: new Vector3(-0.325, 0.45, 0),\n  rightArm: new Vector3(0.325, 0.45, 0),\n  leftLeg: new Vector3(-0.08, 0.1, 0),\n  rightLeg: new Vector3(0.08, 0.1, 0),\n};\n\nThiccBoi.geometry = (palette) => {\n  // const torso = new CylinderGeometry(0.175, 0.15, 0.5, 6);\n  const torso = new SphereGeometry(0.26, 8, 8);\n  torso.translate(0, 0.25, 0);\n  torso.scale(1.5, 1, 1.5);\n  torso.faces.forEach((face) => {\n    face.color.set(palette.torso || 0x990000);\n  });\n  const head = new CylinderGeometry(0.175, 0.15, 0.4, 6);\n  // const head = new SphereGeometry(0.2, 8, 4);\n  head.translate(0, 0.2, 0);\n  head.faces.forEach((face) => {\n    face.color.set(palette.head);\n  });\n  if (palette.hat) {\n    const hat = new CylinderGeometry(0.3, 0.3, 0.05);\n    const top = new CylinderGeometry(0.2, 0.2, 0.3);\n    top.translate(0, 0.15, 0);\n    hat.merge(top);\n    hat.translate(0, 0.3, 0);\n    hat.faces.forEach((face) => {\n      face.color.set(palette.hat);\n    });\n    head.merge(hat);\n  }\n  const leftEye = new SphereGeometry(0.05);\n  leftEye.faces.forEach((face) => {\n    face.color.set(palette.eyes);\n  });\n  const rightEye = leftEye.clone();\n  leftEye.translate(-0.1, 0.2, 0.15);\n  rightEye.translate(0.1, 0.2, 0.15);\n  head.merge(leftEye);\n  head.merge(rightEye);\n  const leftArm = new CylinderGeometry(0.03, 0.075, 0.3, 6);\n  leftArm.faces.forEach((face) => {\n    face.color.set(palette.arms);\n  });\n  const rightArm = leftArm.clone();\n  leftArm.translate(0, -0.15, 0);\n  rightArm.translate(0, -0.15, 0);\n  const leftLeg = new CylinderGeometry(0.05, 0.1, 0.4, 4);\n  leftLeg.faces.forEach((face) => {\n    face.color.set(palette.legs);\n  });\n  const rightLeg = leftLeg.clone();\n  leftLeg.translate(0, -0.2, 0);\n  rightLeg.translate(0, -0.2, 0);\n  const geometry = Actor.geometryFromLimbs({\n    torso,\n    head,\n    leftArm,\n    rightArm,\n    leftLeg,\n    rightLeg,\n  });\n  geometry.boundingSphere.center.set(0, 0.7, 0);\n  geometry.boundingSphere.radius = 0.7;\n  return geometry;\n};\n\nThiccBoi.material = new MeshPhongMaterial({\n  skinning: true,\n  vertexColors: VertexColors,\n});\n\nexport default ThiccBoi;\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  VertexColors,\n} from 'three';\n\nclass Cabin extends Mesh {\n  constructor({\n    color,\n    scale,\n  }) {\n    const geometry = new BoxGeometry(\n      0.998, 0.999, 0.998,\n      scale.x, scale.y, scale.z\n    );\n    const aux = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    geometry.translate(0, 0.5, 0);\n    for (let i = 0; i < 12; i += 1) {\n      geometry.faces.splice(40, 1);\n    }\n    geometry.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nexport default Cabin;\n","import {\n  BoxBufferGeometry,\n  Math as ThreeMath,\n  Mesh,\n  MeshPhongMaterial,\n  Vector3,\n} from 'three';\n\nclass Button extends Mesh {\n  constructor({ onTap, position }) {\n    const geometry = new BoxBufferGeometry(0.2, 0.15, 0.08);\n    geometry.translate(0, 0, 0.039);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x440000,\n      })\n    );\n    this.animation = 0;\n    this.animationVector = new Vector3(0, 0, -0.04);\n    this.onTap = onTap;\n    this.position.copy(position);\n    this.origin = position.clone();\n  }\n\n  tap() {\n    const { onTap, tapping } = this;\n    if (tapping) return false;\n    let ret;\n    if (onTap) {\n      ret = onTap();\n    }\n    this.animation = 0;\n    this.tapping = true;\n    return ret;\n  }\n\n  onAnimationTick({ delta }) {\n    const { animationVector, origin, tapping } = this;\n    if (!tapping) return;\n    this.animation = Math.min(this.animation + (delta * 0.75), 1);\n    if (this.animation === 1) {\n      delete this.tapping;\n    }\n    const step = ThreeMath.smoothstep(\n      (this.animation > 0.5 ? 1 - this.animation : this.animation) * 2,\n      0,\n      1\n    );\n    this.position\n      .copy(origin)\n      .addScaledVector(animationVector, step);\n  }\n}\n\nexport default Button;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Math as ThreeMath,\n  Mesh,\n  MeshBasicMaterial,\n  MeshPhongMaterial,\n  Object3D,\n  PlaneGeometry,\n  PlaneBufferGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Button from '@/items/button';\n\nclass Doors extends Object3D {\n  constructor({\n    color,\n    onCall,\n    scale,\n  }) {\n    super();\n    const plane = new PlaneGeometry(0.5, 1, scale.x * 0.5, scale.y);\n    const aux = new Color();\n    plane.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    plane.scale(scale.x, scale.y, scale.z);\n    const geometry = (new BufferGeometry()).fromGeometry(plane);\n    for (let i = 0; i < 2; i += 1) {\n      const door = new Mesh(\n        geometry,\n        new MeshPhongMaterial({\n          color,\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      door.position.set(\n        (-0.26 + (i * 0.52)) * scale.x,\n        0.5 * scale.y,\n        0.499 * scale.z\n      );\n      this.add(door);\n    }\n    this.animation = 0;\n    this.animationScale = scale.x;\n    this.state = Doors.states.CLOSED;\n    this.targetState = this.state;\n    this.callButton = new Button({\n      onTap: onCall,\n      position: new Vector3(0.6 * scale.x, (1 / 3) * scale.y, 0.5 * scale.z),\n    });\n    this.add(this.callButton);\n    this.collisionMesh = new Mesh(\n      new PlaneBufferGeometry(1, 1)\n        .scale(scale.x, scale.y, 1)\n        .translate(0, scale.y * 0.5, scale.z * 0.5),\n      new MeshBasicMaterial({\n        opacity: 0.1,\n        transparent: true,\n        visible: false,\n        wireframe: true,\n      })\n    );\n    this.add(this.collisionMesh);\n  }\n\n  open() {\n    this.state = Doors.states.MOVING;\n    this.targetState = Doors.states.OPEN;\n  }\n\n  close() {\n    this.state = Doors.states.MOVING;\n    this.targetState = Doors.states.CLOSED;\n  }\n\n  toggle() {\n    const { state } = this;\n    switch (state) {\n      case Doors.states.OPEN:\n        this.close();\n        break;\n      case Doors.states.CLOSED:\n        this.open();\n        break;\n      default:\n        break;\n    }\n  }\n\n  onAnimationTick(animation) {\n    const {\n      animationScale,\n      children,\n      state,\n      targetState,\n    } = this;\n    this.callButton.onAnimationTick(animation);\n    if (state !== Doors.states.MOVING) return;\n    const { delta } = animation;\n    const animationStep = delta * 0.75;\n    switch (targetState) {\n      case Doors.states.OPEN:\n        this.animation = Math.min(this.animation + animationStep, 1);\n        if (this.animation === 1) {\n          this.state = Doors.states.OPEN;\n        }\n        break;\n      case Doors.states.CLOSED:\n        this.animation = Math.max(this.animation - animationStep, 0);\n        if (this.animation === 0) {\n          this.state = Doors.states.CLOSED;\n        }\n        break;\n      default:\n        break;\n    }\n    const step = ThreeMath.smoothstep(this.animation, 0, 1) * 0.4;\n    for (let i = 0; i < 2; i += 1) {\n      children[i].position.x = (-0.26 + (i * 0.52) + (step * (i === 0 ? -1 : 1))) * animationScale;\n    }\n  }\n}\n\nDoors.states = {\n  OPEN: 0,\n  CLOSED: 1,\n  MOVING: 2,\n};\n\nexport default Doors;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n} from 'three';\n\nclass Shaft extends Mesh {\n  constructor({\n    color,\n    floors,\n    scale,\n  }) {\n    const merged = new Geometry();\n    for (let i = 0; i <= floors; i += 1) {\n      if (i === 0 || i === floors) {\n        const floor = new PlaneGeometry(1, 1);\n        floor.rotateX(Math.PI * -0.5);\n        floor.translate(0, i, 0);\n        merged.merge(floor);\n        if (i === floors) break;\n      }\n      const back = new PlaneGeometry(1, 1);\n      back.translate(0, i + 0.5, -0.5);\n      merged.merge(back);\n      const side = new PlaneGeometry(1, 1);\n      side.rotateY(Math.PI * -0.5);\n      side.translate(-0.5, i + 0.5, 0);\n      merged.merge(side);\n      side.translate(1, 0, 0);\n      merged.merge(side);\n    }\n    merged.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n      })\n    );\n  }\n}\n\nexport default Shaft;\n","import {\n  Math as ThreeMath,\n  Object3D,\n  Vector3,\n} from 'three';\nimport Cabin from './cabin';\nimport Doors from './doors';\nimport Shaft from './shaft';\n\nclass Elevator extends Object3D {\n  constructor({\n    floors,\n    origin,\n  }) {\n    super();\n    this.floors = floors;\n    this.origin = origin;\n    this.animationStart = Math.random() * 512;\n\n    this.shaft = new Shaft({\n      color: Elevator.shaft,\n      floors,\n      scale: Elevator.scale,\n    });\n    this.add(this.shaft);\n\n    this.doors = [...Array(floors)].map((v, floor) => {\n      const doors = new Doors({\n        color: Elevator.doors,\n        onCall: () => this.onCall(floor),\n        scale: Elevator.scale,\n      });\n      doors.collisionMesh.elevator = this;\n      doors.position.y = floor * Elevator.scale.y;\n      this.add(doors);\n      return doors;\n    });\n\n    this.cabin = new Cabin({\n      color: Elevator.cabin,\n      scale: Elevator.scale,\n    });\n    this.add(this.cabin);\n    this.position.z = -1.5 * Elevator.scale.z;\n    this.floor = 0;\n    this.passengers = [];\n  }\n\n  addPassenger(passenger) {\n    const { passengers } = this;\n    passengers.push(passenger);\n  }\n\n  removePassenger(passenger) {\n    const { passengers } = this;\n    const index = passengers.findIndex(p => (p === passenger));\n    if (~index) {\n      passengers.splice(index, 1);\n    }\n  }\n\n  onAnimationTick(animation) {\n    const {\n      cabin,\n      doors,\n      passengers,\n      position,\n      route,\n    } = this;\n    if (route) {\n      route.step += (animation.delta * 0.5) / Math.abs(route.travel);\n      if (route.step >= 1) {\n        route.step = 1;\n        doors[route.to].open();\n        this.floor = route.to;\n        delete this.route;\n        if (route.callback) {\n          route.callback();\n        }\n      }\n      const step = ThreeMath.smoothstep(route.step, 0, 1) * route.travel;\n      cabin.position.y = (route.from + step) * Elevator.scale.y;\n      passengers.forEach((passenger) => {\n        passenger.position\n          .copy(cabin.position)\n          .add(position);\n      });\n    }\n    doors.forEach(door => door.onAnimationTick(animation));\n  }\n\n  onCall(floor, callback) {\n    const { route, doors } = this;\n    if (route) return;\n    if (floor === this.floor) {\n      doors[floor].toggle();\n      return;\n    }\n    doors[this.floor].close();\n    this.route = {\n      callback,\n      from: this.floor,\n      to: floor,\n      travel: floor - this.floor,\n      step: 0,\n    };\n  }\n}\n\nElevator.scale = new Vector3(2, 3, 2);\nElevator.cabin = 0x440000;\nElevator.doors = 0x333333;\nElevator.shaft = 0x333333;\n\nexport default Elevator;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\n\nclass Wall extends Mesh {\n  static getGeometry({\n    aoTop = true,\n    aoBottom = true,\n    width = 1,\n    height = 1,\n    material,\n    orientation,\n  }) {\n    const wall = new PlaneGeometry(\n      width,\n      height,\n      Math.ceil(width * Wall.scale.x),\n      Math.ceil(height * (orientation === 'horizontal' ? Wall.scale.x : Wall.scale.y))\n    );\n    const color = new Color();\n    wall.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.materialIndex = material;\n      const vertices = [\n        wall.vertices[face.a],\n        wall.vertices[face.b],\n        wall.vertices[face.c],\n      ];\n      face.vertexColors = [...Array(3)].map((v, j) => {\n        const c = color.clone();\n        if (\n          (aoTop && Math.abs(vertices[j].y - height * 0.5) < 0.0001)\n          || (aoBottom && Math.abs(vertices[j].y - height * -0.5) < 0.0001)\n        ) {\n          c.offsetHSL(0, 0, -0.1);\n        }\n        return c;\n      });\n    });\n    if (orientation === 'horizontal') {\n      wall.rotateX(Math.PI * -0.5);\n    }\n    return wall;\n  }\n\n  constructor({\n    aoTop = false,\n    aoBottom = false,\n  } = {}) {\n    const geometry = Wall.getGeometry({\n      aoTop,\n      aoBottom,\n      orientation: 'vertical',\n      material: 0,\n    });\n    geometry.translate(0, 0.5, -0.5);\n    geometry.scale(Wall.scale.x, Wall.scale.y, Wall.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nWall.scale = new Vector3(4, 3, 4);\n\nexport default Wall;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  VertexColors,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\nimport Wall from './wall';\n\nclass Hallway extends Mesh {\n  constructor({\n    hasCeiling,\n    hasElevator,\n    isEdge,\n    isLobby,\n  }) {\n    const merged = new Geometry();\n    const floor = Wall.getGeometry({\n      aoBottom: !isLobby,\n      material: 0,\n      orientation: 'horizontal',\n    });\n    merged.merge(floor);\n    if (hasElevator) {\n      const wall = Wall.getGeometry({\n        aoTop: hasCeiling,\n        width: 0.25,\n        material: 1,\n      });\n      wall.translate(-0.375, 0.5, -0.5);\n      merged.merge(wall);\n      wall.translate(0.75, 0, 0);\n      merged.merge(wall);\n    } else {\n      const wall = Wall.getGeometry({\n        aoTop: hasCeiling,\n        material: 1,\n      });\n      wall.translate(0, 0.5, -0.5);\n      merged.merge(wall);\n    }\n    if (!isLobby) {\n      const wall = Wall.getGeometry({\n        aoTop: false,\n        height: 1 / 3,\n        material: 1,\n      });\n      wall.rotateY(Math.PI);\n      wall.translate(0, 1 / 3 / 2, 0.5);\n      merged.merge(wall);\n      if (isEdge) {\n        const wall = Wall.getGeometry({\n          aoTop: false,\n          height: 1 / 3,\n          material: 1,\n        });\n        wall.rotateY(Math.PI * 0.5 * (isEdge === 'left' ? 1 : -1));\n        wall.translate(isEdge === 'left' ? -0.5 : 0.5, 1 / 3 / 2, 0);\n        merged.merge(wall);\n      }\n    }\n    merged.scale(Wall.scale.x, Wall.scale.y, Wall.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      [\n        new GridMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n        new MeshPhongMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n      ]\n    );\n  }\n}\n\nexport default Hallway;\n","import {\n  BufferGeometry,\n  Geometry,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  Vector3,\n} from 'three';\n\nimport { AStarFinder, Grid } from 'pathfinding';\n\nclass Walkable extends Mesh {\n  constructor(grid) {\n    const geometry = new Geometry();\n    const floor = new PlaneGeometry(1024, 1024, 2, 2);\n    floor.rotateX(Math.PI * -0.5);\n    floor.translate(0, 0, 512);\n    const intersect = new PlaneGeometry(1024, 1024, 2, 2);\n    intersect.translate(0, 512, 0);\n    geometry.merge(floor);\n    geometry.merge(intersect);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshBasicMaterial({\n        transparent: true,\n        visible: false,\n      })\n    );\n    this.finder = new AStarFinder({\n      allowDiagonal: true,\n      dontCrossCorners: true,\n    });\n    this.grid = new Grid(grid);\n    this.grid.setWalkableAt(0, 1, true);\n  }\n\n  getPath(from, to) {\n    const { grid, finder } = this;\n    from = this.worldToGrid(from);\n    to = this.worldToGrid(to);\n    return finder.findPath(from.x, from.z, to.x, to.z, grid.clone()).map(([x, z]) => (\n      this.localToWorld(new Vector3(x + 0.5, 0, z + 0.5))\n    ));\n  }\n\n  worldToGrid(point) {\n    const { grid, position } = this;\n    point.y = position.y;\n    this.worldToLocal(point);\n    point.x = Math.min(Math.max(point.x, 0), grid.width - 1);\n    point.z = Math.min(Math.max(point.z, 0), grid.height - 1);\n    point = {\n      x: Math.floor(point.x),\n      z: Math.floor(point.z),\n    };\n    while (!grid.isWalkableAt(point.x, point.z) && point.z < grid.height - 1) {\n      point.z += 1;\n    }\n    return point;\n  }\n}\n\nexport default Walkable;\n","import { Object3D } from 'three';\nimport Elevator from './elevator';\nimport Hallway from './hallway';\nimport Wall from './wall';\nimport Walkable from '@/engine/walkable';\n\nclass Building extends Object3D {\n  constructor({\n    elevators,\n    floors,\n  }) {\n    super();\n    this.elevators = elevators.map(({\n      floors,\n      origin,\n    }) => {\n      const elevator = new Elevator({ floors, origin });\n      elevator.position.x = origin.x * 4;\n      elevator.position.y = origin.y * 3;\n      this.add(elevator);\n      return elevator;\n    });\n    const width = floors.reduce((width, layout) => Math.max(width, layout.split('').length * 4), 0);\n    this.heightmap = [...Array(6)].map(() => [...Array(width)].map(() => (0)));\n    this.floors = floors.map((layout, floor) => {\n      const buttons = [];\n      const elevators = [];\n      const meshes = [];\n      const rooms = layout.split('');\n      const grid = [...Array(4)].map(() => [...Array(rooms.length * 4)].map(() => (1)));\n      rooms.forEach((type, room) => {\n        let mesh;\n        switch (type) {\n          case ' ':\n            return;\n          case '_':\n            mesh = new Wall();\n            break;\n          case '.':\n          default: {\n            let isEdge = false;\n            if (room === 0 || ~[' ', '_'].indexOf(rooms[room - 1])) isEdge = 'left';\n            else if (room === rooms.length - 1 || ~[' ', '_'].indexOf(rooms[room + 1])) isEdge = 'right';\n            const hasCeiling = floor < floors.length - 1 && [' ', '_'].indexOf(floors[floor + 1].split('')[room]) === -1;\n            const elevatorIndex = (\n              this.elevators.findIndex(({\n                floors,\n                origin,\n              }) => (\n                origin.x === room\n                && origin.y <= floor\n                && origin.y + floors > floor\n              ))\n            );\n            const hasElevator = ~elevatorIndex;\n            if (hasElevator) {\n              const elevator = this.elevators[elevatorIndex];\n              const doors = elevator.doors[floor - elevator.origin.y];\n              buttons.push(doors.callButton);\n              elevators.push(doors.collisionMesh);\n              meshes.push(doors.collisionMesh);\n            }\n            mesh = new Hallway({\n              hasCeiling,\n              hasElevator,\n              isEdge,\n              isLobby: floor === 0,\n            });\n            for (let x = 0; x < 4; x += 1) {\n              for (let z = 0; z < 6; z += 1) {\n                if (z > 1) {\n                  this.heightmap[z][(room * 4) + x] = floor * 3;\n                } else if (hasElevator && x > 0 && x < 3) {\n                  this.heightmap[z][(room * 4) + x] = (floor + 1) * 3;\n                }\n              }\n              for (let y = 0; y < 4; y += 1) {\n                grid[y][(room * 4) + x] = 0;\n              }\n            }\n            break;\n          }\n        }\n        mesh.position.set(room * 4, floor * 3, 0);\n        this.add(mesh);\n        meshes.push(mesh);\n      });\n      const walkable = new Walkable(grid);\n      walkable.position.set(-2, floor * 3, -2);\n      this.add(walkable);\n      return {\n        buttons,\n        elevators,\n        meshes,\n        walkable,\n      };\n    });\n  }\n\n  addToFloorGrid({\n    floor,\n    mesh,\n    x,\n    z,\n  }) {\n    const { floors: { [floor]: { walkable } } } = this;\n    walkable.grid.setWalkableAt(x, z, false);\n    mesh.position.set(x + 0.5, 0, z + 0.5).add(walkable.position);\n    this.add(mesh);\n  }\n\n  getHeight(x, z) {\n    const { heightmap } = this;\n    x = Math.floor(x + 2);\n    z = Math.floor(z + 4);\n    if (\n      x < 0\n      || x > heightmap[0].length - 1\n      || z < 0\n      || z > heightmap.length - 1\n    ) {\n      return 0;\n    }\n    return heightmap[z][x];\n  }\n\n  onAnimationTick(animation) {\n    const { children } = this;\n    children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n  }\n}\n\nexport default Building;\n","class Dialog {\n  constructor() {\n    this.wrapper = document.createElement('div');\n    this.wrapper.className = 'dialog';\n    this.content = document.createElement('div');\n    this.wrapper.appendChild(this.content);\n  }\n\n  mount() {\n    const { wrapper } = this;\n    document.body.appendChild(wrapper);\n  }\n\n  unmount() {\n    const { wrapper } = this;\n    document.body.removeChild(wrapper);\n  }\n\n  add(tag, className) {\n    const { content } = this;\n    const node = document.createElement(tag);\n    if (className) {\n      node.className = className;\n    }\n    content.appendChild(node);\n    return node;\n  }\n\n  empty() {\n    const { content } = this;\n    while (content.firstChild) {\n      content.removeChild(content.firstChild);\n    }\n  }\n}\n\nexport default Dialog;\n","import Dialog from './dialog';\n\nclass ElevatorUI extends Dialog {\n  show(\n    {\n      floor,\n      floors,\n      origin,\n    },\n    {\n      onFloor,\n      onExit,\n    }\n  ) {\n    this.empty();\n    for (let i = floors - 1; i >= 0; i -= 1) {\n      const button = this.add('button', floor === i ? 'active' : '');\n      if (floor !== i) {\n        button.addEventListener('click', (i => () => {\n          this.unmount();\n          onFloor(i);\n        })(i), false);\n      }\n      button.innerText = origin.y + i;\n    }\n    const button = this.add('button', 'exit');\n    button.addEventListener('click', () => {\n      this.unmount();\n      onExit();\n    }, false);\n    button.innerText = 'Exit elevator';\n    this.mount();\n  }\n}\n\nexport default ElevatorUI;\n","import Dude from '@/actors/dude';\nimport ThiccBoi from '@/actors/thiccboi';\nimport Building from '@/building';\nimport ElevatorUI from '@/ui/elevator';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  // Spawn player\n  const player = new Dude({\n    arms: 0x222222,\n    eyes: 0x990000,\n    head: 0x333333,\n    legs: 0x222222,\n    torso: 0x990000,\n  });\n  player.position.set(6, 0, 0);\n  player.destinationMarker = new Marker();\n  scene.root.add(player);\n  scene.root.add(player.destinationMarker);\n  scene.camera.target = player.position;\n\n  // Spawn test building\n  const building = new Building({\n    elevators: [\n      {\n        floors: 4,\n        origin: { x: 2, y: 0 },\n      },\n      {\n        floors: 4,\n        origin: { x: 4, y: 1 },\n      },\n    ],\n    floors: [\n      '  ...',\n      ' .._..',\n      '..._..',\n      '......',\n      ' ....',\n    ].reverse(),\n  });\n  scene.root.add(building);\n  scene.camera.maxHeight = 2.9;\n  scene.camera.testMeshes = building.floors.reduce((floors, { meshes }) => ([\n    ...floors,\n    ...meshes,\n  ]), []);\n  scene.rain.position.x = building.heightmap[0].length * 0.5;\n  scene.rain.setHeightTest(building.getHeight.bind(building));\n\n  // Spawn some dudes\n  const actors = [Dude, ThiccBoi, ThiccBoi];\n  const dudes = [...Array(building.floors.length * actors.length)].map(() => {\n    const Actor = actors[Math.floor(Math.random() * actors.length)];\n    const dude = new Actor({\n      arms: 0x222222,\n      eyes: 0x999999 * Math.random(),\n      hat: Math.random() > 0.5 ? (0x999999 * Math.random()) : false,\n      head: 0x999999 * Math.random(),\n      legs: 0x222222,\n      torso: 0x999999 * Math.random(),\n    });\n    const floor = Math.floor(Math.random() * building.floors.length);\n    const { walkable: { grid } } = building.floors[floor];\n    let spawn;\n    do {\n      spawn = {\n        x: Math.floor(Math.random() * grid.width),\n        z: Math.floor(Math.random() * grid.height - 1),\n      };\n    } while (!grid.isWalkableAt(spawn.x, spawn.z));\n    building.addToFloorGrid({\n      floor,\n      mesh: dude,\n      ...spawn,\n    });\n    dude.collisionMesh.floor = floor;\n    return dude.collisionMesh;\n  }).reduce((floors, dude) => {\n    if (!floors[dude.floor]) {\n      floors[dude.floor] = [];\n    }\n    floors[dude.floor].push(dude);\n    return floors;\n  }, {});\n\n  const elevatorUI = new ElevatorUI();\n\n  // Animation loop\n  let floor = 0;\n  scene.onAnimationTick = () => {\n    const { camera } = scene;\n    const { buttons, elevators, walkable } = building.floors[floor];\n    const pointer = input.getPointerFrame();\n    camera.processInput(pointer);\n    if (!pointer.primaryUp) {\n      return;\n    }\n    const raycaster = camera.getRaycaster(pointer.normalized);\n    {\n      // Dudes interaction\n      const hit = raycaster.intersectObjects(dudes[floor] || [])[0];\n      if (hit) {\n        const { object: { parent: dude } } = hit;\n        const lines = [\n          'Fuck You',\n          'Go away',\n          'Leave me alone',\n        ];\n        const onDestination = () => {\n          player.faceTo(dude.position);\n          setTimeout(() => (\n            dude.say([lines[Math.floor(Math.random() * lines.length)]])\n          ), 500);\n        };\n        const path = walkable.getPath(player.position.clone(), dude.position.clone());\n        if (path.length > 1) {\n          player.walk(path.slice(1), onDestination);\n        } else if (path.length) {\n          onDestination();\n        }\n        return;\n      }\n    }\n    {\n      // Elevators interaction\n      const hit = raycaster.intersectObjects(elevators)[0];\n      if (hit) {\n        const { point, object: { elevator } } = hit;\n        const elevatorFloor = floor - elevator.origin.y;\n        if (\n          elevator.floor === elevatorFloor\n          && elevator.doors[elevatorFloor].state === 0\n        ) {\n          const onDestination = () => {\n            input.isEnabled = false;\n            const cabin = elevator.cabin.position\n              .clone()\n              .add(elevator.position);\n            player.walk([cabin], () => {\n              elevator.doors[elevatorFloor].close();\n              elevatorUI.show(elevator, {\n                onFloor(target) {\n                  elevator.addPassenger(player);\n                  elevator.onCall(target, () => {\n                    cabin\n                      .copy(elevator.cabin.position)\n                      .add(elevator.position);\n                    cabin.z += 1;\n                    player.walk([cabin], () => {\n                      floor = elevator.origin.y + target;\n                      input.isEnabled = true;\n                    });\n                  });\n                },\n                onExit() {\n                  elevator.doors[elevatorFloor].open();\n                  cabin.z += 1;\n                  player.walk([cabin], () => {\n                    input.isEnabled = true;\n                  });\n                },\n              });\n            });\n          };\n          const path = walkable.getPath(player.position.clone(), point.clone());\n          if (path.length > 1) {\n            player.walk(path.slice(1), onDestination);\n          } else if (path.length) {\n            onDestination();\n          }\n          return;\n        }\n      }\n    }\n    {\n      // Button tapping\n      const hit = raycaster.intersectObjects(buttons)[0];\n      if (hit) {\n        const { point, object: button } = hit;\n        const onDestination = () => {\n          player.faceTo(point);\n          button.tap();\n        };\n        const path = walkable.getPath(player.position.clone(), point.clone());\n        if (path.length > 1) {\n          player.walk(path.slice(1), onDestination);\n        } else if (path.length) {\n          onDestination();\n        }\n        return;\n      }\n    }\n    {\n      // Walk\n      const hit = raycaster.intersectObject(walkable)[0];\n      if (hit) {\n        const path = walkable.getPath(player.position.clone(), hit.point);\n        if (path.length > 1) {\n          player.walk(path.slice(1));\n        }\n      }\n    }\n  };\n};\n","export { default as debug } from './debug';\nexport { default as game } from './game';\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass GridMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    size = 1,\n    subdivisions = 10,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.lambert.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'varying vec3 vPosition;',\n      ].join('\\n')\n    ).replace(\n      '#include <fog_vertex>',\n      [\n        '#include <fog_vertex>',\n        'vPosition = (modelMatrix * vec4( transformed, 1.0 )).xyz;',\n      ].join('\\n')\n    );\n    const primaryGrid = 1 / size;\n    const secondaryGrid = primaryGrid * subdivisions;\n    const fragmentShader = ShaderLib.lambert.fragmentShader.replace(\n      '#include <clipping_planes_pars_fragment>',\n      [\n        '#include <clipping_planes_pars_fragment>',\n        'varying vec3 vPosition;',\n        'float getGrid(float scale) {',\n        ' vec2 coord = vPosition.xz * scale;',\n        ' vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);',\n        ' return 1.0 - min(min(grid.x, grid.y), 1.0);',\n        '}',\n      ].join('\\n')\n    ).replace(\n      'vec4 diffuseColor = vec4( diffuse, opacity );',\n      [\n        `float primaryGrid = getGrid(${primaryGrid}${primaryGrid % 1 === 0 ? '.0' : ''});`,\n        `float secondaryGrid = getGrid(${secondaryGrid}${secondaryGrid % 1 === 0 ? '.0' : ''});`,\n        'vec3 grid = mix(mix(diffuse, diffuse * 0.95, secondaryGrid), diffuse * 1.15, primaryGrid);',\n        'vec4 diffuseColor = vec4(grid, opacity);',\n      ].join('\\n')\n    );\n    super({\n      name: `grid-material-${size}-${subdivisions}`,\n      uniforms: UniformsUtils.clone(ShaderLib.lambert.uniforms),\n      fragmentShader,\n      vertexShader,\n      extensions: { derivatives: true },\n      fog: true,\n      lights: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default GridMaterial;\n","import Input from '@/engine/input';\nimport Music from '@/engine/music';\nimport Scene from '@/engine/scene';\nimport * as Scenes from '@/scenes';\n\nconst mount = document.getElementById('mount');\nconst input = new Input({ mount });\nconst music = new Music({ toggle: document.getElementById('sound') });\nconst scene = new Scene({ mount });\n\nlet route = window.location.hash.split('/').slice(1)[0];\nif (!Scenes[route]) {\n  window.location.hash = '/game';\n  route = 'game';\n}\nsetImmediate(() => window.addEventListener('hashchange', () => window.location.reload(), false));\n\nfunction onLoad() {\n  document.body.className = 'loaded';\n  Scenes[route]({ input, scene });\n  input.touches.once('end', () => {\n    document.getElementById('splash').style.display = 'none';\n    input.isEnabled = true;\n    music.play();\n  });\n}\n\nfunction waitForFonts(fonts) {\n  let loaded = 0;\n  fonts.forEach(({ font, test }) => {\n    const fontTester = document.createElement('div');\n    fontTester.innerText = test;\n    fontTester.style.position = 'absolute';\n    fontTester.style.fontFamily = 'sans-serif';\n    fontTester.style.top = '-999999px';\n    document.body.appendChild(fontTester);\n    const { width: initialWidth } = fontTester.getBoundingClientRect();\n    fontTester.style.fontFamily = font;\n    const check = () => {\n      const { width } = fontTester.getBoundingClientRect();\n      if (width > initialWidth) {\n        document.body.removeChild(fontTester);\n        loaded += 1;\n        if (loaded === fonts.length) {\n          onLoad();\n        }\n      } else {\n        setTimeout(check, 10);\n      }\n    };\n    check();\n  });\n}\n\nwaitForFonts([\n  { font: \"'Print Char 21'\", test: 'QW@HhsXJ' },\n]);\n","import {\n  CanvasTexture,\n  SpriteMaterial as ThreeSprite,\n} from 'three';\n\nclass SpriteMaterial extends ThreeSprite {\n  constructor({ width, height, ...rest }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    super({\n      map: texture,\n      ...rest,\n    });\n    this.renderer = renderer;\n    this.ctx = renderer.getContext('2d');\n  }\n}\n\nexport default SpriteMaterial;\n"],"sourceRoot":""}