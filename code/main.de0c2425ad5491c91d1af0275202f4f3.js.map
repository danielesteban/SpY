{"version":3,"sources":["webpack:///./src/engine/camera.js","webpack:///./src/engine/grid.js","webpack:///./src/materials/rain.js","webpack:///./src/engine/rain.js","webpack:///./src/engine/moon.js","webpack:///./src/engine/starfield.js","webpack:///./src/engine/vignette.js","webpack:///./src/engine/scene.js","webpack:///./src/engine/music.js","webpack:///./src/engine/input.js","webpack:///./src/items/bubble.js","webpack:///./src/engine/actor.js","webpack:///./src/actors/dude.js","webpack:///./src/items/marker.js","webpack:///./src/scenes/debug.js","webpack:///./src/building/elevator/cabin.js","webpack:///./src/items/button.js","webpack:///./src/building/elevator/doors.js","webpack:///./src/building/elevator/shaft.js","webpack:///./src/building/elevator/index.js","webpack:///./src/building/hallway.js","webpack:///./src/engine/walkable.js","webpack:///./src/building/index.js","webpack:///./src/scenes/game.js","webpack:///./src/scenes/index.js","webpack:///./src/materials/grid.js","webpack:///./src/index.js","webpack:///./src/materials/sprite.js"],"names":["Camera","_this","_classCallCheck","this","_getPrototypeOf","call","distance","maxHeight","Infinity","offset","tilt","Math","PI","pitch","speed","step","Vector3","root","Object3D","add","_assertThisInitialized","updateOrbit","PerspectiveCamera","delta","_ref","position","target","distanceTo","copy","sub","normalize","multiplyScalar","movement","_ref2","secondary","wheel","hasUpdated","x","min","max","y","set","cos","sin","lookAt","Grid","arguments","length","undefined","_ref$background","background","Color","_ref$size","size","_ref$subdivisions","subdivisions","grid_classCallCheck","geometry","CircleBufferGeometry","translate","rotateX","grid_possibleConstructorReturn","grid_getPrototypeOf","GridMaterial","material","color","Mesh","RainMaterial","_ref$color","rest","_objectWithoutProperties","rain_classCallCheck","vertexShader","ShaderLib","basic","replace","join","rain_possibleConstructorReturn","rain_getPrototypeOf","_objectSpread","name","uniforms","UniformsUtils","clone","fragmentShader","fog","diffuse","value","ShaderMaterial","Rain","engine_rain_classCallCheck","drop","BufferGeometry","fromGeometry","BoxGeometry","attributes","array","offsets","Float32Array","numDrops","InstancedBufferGeometry","addAttribute","BufferAttribute","InstancedBufferAttribute","setDynamic","engine_rain_possibleConstructorReturn","engine_rain_getPrototypeOf","frustumCulled","i","resetDrop","needsUpdate","floor","random","radius","z","Moon","moon_classCallCheck","moon_possibleConstructorReturn","moon_getPrototypeOf","SphereBufferGeometry","MeshBasicMaterial","Starfield","starfield_classCallCheck","count","aux","o","starfield_possibleConstructorReturn","starfield_getPrototypeOf","PointsMaterial","sizeAttenuation","moon","Points","Vignette","vignette_classCallCheck","vignette_possibleConstructorReturn","vignette_getPrototypeOf","camera","OrthographicCamera","sprite","SpriteMaterial","width","height","map","wrapS","ClampToEdgeWrapping","wrapT","magFilter","NearestFilter","minFilter","LinearFilter","Sprite","Scene","renderer","ctx","grd","createRadialGradient","addColorStop","fillStyle","beginPath","rect","fill","clearDepth","render","_ref$mount","mount","document","body","scene_classCallCheck","clock","Clock","WebGLRenderer","alpha","antialias","autoClear","setAnimationLoop","onAnimate","bind","setPixelRatio","window","devicePixelRatio","sky","setClearColor","appendChild","domElement","Root","FogExp2","AmbientLight","light","DirectionalLight","secondaryLight","grid","starfield","vignette","addEventListener","onResize","ShaderChunk","fog_pars_vertex","fog_vertex","fog_pars_fragment","fog_fragment","stats","begin","animation","getDelta","time","oldTime","onAnimationTick","children","forEach","child","clear","end","_mount$getBoundingCli","getBoundingClientRect","setSize","aspect","updateProjectionMatrix","fixThreeJSFog","QuaternionKeyframeTrack","DefaultInterpolation","InterpolateSmooth","VectorKeyframeTrack","Music","toggle","script","createElement","async","defer","src","check","SC","api","initialize","client_id","tracks","shuffle","track","wantsToPlay","play","setTimeout","index","temp","_this2","player","kill","id","stream","concat","then","on","next","setVolume","catch","button","isPlaying","pause","className","Input","pointer","current","Vector2","normalized","last","raycaster","Raycaster","touches","Touches","preventSimulated","onPointerDown","onPointerMove","onPointerUp","addWheelListener","onPointerWheel","e","preventDefault","frame","primaryDown","primaryUp","secondaryDown","secondaryUp","isEnabled","primary","_ref4","_slicedToArray","_ref3","top","left","_touches$i","clientX","clientY","_ref5","deltaY","_ref6","Bubble","_possibleConstructorReturn","depthTest","scale","visible","lines","delay","_this$material","clearRect","textAlign","textBaseline","shadowColor","shadowBlur","font","fillText","shift","clearTimeout","timer","display","Actor","actor_classCallCheck","actor_getPrototypeOf","hip","Bone","torso","head","leftArm","rightArm","leftLeg","rightLeg","Skeleton","mixer","AnimationMixer","actor_assertThisInitialized","actions","Object","keys","animations","reduce","action","_defineProperty","clipAction","idle","timeScale","rotationAux","movementAux","SkinnedMesh","limbs","merged","Geometry","limb","faces","face","materialIndex","Bones","merge","vertices","a","bone","b","c","vertex","skinIndices","push","Vector4","skinWeights","computeVertexNormals","computeBoundingSphere","walkingSpeed","walk","destination","destinationMarker","rotationSpeed","targetRotation","update","rotationStep","rotationDelta","rotation","abs","setAnimation","onDestinationCallback","fadeOut","reset","fadeIn","path","callback","faceTo","point","angle","bubble","boundingSphere","eulerToQuat","Quaternion","setFromEuler","Euler","toArray","AnimationClip","_toConsumableArray","Dude","palette","dude_classCallCheck","bones","dude_assertThisInitialized","dude_getPrototypeOf","skeleton","CylinderGeometry","SphereGeometry","leftEye","eyes","rightEye","arms","legs","geometryFromLimbs","center","MeshPhongMaterial","skinning","vertexColors","VertexColors","Marker","marker_classCallCheck","marker_possibleConstructorReturn","marker_getPrototypeOf","transparent","inc","s","opacity","debug","input","scene","pack","dudes","debug_toConsumableArray","Array","v","dude","getPointerFrame","processInput","setFromCamera","hit","intersectObject","walkTo","mainDudeX","mainDudeZ","mainDude","Cabin","cabin_classCallCheck","setHSL","splice","cabin_possibleConstructorReturn","cabin_getPrototypeOf","side","DoubleSide","Button","onTap","button_classCallCheck","BoxBufferGeometry","button_possibleConstructorReturn","button_getPrototypeOf","animationVector","origin","ret","tapping","ThreeMath","smoothstep","addScaledVector","Doors","onCall","doors_classCallCheck","doors_possibleConstructorReturn","doors_getPrototypeOf","plane","PlaneGeometry","door","animationScale","state","states","CLOSED","targetState","callButton","OPEN","animationStep","Shaft","floors","shaft_classCallCheck","back","rotateY","shaft_possibleConstructorReturn","shaft_getPrototypeOf","Elevator","elevator_classCallCheck","elevator_possibleConstructorReturn","elevator_getPrototypeOf","buttons","animationStart","shaft","doors","elevator_toConsumableArray","cabin","close","open","Hallway","_ref2$hasElevator","hasElevator","_ref2$isEdge","isEdge","_ref2$isLobby","isLobby","hallway_classCallCheck","generateWall","aoBottom","orientation","wall","aoTop","hallway_possibleConstructorReturn","hallway_getPrototypeOf","_ref$aoTop","_ref$aoBottom","_ref$width","_ref$height","ceil","hallway_toConsumableArray","j","offsetHSL","Walkable","walkable_classCallCheck","intersect","walkable_possibleConstructorReturn","walkable_getPrototypeOf","finder","AStarFinder","setWalkableAt","from","to","worldToGrid","findPath","walkable_slicedToArray","localToWorld","worldToLocal","isWalkableAt","Building","elevators","building_classCallCheck","building_possibleConstructorReturn","building_getPrototypeOf","elevator","building_toConsumableArray","layout","rooms","split","type","room","mesh","findIndex","walkable","game","building","intersectObjects","object","getPath","tap","say","getWorldPosition","__webpack_require__","d","__webpack_exports__","phong","primaryGrid","secondaryGrid","extensions","derivatives","lights","r","setImmediate","fonts","loaded","_engine_input__WEBPACK_IMPORTED_MODULE_0__","_engine_music__WEBPACK_IMPORTED_MODULE_1__","_engine_scene__WEBPACK_IMPORTED_MODULE_2__","_scenes__WEBPACK_IMPORTED_MODULE_3__","getElementById","music","route","location","hash","slice","Scenes","reload","test","fontTester","innerText","style","fontFamily","initialWidth","removeChild","once","texture","CanvasTexture","getContext","ThreeSprite"],"mappings":"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","file":"code/main.f57a3107f63b31f57787.js","sourcesContent":["import {\n  Object3D,\n  PerspectiveCamera,\n  Vector3,\n} from 'three';\n\nclass Camera extends PerspectiveCamera {\n  constructor() {\n    super(60, 1, 0.1, 2048);\n    this.distance = 5;\n    this.maxHeight = Infinity;\n    this.offset = 1.2;\n    this.tilt = Math.PI * -0.333;\n    this.pitch = Math.PI * 0.1;\n    this.speed = 1.25;\n    this.step = new Vector3();\n    this.root = new Object3D();\n    this.root.add(this);\n    this.updateOrbit();\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      root: { position },\n      speed,\n      step,\n      target,\n    } = this;\n    if (!target || position.distanceTo(target) <= 0.1) return;\n    step\n      .copy(target)\n      .sub(position)\n      .normalize()\n      .multiplyScalar(delta * speed);\n    position.add(step);\n  }\n\n  processInput({\n    movement,\n    secondary,\n    wheel,\n  }) {\n    let hasUpdated = false;\n    if (secondary) {\n      const sensitivity = 0.003;\n      this.tilt -= movement.x * sensitivity;\n      this.tilt = Math.min(Math.max(this.tilt, Math.PI * -1.25), Math.PI * 0.25);\n      this.pitch += movement.y * sensitivity;\n      this.pitch = Math.min(Math.max(this.pitch, Math.PI * -0.45), Math.PI * 0.45);\n      hasUpdated = true;\n    }\n    if (wheel) {\n      const sensitivity = 0.006;\n      this.distance = Math.min(Math.max(this.distance + (wheel * sensitivity), 1), 8);\n      hasUpdated = true;\n    }\n    if (hasUpdated) this.updateOrbit();\n    return hasUpdated;\n  }\n\n  updateOrbit() {\n    const {\n      distance,\n      maxHeight,\n      offset,\n      pitch,\n      position,\n      root,\n      tilt,\n    } = this;\n    position.set(\n      Math.cos(tilt) * Math.cos(pitch),\n      Math.sin(pitch),\n      Math.sin(-tilt) * Math.cos(pitch)\n    )\n      .normalize()\n      .multiplyScalar(distance);\n    position.y = Math.min(Math.max(position.y, 0.1 - offset), maxHeight - offset);\n    this.lookAt(root.position);\n    position.y += offset;\n  }\n}\n\nexport default Camera;\n","import {\n  Color,\n  Mesh,\n  CircleBufferGeometry,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Grid extends Mesh {\n  constructor({\n    background = new Color(0xFFFFFF),\n    size = 1,\n    subdivisions = 10,\n  } = {}) {\n    const geometry = new CircleBufferGeometry(128, 8);\n    geometry.translate(0, 0, -0.01);\n    geometry.rotateX(Math.PI * -0.5);\n    super(\n      geometry,\n      new GridMaterial({\n        size,\n        subdivisions,\n      })\n    );\n    this.material.color.set(background);\n  }\n}\n\nexport default Grid;\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass RainMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.basic.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'attribute vec3 offset;',\n      ].join('\\n')\n    ).replace(\n      '#include <begin_vertex>',\n      [\n        'vec3 transformed = vec3(position + offset);',\n      ].join('\\n')\n    );\n    super({\n      name: 'rain-material',\n      uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n      fragmentShader: ShaderLib.basic.fragmentShader,\n      vertexShader,\n      fog: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default RainMaterial;\n","import {\n  BufferAttribute,\n  BoxGeometry,\n  BufferGeometry,\n  InstancedBufferGeometry,\n  InstancedBufferAttribute,\n  Mesh,\n  Vector3,\n} from 'three';\nimport RainMaterial from '@/materials/rain';\n\nclass Rain extends Mesh {\n  constructor() {\n    const drop = (new BufferGeometry()).fromGeometry(\n      new BoxGeometry(0.01, 0.5, 0.01)\n    ).attributes.position.array;\n    const offsets = new Float32Array(Rain.numDrops * 3);\n    const geometry = new InstancedBufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(drop, 3));\n    geometry.addAttribute('offset', (new InstancedBufferAttribute(offsets, 3).setDynamic(true)));\n    super(\n      geometry,\n      new RainMaterial({\n        color: 0xBBBBEE,\n      })\n    );\n    this.position.x = 8;\n    this.frustumCulled = false;\n    this.drop = new Vector3();\n    this.offsets = offsets;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      this.resetDrop(i);\n    }\n  }\n\n  onAnimationTick({ delta }) {\n    const { geometry, offsets } = this;\n    const step = delta * 10;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      offsets[i + 1] -= step;\n      if (offsets[i + 1] <= 0) {\n        this.resetDrop(i);\n      }\n    }\n    geometry.attributes.offset.needsUpdate = true;\n  }\n\n  resetDrop(i) {\n    const { drop, offsets } = this;\n    drop.set(\n      Math.floor(Math.random() * 1025) - 512,\n      0,\n      Math.floor(Math.random() * 1025) - 512\n    )\n      .normalize()\n      .multiplyScalar(10 + (Math.random() * Rain.radius));\n    offsets[i] = drop.x;\n    offsets[i + 1] = (Rain.radius * 0.25) + (Math.random() * Rain.radius * 0.25);\n    offsets[i + 2] = drop.z;\n  }\n}\n\nRain.numDrops = 5000;\nRain.radius = 50;\n\nexport default Rain;\n","import {\n  Mesh,\n  MeshBasicMaterial,\n  SphereBufferGeometry,\n} from 'three';\n\nclass Moon extends Mesh {\n  constructor() {\n    super(\n      new SphereBufferGeometry(100, 32, 32),\n      new MeshBasicMaterial({\n        color: 0x999999,\n        fog: false,\n      })\n    );\n  }\n}\n\nexport default Moon;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  Vector3,\n} from 'three';\nimport Moon from './moon';\n\nclass Starfield extends Points {\n  constructor() {\n    const count = 10000;\n    const radius = 1024;\n    const geometry = new BufferGeometry();\n    const position = new Float32Array(count * 3);\n    const size = new Float32Array(count);\n    const aux = new Vector3();\n    for (let i = 0; i < count; i += 1) {\n      aux.set(\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius,\n        Math.floor(Math.random() * (radius + 1)),\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius\n      ).normalize().multiplyScalar(radius);\n      const o = i * 3;\n      position[o] = aux.x;\n      position[o + 1] = aux.y;\n      position[o + 2] = aux.z;\n      size[i] = 10 + Math.floor(Math.random() * 100);\n    }\n    geometry.addAttribute('position', new BufferAttribute(position, 3));\n    geometry.addAttribute('size', new BufferAttribute(size, 1));\n    super(\n      geometry,\n      new PointsMaterial({\n        color: 0x999999,\n        fog: false,\n        sizeAttenuation: false,\n      })\n    );\n    this.moon = new Moon();\n    this.moon.position.set(radius, radius * 0.5, radius);\n    this.add(this.moon);\n  }\n}\n\nexport default Starfield;\n","import {\n  ClampToEdgeWrapping,\n  NearestFilter,\n  LinearFilter,\n  Sprite,\n  Scene,\n  OrthographicCamera,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\n\nclass Vignette extends Scene {\n  constructor() {\n    super();\n    this.camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n    this.sprite = new SpriteMaterial({\n      width: 0,\n      height: 0,\n    });\n    this.sprite.map.wrapS = ClampToEdgeWrapping;\n    this.sprite.map.wrapT = ClampToEdgeWrapping;\n    this.sprite.map.magFilter = NearestFilter;\n    this.sprite.map.minFilter = LinearFilter;\n    this.add(new Sprite(this.sprite));\n  }\n\n  onResize({ width, height }) {\n    const { sprite } = this;\n    const { renderer, ctx } = sprite;\n    const size = Math.max(width, height);\n    renderer.width = size;\n    renderer.height = size;\n    const grd = ctx.createRadialGradient(\n      size * 0.5, size * 0.5, size * 0.6,\n      size * 0.5, size * 0.5, size\n    );\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 1)');\n    ctx.fillStyle = grd;\n    ctx.beginPath();\n    ctx.rect(0, 0, size, size);\n    ctx.fill();\n    sprite.map.needsUpdate = true;\n  }\n\n  render(renderer) {\n    renderer.clearDepth();\n    renderer.render(this, this.camera);\n  }\n}\n\nexport default Vignette;\n","import Stats from 'stats.js';\nimport {\n  AmbientLight,\n  Clock,\n  Color,\n  DirectionalLight,\n  FogExp2,\n  InterpolateSmooth,\n  QuaternionKeyframeTrack,\n  Scene as Root,\n  ShaderChunk,\n  VectorKeyframeTrack,\n  WebGLRenderer,\n} from 'three';\nimport Camera from './camera';\nimport Grid from './grid';\nimport Rain from './rain';\nimport Starfield from './starfield';\nimport Vignette from './vignette';\n\nclass Scene {\n  constructor({\n    mount = document.body,\n  } = {}) {\n    this.camera = new Camera();\n    this.clock = new Clock();\n    this.mount = mount;\n    this.renderer = new WebGLRenderer({\n      alpha: false,\n      antialias: true,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setAnimationLoop(this.onAnimate.bind(this));\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n    const sky = new Color(0x334455);\n    this.renderer.setClearColor(sky);\n    mount.appendChild(this.renderer.domElement);\n    this.root = new Root();\n    this.root.fog = new FogExp2(sky, 0.03);\n    this.root.add(new AmbientLight(0x333333));\n    const light = new DirectionalLight(0xffffff, 0.8);\n    light.position.set(1, 0.5, 1);\n    this.root.add(light);\n    const secondaryLight = new DirectionalLight(0xffffff, 0.4);\n    secondaryLight.position.set(-1, -0.5, 1);\n    this.root.add(secondaryLight);\n    this.root.add(this.camera.root);\n    this.grid = new Grid({ background: new Color(0x333344) });\n    this.root.add(this.grid);\n    this.root.add(new Rain());\n    this.starfield = new Starfield();\n    this.root.add(this.starfield);\n    this.vignette = new Vignette();\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = 'absolute';\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      mount.style.position = 'relative';\n      mount.appendChild(this.stats.dom);\n    }\n  }\n\n  onAnimate() {\n    const {\n      clock,\n      camera,\n      grid,\n      renderer,\n      root,\n      starfield,\n      stats,\n      vignette,\n    } = this;\n    if (stats) stats.begin();\n    const animation = { delta: Math.min(clock.getDelta(), 1), time: clock.oldTime / 1000 };\n    if (this.onAnimationTick) {\n      this.onAnimationTick(animation);\n    }\n    root.children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n    if (camera.onAnimationTick) {\n      camera.onAnimationTick(animation);\n    }\n    grid.position.set(camera.root.position.x, 0, camera.root.position.z);\n    starfield.position.copy(grid.position);\n    renderer.clear();\n    renderer.render(root, camera);\n    vignette.render(renderer);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      camera,\n      mount,\n      renderer,\n      vignette,\n    } = this;\n    const { width, height } = mount.getBoundingClientRect();\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    vignette.onResize({ width, height });\n  }\n\n  static fixThreeJSFog() {\n    ShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n      'fogDepth = -mvPosition.z;',\n      'fogDepth = mvPosition;'\n    );\n    ShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n      'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n      [\n        'float fogDist = length(fogDepth);',\n        'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n      ].join('\\n')\n    ).replace(\n      'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n      'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n    );\n  }\n}\n\nScene.fixThreeJSFog();\nQuaternionKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\nVectorKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\n\nexport default Scene;\n","class Music {\n  static shuffle(tracks) {\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    return tracks;\n  }\n\n  constructor({ toggle }) {\n    const loaded = () => {\n      this.api = window.SC;\n      this.api.initialize({\n        client_id: 'eb5fcff9e107aab508431b4c3c416415',\n      });\n      // this.api.resolve('https://soundcloud.com/travis-stanley-3/sets/jazz-noir-dark-jazz').then(({ tracks }) => {\n      //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n      // });\n      // eslint-disable-next-line\n      this.tracks = Music.shuffle([14281750,135099881,14449372,201545618,130450594,43516158,20969172,29561041,6582510,89379153,96594845,199889475,137188503,74658085,90256034,183847047,3916883]);\n      this.track = 0;\n      toggle.addEventListener('click', () => this.toggle(toggle), false);\n      if (this.wantsToPlay) {\n        delete this.wantsToPlay;\n        this.play();\n      }\n    };\n    const check = () => {\n      if (!window.SC) {\n        setTimeout(check, 10);\n        return;\n      }\n      loaded();\n    };\n    const script = document.createElement('script');\n    script.async = true;\n    script.defer = true;\n    script.src = 'https://connect.soundcloud.com/sdk/sdk-3.3.1.js';\n    document.body.appendChild(script);\n    check();\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    if (!api) {\n      this.wantsToPlay = true;\n      return;\n    }\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    const id = tracks[track];\n    if (!__PRODUCTION__) console.log(`playing: ${id}`);\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('audio_error', () => this.next());\n      player.on('finish', () => this.next());\n      player.setVolume(0.8);\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  toggle(button) {\n    const { player } = this;\n    if (!player) return;\n    if (player.isPlaying()) {\n      player.pause();\n      button.className = 'muted';\n    } else {\n      button.className = '';\n      player.play();\n    }\n  }\n}\n\nexport default Music;\n","import { Raycaster, Vector2 } from 'three';\nimport Touches from 'touches';\nimport { addWheelListener } from 'wheel';\n\nclass Input {\n  constructor({\n    mount = document.body,\n  }) {\n    this.mount = mount;\n    this.pointer = {\n      current: new Vector2(0, 0),\n      movement: { x: 0, y: 0 },\n      normalized: new Vector2(0, 0),\n      last: new Vector2(0, 0),\n      raycaster: new Raycaster(),\n      wheel: 0,\n    };\n    this.touches = Touches(window, {\n      preventSimulated: false,\n      target: mount,\n    })\n      .on('start', this.onPointerDown.bind(this))\n      .on('move', this.onPointerMove.bind(this))\n      .on('end', this.onPointerUp.bind(this));\n    addWheelListener(window, this.onPointerWheel.bind(this));\n    window.addEventListener('contextmenu', e => e.preventDefault(), false);\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n  }\n\n  getPointerFrame() {\n    const { pointer } = this;\n    const frame = { ...pointer };\n    pointer.primaryDown = false;\n    pointer.primaryUp = false;\n    pointer.secondaryDown = false;\n    pointer.secondaryUp = false;\n    pointer.movement = { x: 0, y: 0 };\n    pointer.wheel = 0;\n    return frame;\n  }\n\n  onPointerDown(e) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    const { button, touches } = e;\n    if (touches) {\n      if (touches.length > 1) {\n        e.preventDefault();\n      }\n      if (!pointer.secondary) {\n        if (touches.length === 1) {\n          pointer.primary = true;\n          pointer.primaryDown = true;\n        } else {\n          pointer.secondary = true;\n          pointer.secondaryDown = true;\n          pointer.primary = false;\n        }\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = true;\n        pointer.primaryDown = true;\n        break;\n      case 2:\n        pointer.secondary = true;\n        pointer.secondaryDown = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerMove({ touches }, [x, y]) {\n    const { isEnabled, pointer, rect } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      const { top, left } = rect;\n      x = 0;\n      y = 0;\n      for (let i = 0; i < touches.length; i += 1) {\n        const { clientX, clientY } = touches[i];\n        x += (clientX - left);\n        y += (clientY - top);\n      }\n      x /= touches.length;\n      y /= touches.length;\n    }\n    const { width, height } = rect;\n    pointer.current.x = x;\n    pointer.current.y = y;\n    pointer.normalized.x = ((x / width) * 2) - 1;\n    pointer.normalized.y = 1 - ((y / height) * 2);\n    pointer.movement = {\n      x: pointer.current.x - pointer.last.x,\n      y: pointer.current.y - pointer.last.y,\n    };\n    pointer.last.copy(pointer.current);\n  }\n\n  onPointerUp({ button, touches }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      if (pointer.primary) {\n        pointer.primary = false;\n        pointer.primaryUp = true;\n      }\n      if (pointer.secondary) {\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = false;\n        pointer.primaryUp = true;\n        break;\n      case 2:\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerWheel({ deltaY }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    pointer.wheel = deltaY;\n  }\n\n  onResize() {\n    const { mount } = this;\n    this.rect = mount.getBoundingClientRect();\n  }\n}\n\n\nexport default Input;\n","import {\n  Sprite,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\nclass Bubble extends Sprite {\n  constructor() {\n    super(new SpriteMaterial({\n      width: 512,\n      height: 64,\n      depthTest: false,\n    }));\n    this.scale.set(2, 0.25, 1);\n    this.visible = false;\n  }\n\n  display(lines, delay = 1500) {\n    const { renderer, ctx } = this.material;\n    const { width, height } = renderer;\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = '#fff';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n    ctx.shadowBlur = 10;\n    ctx.font = \"24px 'Print Char 21',monospace\";\n    ctx.fillText(lines.shift(), width * 0.5, height * 0.5);\n    this.material.map.needsUpdate = true;\n    this.visible = true;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      if (lines.length) {\n        this.display(lines, delay);\n        return;\n      }\n      this.visible = false;\n    }, delay);\n  }\n}\n\nexport default Bubble;\n","import {\n  AnimationClip,\n  AnimationMixer,\n  Bone,\n  BufferGeometry,\n  Euler,\n  Geometry,\n  QuaternionKeyframeTrack,\n  Quaternion,\n  SkinnedMesh,\n  Skeleton,\n  Vector2,\n  Vector3,\n  Vector4,\n} from 'three';\nimport Bubble from '@/items/bubble';\n\nclass Actor extends SkinnedMesh {\n  static geometryFromLimbs(limbs) {\n    const merged = new Geometry();\n    Object.keys(limbs).forEach((limb) => {\n      limbs[limb].faces.forEach((face) => {\n        face.materialIndex = Actor.Bones[limb];\n      });\n      merged.merge(limbs[limb]);\n    });\n    merged.faces.forEach((face) => {\n      merged.vertices[face.a].bone = face.materialIndex;\n      merged.vertices[face.b].bone = face.materialIndex;\n      merged.vertices[face.c].bone = face.materialIndex;\n      face.materialIndex = 0;\n    });\n    merged.vertices.forEach((vertex) => {\n      merged.skinIndices.push(new Vector4(vertex.bone, 0, 0, 0));\n      merged.skinWeights.push(new Vector4(1, 0, 0, 0));\n    });\n    const geometry = (new BufferGeometry()).fromGeometry(merged);\n    geometry.computeVertexNormals();\n    geometry.computeBoundingSphere();\n    return geometry;\n  }\n\n  constructor({\n    geometry,\n    material,\n  }) {\n    super(\n      geometry,\n      material\n    );\n    const hip = new Bone();\n    this.add(hip);\n    const torso = new Bone();\n    hip.add(torso);\n    const head = new Bone();\n    torso.add(head);\n    const leftArm = new Bone();\n    torso.add(leftArm);\n    const rightArm = new Bone();\n    torso.add(rightArm);\n    const leftLeg = new Bone();\n    hip.add(leftLeg);\n    const rightLeg = new Bone();\n    hip.add(rightLeg);\n    this.bind(new Skeleton([\n      hip,\n      torso,\n      head,\n      leftArm,\n      rightArm,\n      leftLeg,\n      rightLeg,\n    ]));\n    this.mixer = new AnimationMixer(this);\n    this.actions = Object.keys(Actor.animations).reduce((actions, action) => ({\n      ...actions,\n      [action]: this.mixer.clipAction(Actor.animations[action]),\n    }), {});\n    this.animation = 'idle';\n    this.actions.idle.timeScale = 0.5;\n    this.actions.idle.play();\n    this.rotationAux = new Vector2();\n    this.movementAux = new Vector3();\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      actions: { walk: { timeScale: walkingSpeed } },\n      destination,\n      destinationMarker,\n      mixer,\n      movementAux,\n      position,\n      rotationSpeed,\n      targetRotation,\n    } = this;\n    mixer.update(delta);\n    if (targetRotation) {\n      const rotationStep = delta * rotationSpeed;\n      const rotationDelta = targetRotation - this.rotation.y;\n      this.rotation.y += Math.min(\n        Math.max(\n          rotationDelta,\n          -rotationStep\n        ),\n        rotationStep\n      );\n      if (Math.abs(rotationDelta) <= rotationStep) {\n        this.targetRotation = false;\n      }\n    }\n    if (!destination) return;\n    const distance = position.distanceTo(destination);\n    const step = delta * 1.5 * walkingSpeed;\n    position.add(\n      movementAux\n        .copy(destination)\n        .sub(position)\n        .normalize()\n        .multiplyScalar(Math.min(distance, step))\n    );\n    if (distance <= step) {\n      this.setAnimation('idle');\n      this.destination = false;\n      if (destinationMarker) {\n        destinationMarker.visible = false;\n      }\n      if (this.onDestinationCallback) {\n        this.onDestinationCallback();\n        delete this.onDestinationCallback;\n      }\n    }\n  }\n\n  setAnimation(animation) {\n    const { actions } = this;\n    if (this.animation === animation) return;\n    actions[this.animation].fadeOut(0.2);\n    this.animation = animation;\n    actions[this.animation]\n      .reset()\n      .fadeIn(0.2)\n      .play();\n  }\n\n  walkTo(path, callback) {\n    const { destinationMarker, position } = this;\n    const distance = position.distanceTo(path[path.length - 1]);\n    delete this.onDestinationCallback;\n    if (distance === 0) {\n      if (callback) callback();\n      return;\n    }\n    this.setAnimation('walk');\n    this.destination = path[path.length - 1];\n    if (destinationMarker) {\n      destinationMarker.position.copy(this.destination);\n      destinationMarker.visible = true;\n    }\n    if (callback) {\n      this.onDestinationCallback = callback;\n    }\n    this.faceTo(path[path.length - 1]);\n  }\n\n  faceTo(point) {\n    const { position, rotationAux } = this;\n    const angle = rotationAux.set(point.x - position.x, point.z - position.z).angle();\n    while (this.rotation.y < -Math.PI) this.rotation.y += Math.PI * 2;\n    while (this.rotation.y > Math.PI) this.rotation.y -= Math.PI * 2;\n    this.targetRotation = (Math.PI * 0.5) - angle;\n    while (this.targetRotation < -Math.PI) this.targetRotation += Math.PI * 2;\n    while (this.targetRotation > Math.PI) this.targetRotation -= Math.PI * 2;\n    if ((this.targetRotation - this.rotation.y) > Math.PI) {\n      this.targetRotation -= Math.PI * 2;\n    } else if ((this.targetRotation - this.rotation.y) < -Math.PI) {\n      this.targetRotation += Math.PI * 2;\n    }\n    this.rotationSpeed = Math.abs(this.targetRotation - this.rotation.y) * 1.5;\n  }\n\n  say(lines, delay) {\n    if (!this.bubble) {\n      this.bubble = new Bubble();\n      this.bubble.position.set(0, this.geometry.boundingSphere.radius * 2.25, 0);\n      this.add(this.bubble);\n    }\n    const { bubble } = this;\n    bubble.display(lines, delay);\n  }\n}\n\nActor.Bones = {\n  hip: 0,\n  torso: 1,\n  head: 2,\n  leftArm: 3,\n  rightArm: 4,\n  leftLeg: 5,\n  rightLeg: 6,\n};\n\nconst eulerToQuat = (x, y, z) => (new Quaternion()).setFromEuler(new Euler(x, y, z)).toArray();\n\nActor.animations = {\n  idle: (\n    new AnimationClip('idle', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n          ...eulerToQuat(0, Math.PI * 0.05, 0),\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * 0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n          ...eulerToQuat(0, 0, Math.PI * -0.1),\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.25,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n          ...eulerToQuat(0, 0, Math.PI * 0.1),\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n        ])\n      ),\n    ])\n  ),\n  walk: (\n    new AnimationClip('walk', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.02, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n          ...eulerToQuat(0, 0, Math.PI * 0.025),\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * -0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n        ])\n      ),\n    ])\n  ),\n};\n\nexport default Actor;\n","import {\n  CylinderGeometry,\n  MeshPhongMaterial,\n  SphereGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport Actor from '@/engine/actor';\n\nclass Dude extends Actor {\n  constructor(palette) {\n    super({\n      geometry: Dude.geometry(palette),\n      material: Dude.material,\n    });\n    const { skeleton: { bones } } = this;\n    Object.keys(Dude.bones).forEach((bone) => {\n      bones[Actor.Bones[bone]].position.copy(Dude.bones[bone]);\n    });\n  }\n}\n\nDude.bones = {\n  hip: new Vector3(0, 0.5, 0),\n  torso: new Vector3(0, 0, 0),\n  head: new Vector3(0, 0.5, 0),\n  leftArm: new Vector3(-0.15, 0.475, 0),\n  rightArm: new Vector3(0.15, 0.475, 0),\n  leftLeg: new Vector3(-0.075, 0, 0),\n  rightLeg: new Vector3(0.075, 0, 0),\n};\n\nDude.geometry = (palette) => {\n  const torso = new CylinderGeometry(0.175, 0.15, 0.5, 6);\n  torso.translate(0, 0.25, 0);\n  torso.faces.forEach((face) => {\n    face.color.set(palette.torso || 0x990000);\n  });\n  const head = new SphereGeometry(0.2, 8, 4);\n  head.translate(0, 0.2, 0);\n  head.faces.forEach((face) => {\n    face.color.set(palette.head);\n  });\n  const leftEye = new SphereGeometry(0.05);\n  leftEye.faces.forEach((face) => {\n    face.color.set(palette.eyes);\n  });\n  const rightEye = leftEye.clone();\n  leftEye.translate(-0.1, 0.2, 0.15);\n  rightEye.translate(0.1, 0.2, 0.15);\n  head.merge(leftEye);\n  head.merge(rightEye);\n  const leftArm = new CylinderGeometry(0.05, 0.03, 0.4, 6);\n  leftArm.faces.forEach((face) => {\n    face.color.set(palette.arms);\n  });\n  const rightArm = leftArm.clone();\n  leftArm.translate(0, -0.2, 0);\n  rightArm.translate(0, -0.2, 0);\n  const leftLeg = new CylinderGeometry(0.05, 0.05, 0.5, 4);\n  leftLeg.faces.forEach((face) => {\n    face.color.set(palette.legs);\n  });\n  const rightLeg = leftLeg.clone();\n  leftLeg.translate(0, -0.25, 0);\n  rightLeg.translate(0, -0.25, 0);\n  const geometry = Actor.geometryFromLimbs({\n    torso,\n    head,\n    leftArm,\n    rightArm,\n    leftLeg,\n    rightLeg,\n  });\n  geometry.boundingSphere.center.set(0, 0.7, 0);\n  geometry.boundingSphere.radius = 0.7;\n  return geometry;\n};\n\nDude.material = new MeshPhongMaterial({\n  skinning: true,\n  vertexColors: VertexColors,\n});\n\nexport default Dude;\n","import {\n  CircleBufferGeometry,\n  Mesh,\n  MeshPhongMaterial,\n} from 'three';\n\nclass Marker extends Mesh {\n  constructor() {\n    const geometry = new CircleBufferGeometry(0.25, 16);\n    geometry.rotateX(Math.PI * -0.5);\n    geometry.translate(0, 0.001, 0);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x222222,\n        transparent: true,\n      })\n    );\n    this.visible = false;\n  }\n\n  onAnimationTick({ time }) {\n    const { material, scale, visible } = this;\n    if (!visible) return;\n    const inc = ((1 + Math.sin(time * 4)) * 0.125);\n    const s = 0.75 + inc;\n    scale.set(s, 1, s);\n    material.opacity = 0.25 + inc;\n  }\n}\n\nexport default Marker;\n","import Dude from '@/actors/dude';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  const pack = {\n    dudes: [...Array(13)].map((v, i) => {\n      const dude = new Dude({\n        arms: 0x222222,\n        eyes: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n        head: i === 0 ? 0x333333 : (0x999999 * Math.random()),\n        legs: 0x222222,\n        torso: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n      });\n      dude.position.set(Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1), 0, 0);\n      scene.root.add(dude);\n      return dude;\n    }),\n    onAnimationTick() {\n      const { camera, grid } = scene;\n      const pointer = input.getPointerFrame();\n      camera.processInput(pointer);\n      if (pointer.primaryUp) {\n        const { raycaster } = pointer;\n        raycaster.setFromCamera(pointer.normalized, camera);\n        const hit = raycaster.intersectObject(grid)[0];\n        if (!hit) return;\n        pack.walkTo(hit.point);\n      }\n    },\n    walkTo(point) {\n      const { x: mainDudeX, z: mainDudeZ } = point;\n      this.dudes.forEach((dude, i) => {\n        point.x = mainDudeX + Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1);\n        point.z = mainDudeZ + Math.floor((i + 1) / 2) * -1;\n        if (i > 0) {\n          point.x += (Math.random() * 2) - 1;\n          point.z += (Math.random() * 2) - 1;\n          dude.actions.walk.timeScale = 0.8 + Math.random() * 0.4;\n        }\n        dude.walkTo([point.clone()]);\n      });\n    },\n  };\n\n  const [mainDude] = pack.dudes;\n  mainDude.destinationMarker = new Marker();\n  scene.root.add(mainDude.destinationMarker);\n  scene.camera.target = mainDude.position;\n\n  scene.camera.distance = 6;\n  scene.camera.pitch = Math.PI * 0.125;\n  scene.camera.updateOrbit();\n\n  scene.onAnimationTick = pack.onAnimationTick.bind(pack);\n};\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  VertexColors,\n} from 'three';\n\nclass Cabin extends Mesh {\n  constructor({\n    color,\n    scale,\n  }) {\n    const geometry = new BoxGeometry(\n      0.998, 0.999, 0.998,\n      scale.x, scale.y, scale.z\n    );\n    const aux = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    geometry.translate(0, 0.5, 0);\n    for (let i = 0; i < 12; i += 1) {\n      geometry.faces.splice(40, 1);\n    }\n    geometry.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nexport default Cabin;\n","import {\n  BoxBufferGeometry,\n  Math as ThreeMath,\n  Mesh,\n  MeshPhongMaterial,\n  Vector3,\n} from 'three';\n\nclass Button extends Mesh {\n  constructor({ onTap, position }) {\n    const geometry = new BoxBufferGeometry(0.2, 0.1, 0.1);\n    geometry.translate(0, 0, 0.049);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x440000,\n      })\n    );\n    this.animation = 0;\n    this.animationVector = new Vector3(0, 0, -0.05);\n    this.onTap = onTap;\n    this.position.copy(position);\n    this.origin = position.clone();\n  }\n\n  tap() {\n    const { onTap, tapping } = this;\n    if (tapping) return false;\n    let ret;\n    if (onTap) {\n      ret = onTap();\n    }\n    this.animation = 0;\n    this.tapping = true;\n    return ret;\n  }\n\n  onAnimationTick({ delta }) {\n    const { animationVector, origin, tapping } = this;\n    if (!tapping) return;\n    this.animation = Math.min(this.animation + (delta * 0.75), 1);\n    if (this.animation === 1) {\n      delete this.tapping;\n    }\n    const step = ThreeMath.smoothstep(\n      (this.animation > 0.5 ? 1 - this.animation : this.animation) * 2,\n      0,\n      1\n    );\n    this.position\n      .copy(origin)\n      .addScaledVector(animationVector, step);\n  }\n}\n\nexport default Button;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Math as ThreeMath,\n  Mesh,\n  MeshPhongMaterial,\n  Object3D,\n  PlaneGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Button from '@/items/button';\n\nclass Doors extends Object3D {\n  constructor({\n    color,\n    onCall,\n    scale,\n  }) {\n    super();\n    const plane = new PlaneGeometry(0.5, 1, scale.x * 0.5, scale.y);\n    const aux = new Color();\n    plane.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    plane.scale(scale.x, scale.y, scale.z);\n    const geometry = (new BufferGeometry()).fromGeometry(plane);\n    for (let i = 0; i < 2; i += 1) {\n      const door = new Mesh(\n        geometry,\n        new MeshPhongMaterial({\n          color,\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      door.position.set(\n        (-0.26 + (i * 0.52)) * scale.x,\n        0.5 * scale.y,\n        0.499 * scale.z\n      );\n      this.add(door);\n    }\n    this.animation = 0;\n    this.animationScale = scale.x;\n    this.state = Doors.states.CLOSED;\n    this.targetState = this.state;\n    this.callButton = new Button({\n      onTap: onCall,\n      position: new Vector3(0.7 * scale.x, (1 / 3) * scale.y, 0.5 * scale.z),\n    });\n    this.add(this.callButton);\n  }\n\n  open() {\n    this.targetState = Doors.states.OPEN;\n  }\n\n  close() {\n    this.targetState = Doors.states.CLOSED;\n  }\n\n  onAnimationTick(animation) {\n    const {\n      animationScale,\n      children,\n      state,\n      targetState,\n    } = this;\n    this.callButton.onAnimationTick(animation);\n    if (state === targetState) return;\n    const { delta } = animation;\n    const animationStep = delta * 0.75;\n    switch (targetState) {\n      case Doors.states.OPEN:\n        this.animation = Math.min(this.animation + animationStep, 1);\n        if (this.animation === 1) {\n          this.state = Doors.states.OPEN;\n        }\n        break;\n      case Doors.states.CLOSED:\n        this.animation = Math.max(this.animation - animationStep, 0);\n        if (this.animation === 0) {\n          this.state = Doors.states.CLOSED;\n        }\n        break;\n      default:\n        break;\n    }\n    const step = ThreeMath.smoothstep(this.animation, 0, 1) * 0.4;\n    for (let i = 0; i < 2; i += 1) {\n      children[i].position.x = (-0.26 + (i * 0.52) + (step * (i === 0 ? -1 : 1))) * animationScale;\n    }\n  }\n}\n\nDoors.states = {\n  OPEN: 0,\n  CLOSED: 1,\n};\n\nexport default Doors;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n} from 'three';\n\nclass Shaft extends Mesh {\n  constructor({\n    color,\n    floors,\n    scale,\n  }) {\n    const merged = new Geometry();\n    for (let i = 0; i <= floors; i += 1) {\n      if (i === 0 || i === floors) {\n        const floor = new PlaneGeometry(1, 1);\n        floor.rotateX(Math.PI * -0.5);\n        floor.translate(0, i, 0);\n        merged.merge(floor);\n        if (i === floors) break;\n      }\n      const back = new PlaneGeometry(1, 1);\n      back.translate(0, i + 0.5, -0.5);\n      merged.merge(back);\n      const side = new PlaneGeometry(1, 1);\n      side.rotateY(Math.PI * -0.5);\n      side.translate(-0.5, i + 0.5, 0);\n      merged.merge(side);\n      side.translate(1, 0, 0);\n      merged.merge(side);\n    }\n    merged.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n      })\n    );\n  }\n}\n\nexport default Shaft;\n","import {\n  Object3D,\n  Vector3,\n} from 'three';\nimport Cabin from './cabin';\nimport Doors from './doors';\nimport Shaft from './shaft';\n\nclass Elevator extends Object3D {\n  constructor({\n    floors,\n    origin,\n  }) {\n    super();\n    this.buttons = [];\n    this.floors = floors;\n    this.origin = origin;\n    this.animationStart = Math.random() * 512;\n\n    this.shaft = new Shaft({\n      color: Elevator.shaft,\n      floors,\n      scale: Elevator.scale,\n    });\n    this.add(this.shaft);\n\n    this.doors = [...Array(floors)].map((v, floor) => {\n      const doors = new Doors({\n        color: Elevator.doors,\n        onCall: () => this.onCall(floor),\n        scale: Elevator.scale,\n      });\n      doors.position.y = floor * Elevator.scale.y;\n      this.buttons.push(doors.callButton);\n      this.add(doors);\n      return doors;\n    });\n\n    this.cabin = new Cabin({\n      color: Elevator.cabin,\n      scale: Elevator.scale,\n    });\n    this.add(this.cabin);\n    this.position.z = -1.5 * Elevator.scale.z;\n  }\n\n  onAnimationTick(animation) {\n    // const { time } = animation;\n    // const { animationStart, floors, cabin: { position: cabin } } = this;\n    // const mid = (floors - 1) * Elevator.scale.y * 0.5;\n    // cabin.y = mid + (Math.sin((animationStart + time) * 0.5) * mid);\n    this.doors.forEach(door => door.onAnimationTick(animation));\n  }\n\n  onCall(floor) {\n    const { doors } = this;\n    // Debug: Door toggle testing\n    if (doors[floor].state === Doors.states.OPEN) {\n      doors[floor].close();\n      return false;\n    }\n    doors[floor].open();\n    return true;\n  }\n}\n\nElevator.scale = new Vector3(2, 3, 2);\nElevator.cabin = 0x440000;\nElevator.doors = 0x333333;\nElevator.shaft = 0x333333;\n\nexport default Elevator;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Hallway extends Mesh {\n  static generateWall({\n    aoTop = true,\n    aoBottom = true,\n    width = 1,\n    height = 1,\n    material,\n    orientation,\n  }) {\n    const wall = new PlaneGeometry(\n      width,\n      height,\n      Math.ceil(width * Hallway.scale.x),\n      Math.ceil(height * (orientation === 'horizontal' ? Hallway.scale.x : Hallway.scale.y))\n    );\n    const color = new Color();\n    wall.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.materialIndex = material;\n      const vertices = [\n        wall.vertices[face.a],\n        wall.vertices[face.b],\n        wall.vertices[face.c],\n      ];\n      face.vertexColors = [...Array(3)].map((v, j) => {\n        const c = color.clone();\n        if (\n          (aoTop && Math.abs(vertices[j].y - height * 0.5) < 0.0001)\n          || (aoBottom && Math.abs(vertices[j].y - height * -0.5) < 0.0001)\n        ) {\n          c.offsetHSL(0, 0, -0.1);\n        }\n        return c;\n      });\n    });\n    if (orientation === 'horizontal') {\n      wall.rotateX(Math.PI * -0.5);\n    }\n    return wall;\n  }\n\n  constructor({\n    hasElevator = false,\n    isEdge = false,\n    isLobby = false,\n  } = {}) {\n    const merged = new Geometry();\n    const floor = Hallway.generateWall({\n      aoBottom: !isLobby,\n      material: 0,\n      orientation: 'horizontal',\n    });\n    merged.merge(floor);\n    if (hasElevator) {\n      const wall = Hallway.generateWall({\n        width: 0.25,\n        material: 1,\n      });\n      wall.translate(-0.375, 0.5, -0.5);\n      merged.merge(wall);\n      wall.translate(0.75, 0, 0);\n      merged.merge(wall);\n    } else {\n      const wall = Hallway.generateWall({\n        material: 1,\n      });\n      wall.translate(0, 0.5, -0.5);\n      merged.merge(wall);\n    }\n    if (!isLobby) {\n      const wall = Hallway.generateWall({\n        aoTop: false,\n        height: 1 / 3,\n        material: 1,\n      });\n      wall.rotateY(Math.PI);\n      wall.translate(0, 1 / 3 / 2, 0.5);\n      merged.merge(wall);\n      if (isEdge) {\n        const wall = Hallway.generateWall({\n          aoTop: false,\n          height: 1 / 3,\n          material: 1,\n        });\n        wall.rotateY(Math.PI * 0.5 * (isEdge === 'left' ? 1 : -1));\n        wall.translate(isEdge === 'left' ? -0.5 : 0.5, 1 / 3 / 2, 0);\n        merged.merge(wall);\n      }\n    }\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      [\n        new GridMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n        new MeshPhongMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n      ]\n    );\n    this.scale.copy(Hallway.scale);\n  }\n}\n\nHallway.scale = new Vector3(4, 3, 4);\n\nexport default Hallway;\n","import {\n  BufferGeometry,\n  Geometry,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  Vector3,\n} from 'three';\n\nimport { AStarFinder, Grid } from 'pathfinding';\n\nclass Walkable extends Mesh {\n  constructor(grid) {\n    const geometry = new Geometry();\n    const floor = new PlaneGeometry(1024, 1024, 2, 2);\n    floor.rotateX(Math.PI * -0.5);\n    floor.translate(0, 0, 512);\n    const intersect = new PlaneGeometry(1024, 1024, 2, 2);\n    intersect.translate(0, 512, 0);\n    geometry.merge(floor);\n    geometry.merge(intersect);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshBasicMaterial({\n        transparent: true,\n        visible: false,\n      })\n    );\n    this.finder = new AStarFinder();\n    this.grid = new Grid(grid);\n    this.grid.setWalkableAt(0, 1, true);\n  }\n\n  getPath(from, to) {\n    const { grid, finder } = this;\n    from = this.worldToGrid(from);\n    to = this.worldToGrid(to);\n    return finder.findPath(from.x, from.z, to.x, to.z, grid.clone()).map(([x, z]) => (\n      this.localToWorld(new Vector3(x + 0.5, 0, z + 0.5))\n    ));\n  }\n\n  worldToGrid(point) {\n    const { grid, position } = this;\n    point.y = position.y;\n    this.worldToLocal(point);\n    point.x = Math.min(Math.max(point.x, 0), grid.width - 1);\n    point.z = Math.min(Math.max(point.z, 0), grid.height - 1);\n    point = {\n      x: Math.floor(point.x),\n      z: Math.floor(point.z),\n    };\n    while (!grid.isWalkableAt(point.x, point.z) && point.z < grid.height - 1) {\n      point.z += 1;\n    }\n    return point;\n  }\n}\n\nexport default Walkable;\n","import { Object3D } from 'three';\nimport Elevator from './elevator';\nimport Hallway from './hallway';\nimport Walkable from '@/engine/walkable';\n\nclass Building extends Object3D {\n  constructor({\n    elevators,\n    floors,\n  }) {\n    super();\n    this.buttons = [];\n    this.elevators = elevators.map(({\n      floors,\n      origin,\n    }) => {\n      const elevator = new Elevator({ floors, origin });\n      elevator.position.x = origin.x * 4;\n      elevator.position.y = origin.y * 3;\n      this.buttons = [\n        ...this.buttons,\n        ...elevator.buttons,\n      ];\n      this.add(elevator);\n      return elevator;\n    });\n    this.floors = floors.map((layout, floor) => {\n      const rooms = layout.split('');\n      const grid = [...Array(5)].map(() => [...Array(rooms.length * 4)].map(() => (1)));\n      rooms.forEach((type, room) => {\n        let isEdge = false;\n        if (room === 0) isEdge = 'left';\n        else if (room === rooms.length - 1) isEdge = 'right';\n        const hasElevator = (\n          this.elevators.findIndex(({\n            floors,\n            origin,\n          }) => (\n            origin.x === room\n            && origin.y <= floor\n            && origin.y + floors > floor\n          ))\n        ) !== -1;\n        let mesh;\n        switch (type) {\n          default:\n            mesh = new Hallway({\n              hasElevator,\n              isEdge,\n              isLobby: floor === 0,\n            });\n            break;\n        }\n        mesh.position.set(room * 4, floor * 3, 0);\n        this.add(mesh);\n        for (let y = 1; y < 5; y += 1) {\n          for (let x = (room * 4); x < ((room + 1) * 4); x += 1) {\n            grid[y][x] = 0;\n          }\n        }\n      });\n      const walkable = new Walkable(grid);\n      walkable.position.set(-2, floor * 3, -3);\n      this.add(walkable);\n      return walkable;\n    });\n  }\n\n  onAnimationTick(animation) {\n    const { elevators } = this;\n    elevators.forEach(elevator => elevator.onAnimationTick(animation));\n  }\n}\n\nexport default Building;\n","import Dude from '@/actors/dude';\nimport Building from '@/building';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  /* Spawn main dude */\n  const dude = new Dude({\n    arms: 0x222222,\n    eyes: 0x990000,\n    head: 0x333333,\n    legs: 0x222222,\n    torso: 0x990000,\n  });\n  dude.position.set(6, 3, 0);\n  dude.destinationMarker = new Marker();\n  scene.root.add(dude);\n  scene.root.add(dude.destinationMarker);\n  scene.camera.maxHeight = 2.9;\n  scene.camera.target = dude.position;\n\n  /* Spawn test building */\n  const building = new Building({\n    elevators: [\n      {\n        floors: 2,\n        origin: { x: 1, y: 0 },\n      },\n      {\n        floors: 2,\n        origin: { x: 4, y: 1 },\n      },\n    ],\n    floors: [\n      '.....',\n      '.....',\n      '.....',\n      '.....',\n    ],\n  });\n  scene.root.add(building);\n\n  /* Animation loop */\n  const floor = 1;\n  // const constraintToFloor = (point) => {\n  //   point.x = Math.min(Math.max(point.x, -1.5), 17.5);\n  //   point.y = floor * 3;\n  //   point.z = Math.min(Math.max(point.z, -1.5), 1.5);\n  //   return point;\n  // };\n  scene.onAnimationTick = () => {\n    const { camera } = scene;\n    const pointer = input.getPointerFrame();\n    camera.processInput(pointer);\n    if (pointer.primaryUp) {\n      const { raycaster } = pointer;\n      raycaster.setFromCamera(pointer.normalized, camera);\n      const walkable = building.floors[floor];\n      {\n        const hit = raycaster.intersectObjects(building.buttons)[0];\n        if (hit) {\n          const { point, object: button } = hit;\n          const path = walkable.getPath(dude.position.clone(), point);\n          if (path.length) {\n            dude.walkTo(path, () => {\n              dude.faceTo(point);\n              if (button.tap()) {\n                setTimeout(() => {\n                  setTimeout(() => (\n                    dude.say([\n                      'Crap!',\n                      \"It's Broken!\",\n                      'What a night...',\n                    ])\n                  ), 500);\n                  const aux = camera.position.clone();\n                  camera.getWorldPosition(aux);\n                  dude.faceTo(aux);\n                }, 1000);\n              }\n            });\n          }\n          return;\n        }\n      }\n      {\n        const hit = raycaster.intersectObject(walkable)[0];\n        if (hit) {\n          const path = walkable.getPath(dude.position.clone(), hit.point);\n          if (path.length) {\n            dude.walkTo(path);\n          }\n        }\n      }\n    }\n  };\n};\n","export { default as debug } from './debug';\nexport { default as game } from './game';\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass GridMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    size = 1,\n    subdivisions = 10,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.phong.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'varying vec3 vPosition;',\n      ].join('\\n')\n    ).replace(\n      '#include <fog_vertex>',\n      [\n        '#include <fog_vertex>',\n        'vPosition = (modelMatrix * vec4( transformed, 1.0 )).xyz;',\n      ].join('\\n')\n    );\n    const primaryGrid = 1 / size;\n    const secondaryGrid = primaryGrid * subdivisions;\n    const fragmentShader = ShaderLib.phong.fragmentShader.replace(\n      '#include <clipping_planes_pars_fragment>',\n      [\n        '#include <clipping_planes_pars_fragment>',\n        'varying vec3 vPosition;',\n        'float getGrid(float scale) {',\n        ' vec2 coord = vPosition.xz * scale;',\n        ' vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);',\n        ' return 1.0 - min(min(grid.x, grid.y), 1.0);',\n        '}',\n      ].join('\\n')\n    ).replace(\n      'vec4 diffuseColor = vec4( diffuse, opacity );',\n      [\n        `float primaryGrid = getGrid(${primaryGrid}${primaryGrid % 1 === 0 ? '.0' : ''});`,\n        `float secondaryGrid = getGrid(${secondaryGrid}${secondaryGrid % 1 === 0 ? '.0' : ''});`,\n        'vec3 grid = mix(mix(diffuse, diffuse * 0.95, secondaryGrid), diffuse * 1.15, primaryGrid);',\n        'vec4 diffuseColor = vec4(grid, opacity);',\n      ].join('\\n')\n    );\n    super({\n      name: `grid-material-${size}-${subdivisions}`,\n      uniforms: UniformsUtils.clone(ShaderLib.phong.uniforms),\n      fragmentShader,\n      vertexShader,\n      extensions: { derivatives: true },\n      fog: true,\n      lights: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default GridMaterial;\n","import Input from '@/engine/input';\nimport Music from '@/engine/music';\nimport Scene from '@/engine/scene';\nimport * as Scenes from '@/scenes';\n\nconst mount = document.getElementById('mount');\nconst input = new Input({ mount });\nconst music = new Music({ toggle: document.getElementById('sound') });\nconst scene = new Scene({ mount });\n\nlet route = window.location.hash.split('/').slice(1)[0];\nif (!Scenes[route]) {\n  window.location.hash = '/game';\n  route = 'game';\n}\nsetImmediate(() => window.addEventListener('hashchange', () => window.location.reload(), false));\n\nfunction onLoad() {\n  document.body.className = 'loaded';\n  Scenes[route]({ input, scene });\n  input.touches.once('end', () => {\n    document.getElementById('splash').style.display = 'none';\n    input.isEnabled = true;\n    music.play();\n  });\n}\n\nfunction waitForFonts(fonts) {\n  let loaded = 0;\n  fonts.forEach(({ font, test }) => {\n    const fontTester = document.createElement('div');\n    fontTester.innerText = test;\n    fontTester.style.position = 'absolute';\n    fontTester.style.fontFamily = 'sans-serif';\n    fontTester.style.top = '-999999px';\n    document.body.appendChild(fontTester);\n    const { width: initialWidth } = fontTester.getBoundingClientRect();\n    fontTester.style.fontFamily = font;\n    const check = () => {\n      const { width } = fontTester.getBoundingClientRect();\n      if (width > initialWidth) {\n        document.body.removeChild(fontTester);\n        loaded += 1;\n        if (loaded === fonts.length) {\n          onLoad();\n        }\n      } else {\n        setTimeout(check, 10);\n      }\n    };\n    check();\n  });\n}\n\nwaitForFonts([\n  { font: \"'Print Char 21'\", test: 'QW@HhsXJ' },\n]);\n","import {\n  CanvasTexture,\n  SpriteMaterial as ThreeSprite,\n} from 'three';\n\nclass SpriteMaterial extends ThreeSprite {\n  constructor({ width, height, ...rest }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    super({\n      map: texture,\n      ...rest,\n    });\n    this.renderer = renderer;\n    this.ctx = renderer.getContext('2d');\n  }\n}\n\nexport default SpriteMaterial;\n"],"sourceRoot":""}