{"version":3,"sources":["webpack:///./src/engine/camera.js","webpack:///./src/engine/grid.js","webpack:///./src/materials/rain.js","webpack:///./src/engine/rain.js","webpack:///./src/engine/moon.js","webpack:///./src/engine/starfield.js","webpack:///./src/engine/vignette.js","webpack:///./src/engine/scene.js","webpack:///./src/engine/music.js","webpack:///./src/engine/input.js","webpack:///./src/items/bubble.js","webpack:///./src/engine/actor.js","webpack:///./src/actors/dude.js","webpack:///./src/items/marker.js","webpack:///./src/scenes/debug.js","webpack:///./src/building/elevator/cabin.js","webpack:///./src/items/button.js","webpack:///./src/building/elevator/doors.js","webpack:///./src/building/elevator/shaft.js","webpack:///./src/building/elevator/index.js","webpack:///./src/building/wall.js","webpack:///./src/building/hallway.js","webpack:///./src/engine/walkable.js","webpack:///./src/building/index.js","webpack:///./src/scenes/game.js","webpack:///./src/scenes/index.js","webpack:///./src/materials/grid.js","webpack:///./src/index.js","webpack:///./src/materials/sprite.js"],"names":["Camera","_this","_classCallCheck","this","_getPrototypeOf","call","distance","maxHeight","Infinity","offset","tilt","Math","PI","pitch","speed","step","Vector3","root","Object3D","add","_assertThisInitialized","updateOrbit","PerspectiveCamera","delta","_ref","position","target","distanceTo","copy","sub","normalize","multiplyScalar","movement","_ref2","secondary","wheel","hasUpdated","x","y","min","max","set","cos","sin","lookAt","Grid","arguments","length","undefined","_ref$background","background","Color","_ref$size","size","_ref$subdivisions","subdivisions","grid_classCallCheck","geometry","CircleBufferGeometry","translate","rotateX","grid_possibleConstructorReturn","grid_getPrototypeOf","GridMaterial","material","color","Mesh","RainMaterial","_ref$color","rest","_objectWithoutProperties","rain_classCallCheck","vertexShader","ShaderLib","basic","replace","join","rain_possibleConstructorReturn","rain_getPrototypeOf","_objectSpread","name","uniforms","UniformsUtils","clone","fragmentShader","fog","diffuse","value","ShaderMaterial","Rain","engine_rain_classCallCheck","drop","BufferGeometry","fromGeometry","BoxGeometry","attributes","array","offsets","Float32Array","numDrops","InstancedBufferGeometry","addAttribute","BufferAttribute","InstancedBufferAttribute","setDynamic","engine_rain_possibleConstructorReturn","engine_rain_getPrototypeOf","frustumCulled","i","resetDrop","height","testHeight","z","needsUpdate","random","radius","func","Moon","moon_classCallCheck","moon_possibleConstructorReturn","moon_getPrototypeOf","SphereBufferGeometry","MeshBasicMaterial","Starfield","starfield_classCallCheck","count","aux","floor","o","starfield_possibleConstructorReturn","starfield_getPrototypeOf","PointsMaterial","sizeAttenuation","moon","Points","Vignette","vignette_classCallCheck","vignette_possibleConstructorReturn","vignette_getPrototypeOf","camera","OrthographicCamera","sprite","SpriteMaterial","width","map","wrapS","ClampToEdgeWrapping","wrapT","magFilter","NearestFilter","minFilter","LinearFilter","Sprite","Scene","renderer","ctx","grd","createRadialGradient","addColorStop","fillStyle","beginPath","rect","fill","clearDepth","render","_ref$mount","mount","document","body","scene_classCallCheck","clock","Clock","WebGLRenderer","alpha","antialias","autoClear","setAnimationLoop","onAnimate","bind","setPixelRatio","window","devicePixelRatio","sky","setClearColor","appendChild","domElement","Root","FogExp2","AmbientLight","light","DirectionalLight","secondaryLight","grid","rain","starfield","vignette","addEventListener","onResize","ShaderChunk","fog_pars_vertex","fog_vertex","fog_pars_fragment","fog_fragment","stats","begin","animation","getDelta","time","oldTime","onAnimationTick","children","forEach","child","clear","end","_mount$getBoundingCli","getBoundingClientRect","setSize","aspect","updateProjectionMatrix","fixThreeJSFog","QuaternionKeyframeTrack","DefaultInterpolation","InterpolateSmooth","VectorKeyframeTrack","Music","toggle","script","createElement","async","defer","src","check","SC","api","initialize","client_id","tracks","shuffle","track","wantsToPlay","play","setTimeout","index","temp","_this2","player","kill","id","stream","concat","then","on","next","setVolume","catch","button","isPlaying","pause","className","Input","pointer","current","Vector2","normalized","last","raycaster","Raycaster","touches","Touches","preventSimulated","onPointerDown","onPointerMove","onPointerUp","addWheelListener","onPointerWheel","e","preventDefault","frame","primaryDown","primaryUp","secondaryDown","secondaryUp","isEnabled","primary","_ref4","_slicedToArray","_ref3","top","left","_touches$i","clientX","clientY","_ref5","deltaY","_ref6","Bubble","_possibleConstructorReturn","depthTest","scale","visible","lines","delay","_this$material","clearRect","textAlign","textBaseline","shadowColor","shadowBlur","font","fillText","shift","clearTimeout","timer","display","Actor","collisionGeometry","actor_classCallCheck","actor_getPrototypeOf","hip","Bone","torso","head","leftArm","rightArm","leftLeg","rightLeg","Skeleton","mixer","AnimationMixer","actor_assertThisInitialized","actions","Object","keys","animations","reduce","action","_defineProperty","clipAction","idle","timeScale","rotationAux","movementAux","collisionMesh","transparent","SkinnedMesh","limbs","merged","Geometry","limb","faces","face","materialIndex","Bones","merge","vertices","a","bone","b","c","vertex","skinIndices","push","Vector4","skinWeights","computeVertexNormals","computeBoundingSphere","walkingSpeed","walk","destinationMarker","rotationSpeed","route","targetRotation","update","rotationStep","rotationDelta","rotation","abs","waypoint","path","faceTo","setAnimation","onDestinationCallback","fadeOut","reset","fadeIn","callback","point","angle","bubble","boundingSphere","eulerToQuat","Quaternion","setFromEuler","Euler","toArray","AnimationClip","_toConsumableArray","Dude","palette","dude_classCallCheck","bones","dude_assertThisInitialized","dude_getPrototypeOf","CylinderBufferGeometry","skeleton","CylinderGeometry","SphereGeometry","hat","leftEye","eyes","rightEye","arms","legs","geometryFromLimbs","center","MeshPhongMaterial","skinning","vertexColors","VertexColors","Marker","marker_classCallCheck","marker_possibleConstructorReturn","marker_getPrototypeOf","inc","s","opacity","debug","input","scene","pack","dudes","debug_toConsumableArray","Array","v","dude","getPointerFrame","processInput","setFromCamera","hit","intersectObject","walkTo","mainDudeX","mainDudeZ","mainDude","Cabin","cabin_classCallCheck","setHSL","splice","cabin_possibleConstructorReturn","cabin_getPrototypeOf","side","DoubleSide","Button","onTap","button_classCallCheck","BoxBufferGeometry","button_possibleConstructorReturn","button_getPrototypeOf","animationVector","origin","ret","tapping","ThreeMath","smoothstep","addScaledVector","Doors","onCall","doors_classCallCheck","doors_possibleConstructorReturn","doors_getPrototypeOf","plane","PlaneGeometry","door","animationScale","state","states","CLOSED","targetState","callButton","OPEN","animationStep","Shaft","floors","shaft_classCallCheck","back","rotateY","shaft_possibleConstructorReturn","shaft_getPrototypeOf","Elevator","elevator_classCallCheck","elevator_possibleConstructorReturn","elevator_getPrototypeOf","buttons","animationStart","shaft","doors","elevator_toConsumableArray","cabin","close","open","Wall","_ref2$aoTop","aoTop","_ref2$aoBottom","aoBottom","wall_classCallCheck","getGeometry","orientation","wall_possibleConstructorReturn","wall_getPrototypeOf","_ref$aoTop","_ref$aoBottom","_ref$width","_ref$height","wall","ceil","wall_toConsumableArray","j","offsetHSL","Hallway","hasCeiling","hasElevator","isEdge","isLobby","hallway_classCallCheck","hallway_possibleConstructorReturn","hallway_getPrototypeOf","Walkable","walkable_classCallCheck","intersect","walkable_possibleConstructorReturn","walkable_getPrototypeOf","finder","AStarFinder","allowDiagonal","dontCrossCorners","setWalkableAt","from","to","worldToGrid","findPath","walkable_slicedToArray","localToWorld","worldToLocal","isWalkableAt","Building","elevators","building_classCallCheck","building_possibleConstructorReturn","building_getPrototypeOf","elevator","building_toConsumableArray","layout","split","heightmap","rooms","type","room","mesh","indexOf","findIndex","walkable","game","building","reverse","setHeightTest","getHeight","game_toConsumableArray","spawn","addToFloorGrid","game_objectSpread","intersectObjects","object","parent","onDestination","say","getPath","slice","tap","getWorldPosition","__webpack_require__","d","__webpack_exports__","phong","primaryGrid","secondaryGrid","extensions","derivatives","lights","r","setImmediate","fonts","loaded","_engine_input__WEBPACK_IMPORTED_MODULE_0__","_engine_music__WEBPACK_IMPORTED_MODULE_1__","_engine_scene__WEBPACK_IMPORTED_MODULE_2__","_scenes__WEBPACK_IMPORTED_MODULE_3__","getElementById","music","location","hash","Scenes","reload","test","fontTester","innerText","style","fontFamily","initialWidth","removeChild","once","texture","CanvasTexture","getContext","ThreeSprite"],"mappings":"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","file":"code/main.72768e48ac53a27fe5a9.js","sourcesContent":["import {\n  Object3D,\n  PerspectiveCamera,\n  Vector3,\n} from 'three';\n\nclass Camera extends PerspectiveCamera {\n  constructor() {\n    super(60, 1, 0.1, 2048);\n    this.distance = 5.5;\n    this.maxHeight = Infinity;\n    this.offset = 1.2;\n    this.tilt = Math.PI * -0.5;\n    this.pitch = Math.PI * 0.05;\n    this.speed = 1.25;\n    this.step = new Vector3();\n    this.root = new Object3D();\n    this.root.add(this);\n    this.updateOrbit();\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      root: { position },\n      speed,\n      step,\n      target,\n    } = this;\n    if (!target || position.distanceTo(target) <= 0.1) return;\n    step\n      .copy(target)\n      .sub(position)\n      .normalize()\n      .multiplyScalar(delta * speed);\n    position.add(step);\n  }\n\n  processInput({\n    movement,\n    secondary,\n    wheel,\n  }) {\n    let hasUpdated = false;\n    if (secondary) {\n      const sensitivity = 0.003;\n      this.tilt -= movement.x * sensitivity;\n      this.pitch += movement.y * sensitivity;\n      this.pitch = Math.min(Math.max(this.pitch, Math.PI * -0.45), Math.PI * 0.45);\n      hasUpdated = true;\n    }\n    if (wheel) {\n      const sensitivity = 0.006;\n      this.distance = Math.min(Math.max(this.distance + (wheel * sensitivity), 1), 16);\n      hasUpdated = true;\n    }\n    if (hasUpdated) this.updateOrbit();\n    return hasUpdated;\n  }\n\n  updateOrbit() {\n    const {\n      distance,\n      maxHeight,\n      offset,\n      pitch,\n      position,\n      root,\n      tilt,\n    } = this;\n    position.set(\n      Math.cos(tilt) * Math.cos(pitch),\n      Math.sin(pitch),\n      Math.sin(-tilt) * Math.cos(pitch)\n    )\n      .normalize()\n      .multiplyScalar(distance);\n    position.y = Math.min(Math.max(position.y, 0.1 - offset), maxHeight - offset);\n    this.lookAt(root.position);\n    position.y += offset;\n  }\n}\n\nexport default Camera;\n","import {\n  Color,\n  Mesh,\n  CircleBufferGeometry,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\n\nclass Grid extends Mesh {\n  constructor({\n    background = new Color(0xFFFFFF),\n    size = 1,\n    subdivisions = 10,\n  } = {}) {\n    const geometry = new CircleBufferGeometry(128, 8);\n    geometry.translate(0, 0, -0.01);\n    geometry.rotateX(Math.PI * -0.5);\n    super(\n      geometry,\n      new GridMaterial({\n        size,\n        subdivisions,\n      })\n    );\n    this.material.color.set(background);\n  }\n}\n\nexport default Grid;\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass RainMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.basic.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'attribute vec3 offset;',\n      ].join('\\n')\n    ).replace(\n      '#include <begin_vertex>',\n      [\n        'vec3 transformed = vec3(position + offset);',\n      ].join('\\n')\n    );\n    super({\n      name: 'rain-material',\n      uniforms: UniformsUtils.clone(ShaderLib.basic.uniforms),\n      fragmentShader: ShaderLib.basic.fragmentShader,\n      vertexShader,\n      fog: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default RainMaterial;\n","import {\n  BufferAttribute,\n  BoxGeometry,\n  BufferGeometry,\n  InstancedBufferGeometry,\n  InstancedBufferAttribute,\n  Mesh,\n  Vector3,\n} from 'three';\nimport RainMaterial from '@/materials/rain';\n\nclass Rain extends Mesh {\n  constructor() {\n    const drop = (new BufferGeometry()).fromGeometry(\n      (new BoxGeometry(0.01, 0.5, 0.01)).translate(0, 0.25, 0)\n    ).attributes.position.array;\n    const offsets = new Float32Array(Rain.numDrops * 3);\n    const geometry = new InstancedBufferGeometry();\n    geometry.addAttribute('position', new BufferAttribute(drop, 3));\n    geometry.addAttribute('offset', (new InstancedBufferAttribute(offsets, 3).setDynamic(true)));\n    super(\n      geometry,\n      new RainMaterial({\n        color: 0xAAAADD,\n      })\n    );\n    this.frustumCulled = false;\n    this.drop = new Vector3();\n    this.offsets = offsets;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      this.resetDrop(i);\n    }\n  }\n\n  onAnimationTick({ delta }) {\n    const { geometry, offsets, position } = this;\n    const step = delta * 16;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      offsets[i + 1] -= step;\n      let height = 0;\n      if (this.testHeight) {\n        height = this.testHeight(offsets[i] + position.x, offsets[i + 2] + position.z);\n      }\n      if (offsets[i + 1] <= height) {\n        this.resetDrop(i);\n      }\n    }\n    geometry.attributes.offset.needsUpdate = true;\n  }\n\n  resetDrop(i) {\n    const { drop, offsets, position } = this;\n    drop.set(\n      (Math.random() * (Rain.radius * 2 + 1)) - Rain.radius,\n      0,\n      (Math.random() * (Rain.radius * 2 + 1)) - Rain.radius\n    );\n    let height = Math.random() * Rain.radius * 0.5;\n    if (this.testHeight) {\n      height = Math.max(height, this.testHeight(drop.x + position.x, drop.z + position.z));\n    }\n    offsets[i] = drop.x;\n    offsets[i + 1] = height;\n    offsets[i + 2] = drop.z;\n  }\n\n  setHeightTest(func) {\n    const { geometry } = this;\n    this.testHeight = func;\n    for (let i = 0; i < Rain.numDrops * 3; i += 3) {\n      this.resetDrop(i);\n    }\n    geometry.attributes.offset.needsUpdate = true;\n  }\n}\n\nRain.numDrops = 10000;\nRain.radius = 50;\n\nexport default Rain;\n","import {\n  Mesh,\n  MeshBasicMaterial,\n  SphereBufferGeometry,\n} from 'three';\n\nclass Moon extends Mesh {\n  constructor() {\n    super(\n      new SphereBufferGeometry(100, 32, 32),\n      new MeshBasicMaterial({\n        color: 0xAAAAAA,\n        fog: false,\n      })\n    );\n  }\n}\n\nexport default Moon;\n","import {\n  BufferAttribute,\n  BufferGeometry,\n  Points,\n  PointsMaterial,\n  Vector3,\n} from 'three';\nimport Moon from './moon';\n\nclass Starfield extends Points {\n  constructor() {\n    const count = 10000;\n    const radius = 1024;\n    const geometry = new BufferGeometry();\n    const position = new Float32Array(count * 3);\n    const size = new Float32Array(count);\n    const aux = new Vector3();\n    for (let i = 0; i < count; i += 1) {\n      aux.set(\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius,\n        Math.floor(Math.random() * (radius + 1)),\n        Math.floor(Math.random() * ((radius * 2) + 1)) - radius\n      ).normalize().multiplyScalar(radius);\n      const o = i * 3;\n      position[o] = aux.x;\n      position[o + 1] = aux.y;\n      position[o + 2] = aux.z;\n      size[i] = 10 + Math.floor(Math.random() * 100);\n    }\n    geometry.addAttribute('position', new BufferAttribute(position, 3));\n    geometry.addAttribute('size', new BufferAttribute(size, 1));\n    super(\n      geometry,\n      new PointsMaterial({\n        color: 0x999999,\n        fog: false,\n        sizeAttenuation: false,\n      })\n    );\n    this.moon = new Moon();\n    this.moon.position.set(radius, radius * 0.5, radius);\n    this.add(this.moon);\n  }\n}\n\nexport default Starfield;\n","import {\n  ClampToEdgeWrapping,\n  NearestFilter,\n  LinearFilter,\n  Sprite,\n  Scene,\n  OrthographicCamera,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\n\nclass Vignette extends Scene {\n  constructor() {\n    super();\n    this.camera = new OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n    this.sprite = new SpriteMaterial({\n      width: 0,\n      height: 0,\n    });\n    this.sprite.map.wrapS = ClampToEdgeWrapping;\n    this.sprite.map.wrapT = ClampToEdgeWrapping;\n    this.sprite.map.magFilter = NearestFilter;\n    this.sprite.map.minFilter = LinearFilter;\n    this.add(new Sprite(this.sprite));\n  }\n\n  onResize({ width, height }) {\n    const { sprite } = this;\n    const { renderer, ctx } = sprite;\n    const size = Math.max(width, height);\n    renderer.width = size;\n    renderer.height = size;\n    const grd = ctx.createRadialGradient(\n      size * 0.5, size * 0.5, size * 0.6,\n      size * 0.5, size * 0.5, size\n    );\n    grd.addColorStop(0, 'rgba(0, 0, 0, 0)');\n    grd.addColorStop(1, 'rgba(0, 0, 0, 1)');\n    ctx.fillStyle = grd;\n    ctx.beginPath();\n    ctx.rect(0, 0, size, size);\n    ctx.fill();\n    sprite.map.needsUpdate = true;\n  }\n\n  render(renderer) {\n    renderer.clearDepth();\n    renderer.render(this, this.camera);\n  }\n}\n\nexport default Vignette;\n","import Stats from 'stats.js';\nimport {\n  AmbientLight,\n  Clock,\n  Color,\n  DirectionalLight,\n  FogExp2,\n  InterpolateSmooth,\n  QuaternionKeyframeTrack,\n  Scene as Root,\n  ShaderChunk,\n  VectorKeyframeTrack,\n  WebGLRenderer,\n} from 'three';\nimport Camera from './camera';\nimport Grid from './grid';\nimport Rain from './rain';\nimport Starfield from './starfield';\nimport Vignette from './vignette';\n\nclass Scene {\n  constructor({\n    mount = document.body,\n  } = {}) {\n    this.camera = new Camera();\n    this.clock = new Clock();\n    this.mount = mount;\n    this.renderer = new WebGLRenderer({\n      alpha: false,\n      antialias: true,\n    });\n    this.renderer.autoClear = false;\n    this.renderer.setAnimationLoop(this.onAnimate.bind(this));\n    this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n    const sky = new Color(0x334455);\n    this.renderer.setClearColor(sky);\n    mount.appendChild(this.renderer.domElement);\n    this.root = new Root();\n    this.root.fog = new FogExp2(sky, 0.03);\n    this.root.add(new AmbientLight(0x333333));\n    const light = new DirectionalLight(0xffffff, 0.6);\n    light.position.set(1, 0.5, 1);\n    this.root.add(light);\n    const secondaryLight = new DirectionalLight(0xffffff, 0.4);\n    secondaryLight.position.set(-1, -0.5, 1);\n    this.root.add(secondaryLight);\n    this.root.add(this.camera.root);\n    this.grid = new Grid({ background: new Color(0x333344) });\n    this.root.add(this.grid);\n    this.rain = new Rain();\n    this.root.add(this.rain);\n    this.starfield = new Starfield();\n    this.root.add(this.starfield);\n    this.vignette = new Vignette();\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n    if (!__PRODUCTION__) {\n      this.stats = new Stats();\n      this.stats.dom.style.position = 'absolute';\n      this.stats.dom.style.top = 'auto';\n      this.stats.dom.style.left = 'auto';\n      this.stats.dom.style.bottom = '0';\n      this.stats.dom.style.right = '0';\n      mount.style.position = 'relative';\n      mount.appendChild(this.stats.dom);\n    }\n  }\n\n  onAnimate() {\n    const {\n      clock,\n      camera,\n      grid,\n      renderer,\n      root,\n      starfield,\n      stats,\n      vignette,\n    } = this;\n    if (stats) stats.begin();\n    const animation = { delta: Math.min(clock.getDelta(), 1), time: clock.oldTime / 1000 };\n    if (this.onAnimationTick) {\n      this.onAnimationTick(animation);\n    }\n    root.children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n    if (camera.onAnimationTick) {\n      camera.onAnimationTick(animation);\n    }\n    grid.position.set(camera.root.position.x, 0, camera.root.position.z);\n    starfield.position.copy(grid.position);\n    renderer.clear();\n    renderer.render(root, camera);\n    vignette.render(renderer);\n    if (stats) stats.end();\n  }\n\n  onResize() {\n    const {\n      camera,\n      mount,\n      renderer,\n      vignette,\n    } = this;\n    const { width, height } = mount.getBoundingClientRect();\n    renderer.setSize(width, height);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n    vignette.onResize({ width, height });\n  }\n\n  static fixThreeJSFog() {\n    ShaderChunk.fog_pars_vertex = ShaderChunk.fog_pars_vertex.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_vertex = ShaderChunk.fog_vertex.replace(\n      'fogDepth = -mvPosition.z;',\n      'fogDepth = mvPosition;'\n    );\n    ShaderChunk.fog_pars_fragment = ShaderChunk.fog_pars_fragment.replace(\n      'varying float fogDepth;',\n      'varying vec4 fogDepth;'\n    );\n    ShaderChunk.fog_fragment = ShaderChunk.fog_fragment.replace(\n      'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );',\n      [\n        'float fogDist = length(fogDepth);',\n        'float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDist * fogDist * LOG2 ) );',\n      ].join('\\n')\n    ).replace(\n      'float fogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n      'float fogFactor = smoothstep( fogNear, fogFar, length(fogDepth) );'\n    );\n  }\n}\n\nScene.fixThreeJSFog();\nQuaternionKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\nVectorKeyframeTrack.DefaultInterpolation = InterpolateSmooth;\n\nexport default Scene;\n","class Music {\n  static shuffle(tracks) {\n    for (let index = tracks.length - 1; index >= 0; index -= 1) {\n      const random = Math.floor(Math.random() * tracks.length);\n      const temp = tracks[index];\n      tracks[index] = tracks[random];\n      tracks[random] = temp;\n    }\n    return tracks;\n  }\n\n  constructor({ toggle }) {\n    const loaded = () => {\n      this.api = window.SC;\n      this.api.initialize({\n        client_id: 'eb5fcff9e107aab508431b4c3c416415',\n      });\n      // this.api.resolve('https://soundcloud.com/travis-stanley-3/sets/jazz-noir-dark-jazz').then(({ tracks }) => {\n      //   console.log(JSON.stringify(tracks.map(({ id }) => (id))));\n      // });\n      // eslint-disable-next-line\n      this.tracks = Music.shuffle([14281750,135099881,14449372,201545618,130450594,43516158,20969172,29561041,6582510,89379153,96594845,199889475,137188503,74658085,90256034,183847047,3916883]);\n      this.track = 0;\n      toggle.addEventListener('click', () => this.toggle(toggle), false);\n      if (this.wantsToPlay) {\n        delete this.wantsToPlay;\n        this.play();\n      }\n    };\n    const check = () => {\n      if (!window.SC) {\n        setTimeout(check, 10);\n        return;\n      }\n      loaded();\n    };\n    const script = document.createElement('script');\n    script.async = true;\n    script.defer = true;\n    script.src = 'https://connect.soundcloud.com/sdk/sdk-3.3.1.js';\n    document.body.appendChild(script);\n    check();\n  }\n\n  next() {\n    this.track = (this.track + 1) % this.tracks.length;\n    this.play();\n  }\n\n  play() {\n    const {\n      api,\n      player,\n      track,\n      tracks,\n    } = this;\n    if (!api) {\n      this.wantsToPlay = true;\n      return;\n    }\n    if (player) {\n      player.kill();\n      delete this.player;\n    }\n    const id = tracks[track];\n    if (!__PRODUCTION__) console.log(`playing: ${id}`);\n    api.stream(`/tracks/${id}`).then((player) => {\n      this.player = player;\n      player.on('audio_error', () => this.next());\n      player.on('finish', () => this.next());\n      player.setVolume(0.8);\n      player.play();\n    }).catch(() => {\n      this.next();\n    });\n  }\n\n  toggle(button) {\n    const { player } = this;\n    if (!player) return;\n    if (player.isPlaying()) {\n      player.pause();\n      button.className = 'muted';\n    } else {\n      button.className = '';\n      player.play();\n    }\n  }\n}\n\nexport default Music;\n","import { Raycaster, Vector2 } from 'three';\nimport Touches from 'touches';\nimport { addWheelListener } from 'wheel';\n\nclass Input {\n  constructor({\n    mount = document.body,\n  }) {\n    this.mount = mount;\n    this.pointer = {\n      current: new Vector2(0, 0),\n      movement: { x: 0, y: 0 },\n      normalized: new Vector2(0, 0),\n      last: new Vector2(0, 0),\n      raycaster: new Raycaster(),\n      wheel: 0,\n    };\n    this.touches = Touches(window, {\n      preventSimulated: false,\n      target: mount,\n    })\n      .on('start', this.onPointerDown.bind(this))\n      .on('move', this.onPointerMove.bind(this))\n      .on('end', this.onPointerUp.bind(this));\n    addWheelListener(window, this.onPointerWheel.bind(this));\n    window.addEventListener('contextmenu', e => e.preventDefault(), false);\n    window.addEventListener('resize', this.onResize.bind(this), false);\n    this.onResize();\n  }\n\n  getPointerFrame() {\n    const { pointer } = this;\n    const frame = { ...pointer };\n    pointer.primaryDown = false;\n    pointer.primaryUp = false;\n    pointer.secondaryDown = false;\n    pointer.secondaryUp = false;\n    pointer.movement = { x: 0, y: 0 };\n    pointer.wheel = 0;\n    return frame;\n  }\n\n  onPointerDown(e) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    const { button, touches } = e;\n    if (touches) {\n      if (touches.length > 1) {\n        e.preventDefault();\n      }\n      if (!pointer.secondary) {\n        if (touches.length === 1) {\n          pointer.primary = true;\n          pointer.primaryDown = true;\n        } else {\n          pointer.secondary = true;\n          pointer.secondaryDown = true;\n          pointer.primary = false;\n        }\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = true;\n        pointer.primaryDown = true;\n        break;\n      case 2:\n        pointer.secondary = true;\n        pointer.secondaryDown = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerMove({ touches }, [x, y]) {\n    const { isEnabled, pointer, rect } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      const { top, left } = rect;\n      x = 0;\n      y = 0;\n      for (let i = 0; i < touches.length; i += 1) {\n        const { clientX, clientY } = touches[i];\n        x += (clientX - left);\n        y += (clientY - top);\n      }\n      x /= touches.length;\n      y /= touches.length;\n    }\n    const { width, height } = rect;\n    pointer.current.x = x;\n    pointer.current.y = y;\n    pointer.normalized.x = ((x / width) * 2) - 1;\n    pointer.normalized.y = 1 - ((y / height) * 2);\n    pointer.movement = {\n      x: pointer.current.x - pointer.last.x,\n      y: pointer.current.y - pointer.last.y,\n    };\n    pointer.last.copy(pointer.current);\n  }\n\n  onPointerUp({ button, touches }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    if (touches) {\n      if (pointer.primary) {\n        pointer.primary = false;\n        pointer.primaryUp = true;\n      }\n      if (pointer.secondary) {\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n      }\n      return;\n    }\n    switch (button) {\n      case 0:\n        pointer.primary = false;\n        pointer.primaryUp = true;\n        break;\n      case 2:\n        pointer.secondary = false;\n        pointer.secondaryUp = true;\n        break;\n      default:\n    }\n  }\n\n  onPointerWheel({ deltaY }) {\n    const { isEnabled, pointer } = this;\n    if (!isEnabled) return;\n    pointer.wheel = deltaY;\n  }\n\n  onResize() {\n    const { mount } = this;\n    this.rect = mount.getBoundingClientRect();\n  }\n}\n\n\nexport default Input;\n","import {\n  Sprite,\n} from 'three';\nimport SpriteMaterial from '@/materials/sprite';\n\nclass Bubble extends Sprite {\n  constructor() {\n    super(new SpriteMaterial({\n      width: 512,\n      height: 64,\n      depthTest: false,\n    }));\n    this.scale.set(2, 0.25, 1);\n    this.visible = false;\n  }\n\n  display(lines, delay = 1500) {\n    const { renderer, ctx } = this.material;\n    const { width, height } = renderer;\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = '#fff';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n    ctx.shadowBlur = 10;\n    ctx.font = \"24px 'Print Char 21',monospace\";\n    ctx.fillText(lines.shift(), width * 0.5, height * 0.5);\n    this.material.map.needsUpdate = true;\n    this.visible = true;\n    clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      if (lines.length) {\n        this.display(lines, delay);\n        return;\n      }\n      this.visible = false;\n    }, delay);\n  }\n}\n\nexport default Bubble;\n","import {\n  AnimationClip,\n  AnimationMixer,\n  Bone,\n  BufferGeometry,\n  Euler,\n  Geometry,\n  Mesh,\n  MeshBasicMaterial,\n  QuaternionKeyframeTrack,\n  Quaternion,\n  SkinnedMesh,\n  Skeleton,\n  Vector2,\n  Vector3,\n  Vector4,\n} from 'three';\nimport Bubble from '@/items/bubble';\n\nclass Actor extends SkinnedMesh {\n  static geometryFromLimbs(limbs) {\n    const merged = new Geometry();\n    Object.keys(limbs).forEach((limb) => {\n      limbs[limb].faces.forEach((face) => {\n        face.materialIndex = Actor.Bones[limb];\n      });\n      merged.merge(limbs[limb]);\n    });\n    merged.faces.forEach((face) => {\n      merged.vertices[face.a].bone = face.materialIndex;\n      merged.vertices[face.b].bone = face.materialIndex;\n      merged.vertices[face.c].bone = face.materialIndex;\n      face.materialIndex = 0;\n    });\n    merged.vertices.forEach((vertex) => {\n      merged.skinIndices.push(new Vector4(vertex.bone, 0, 0, 0));\n      merged.skinWeights.push(new Vector4(1, 0, 0, 0));\n    });\n    const geometry = (new BufferGeometry()).fromGeometry(merged);\n    geometry.computeVertexNormals();\n    geometry.computeBoundingSphere();\n    return geometry;\n  }\n\n  constructor({\n    collisionGeometry,\n    geometry,\n    material,\n  }) {\n    super(\n      geometry,\n      material\n    );\n    const hip = new Bone();\n    this.add(hip);\n    const torso = new Bone();\n    hip.add(torso);\n    const head = new Bone();\n    torso.add(head);\n    const leftArm = new Bone();\n    torso.add(leftArm);\n    const rightArm = new Bone();\n    torso.add(rightArm);\n    const leftLeg = new Bone();\n    hip.add(leftLeg);\n    const rightLeg = new Bone();\n    hip.add(rightLeg);\n    this.bind(new Skeleton([\n      hip,\n      torso,\n      head,\n      leftArm,\n      rightArm,\n      leftLeg,\n      rightLeg,\n    ]));\n    this.mixer = new AnimationMixer(this);\n    this.actions = Object.keys(Actor.animations).reduce((actions, action) => ({\n      ...actions,\n      [action]: this.mixer.clipAction(Actor.animations[action]),\n    }), {});\n    this.animation = 'idle';\n    this.actions.idle.timeScale = 0.5;\n    this.actions.idle.play();\n    this.rotationAux = new Vector2();\n    this.movementAux = new Vector3();\n    this.collisionMesh = new Mesh(\n      collisionGeometry,\n      new MeshBasicMaterial({\n        transparent: true,\n        visible: false,\n      })\n    );\n    this.add(this.collisionMesh);\n  }\n\n  onAnimationTick({ delta }) {\n    const {\n      actions: { walk: { timeScale: walkingSpeed } },\n      destinationMarker,\n      mixer,\n      movementAux,\n      position,\n      rotationSpeed,\n      route,\n      targetRotation,\n    } = this;\n    mixer.update(delta);\n    if (targetRotation !== undefined) {\n      const rotationStep = delta * rotationSpeed;\n      const rotationDelta = targetRotation - this.rotation.y;\n      this.rotation.y += Math.min(\n        Math.max(\n          rotationDelta,\n          -rotationStep\n        ),\n        rotationStep\n      );\n      if (Math.abs(rotationDelta) <= rotationStep) {\n        delete this.targetRotation;\n      }\n    }\n    if (!route) return;\n    const waypoint = route.path[route.current];\n    const distance = position.distanceTo(waypoint);\n    const step = delta * 1.5 * walkingSpeed;\n    position.add(\n      movementAux\n        .copy(waypoint)\n        .sub(position)\n        .normalize()\n        .multiplyScalar(Math.min(distance, step))\n    );\n    if (distance > step) {\n      return;\n    }\n    if (route.current < route.path.length - 1) {\n      route.current += 1;\n      this.faceTo(route.path[route.current]);\n      return;\n    }\n    this.setAnimation('idle');\n    delete this.route;\n    if (destinationMarker) {\n      destinationMarker.visible = false;\n    }\n    if (this.onDestinationCallback) {\n      this.onDestinationCallback();\n      delete this.onDestinationCallback;\n    }\n  }\n\n  setAnimation(animation) {\n    const { actions } = this;\n    if (this.animation === animation) return;\n    actions[this.animation].fadeOut(0.2);\n    this.animation = animation;\n    actions[this.animation]\n      .reset()\n      .fadeIn(0.2)\n      .play();\n  }\n\n  walk(path, callback) {\n    const { destinationMarker, position } = this;\n    const distance = position.distanceTo(path[path.length - 1]);\n    delete this.onDestinationCallback;\n    if (distance === 0) {\n      if (callback) callback();\n      return;\n    }\n    this.setAnimation('walk');\n    this.route = {\n      current: 0,\n      path,\n    };\n    if (destinationMarker) {\n      destinationMarker.position.copy(path[path.length - 1]);\n      destinationMarker.visible = true;\n    }\n    if (callback) {\n      this.onDestinationCallback = callback;\n    }\n    this.faceTo(path[0]);\n  }\n\n  faceTo(point) {\n    const { position, rotationAux } = this;\n    const angle = rotationAux.set(point.x - position.x, point.z - position.z).angle();\n    while (this.rotation.y < -Math.PI) this.rotation.y += Math.PI * 2;\n    while (this.rotation.y > Math.PI) this.rotation.y -= Math.PI * 2;\n    this.targetRotation = (Math.PI * 0.5) - angle;\n    while (this.targetRotation < -Math.PI) this.targetRotation += Math.PI * 2;\n    while (this.targetRotation > Math.PI) this.targetRotation -= Math.PI * 2;\n    if ((this.targetRotation - this.rotation.y) > Math.PI) {\n      this.targetRotation -= Math.PI * 2;\n    } else if ((this.targetRotation - this.rotation.y) < -Math.PI) {\n      this.targetRotation += Math.PI * 2;\n    }\n    this.rotationSpeed = Math.abs(this.targetRotation - this.rotation.y) * 1.5;\n  }\n\n  say(lines, delay) {\n    if (!this.bubble) {\n      this.bubble = new Bubble();\n      this.bubble.position.set(0, this.geometry.boundingSphere.radius * 2.25, 0);\n      this.add(this.bubble);\n    }\n    const { bubble } = this;\n    bubble.display(lines, delay);\n  }\n}\n\nActor.Bones = {\n  hip: 0,\n  torso: 1,\n  head: 2,\n  leftArm: 3,\n  rightArm: 4,\n  leftLeg: 5,\n  rightLeg: 6,\n};\n\nconst eulerToQuat = (x, y, z) => (new Quaternion()).setFromEuler(new Euler(x, y, z)).toArray();\n\nActor.animations = {\n  idle: (\n    new AnimationClip('idle', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n          ...eulerToQuat(0, Math.PI * 0.05, 0),\n          ...eulerToQuat(0, Math.PI * -0.05, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * 0.025),\n          ...eulerToQuat(Math.PI * -0.075, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.75,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n          ...eulerToQuat(0, 0, Math.PI * -0.1),\n          ...eulerToQuat(0, 0, Math.PI * -0.05),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.25,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n          ...eulerToQuat(0, 0, Math.PI * 0.1),\n          ...eulerToQuat(0, 0, Math.PI * 0.05),\n        ])\n      ),\n    ])\n  ),\n  walk: (\n    new AnimationClip('walk', 1, [\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.torso}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.02, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.02, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.head}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n          ...eulerToQuat(0, 0, Math.PI * 0.025),\n          ...eulerToQuat(0, 0, Math.PI * -0.025),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * -0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightArm}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n          ...eulerToQuat(Math.PI * 0.1, 0, 0),\n          ...eulerToQuat(Math.PI * -0.1, 0, Math.PI * 0.1),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.leftLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n        ])\n      ),\n      new QuaternionKeyframeTrack(\n        `.bones[${Actor.Bones.rightLeg}].quaternion`,\n        new Float32Array([\n          0,\n          0.5,\n          1,\n        ]),\n        new Float32Array([\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n          ...eulerToQuat(Math.PI * -0.15, 0, Math.PI * 0.01),\n          ...eulerToQuat(Math.PI * 0.15, 0, Math.PI * -0.01),\n        ])\n      ),\n    ])\n  ),\n};\n\nexport default Actor;\n","import {\n  CylinderGeometry,\n  CylinderBufferGeometry,\n  MeshPhongMaterial,\n  SphereGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\nimport Actor from '@/engine/actor';\n\nclass Dude extends Actor {\n  constructor(palette) {\n    super({\n      collisionGeometry: (\n        (new CylinderBufferGeometry(0.25, 0.25, 1.4))\n          .translate(0, 0.7, 0)\n      ),\n      geometry: Dude.geometry(palette),\n      material: Dude.material,\n    });\n    const { skeleton: { bones } } = this;\n    Object.keys(Dude.bones).forEach((bone) => {\n      bones[Actor.Bones[bone]].position.copy(Dude.bones[bone]);\n    });\n  }\n}\n\nDude.bones = {\n  hip: new Vector3(0, 0.5, 0),\n  torso: new Vector3(0, 0, 0),\n  head: new Vector3(0, 0.5, 0),\n  leftArm: new Vector3(-0.15, 0.475, 0),\n  rightArm: new Vector3(0.15, 0.475, 0),\n  leftLeg: new Vector3(-0.075, 0, 0),\n  rightLeg: new Vector3(0.075, 0, 0),\n};\n\nDude.geometry = (palette) => {\n  const torso = new CylinderGeometry(0.175, 0.15, 0.5, 6);\n  torso.translate(0, 0.25, 0);\n  torso.faces.forEach((face) => {\n    face.color.set(palette.torso || 0x990000);\n  });\n  const head = new SphereGeometry(0.2, 8, 4);\n  head.translate(0, 0.2, 0);\n  head.faces.forEach((face) => {\n    face.color.set(palette.head);\n  });\n  if (palette.hat) {\n    const hat = new CylinderGeometry(0.3, 0.3, 0.05);\n    const top = new CylinderGeometry(0.2, 0.2, 0.3);\n    top.translate(0, 0.15, 0);\n    hat.merge(top);\n    hat.translate(0, 0.3, 0);\n    hat.faces.forEach((face) => {\n      face.color.set(palette.hat);\n    });\n    head.merge(hat);\n  }\n  const leftEye = new SphereGeometry(0.05);\n  leftEye.faces.forEach((face) => {\n    face.color.set(palette.eyes);\n  });\n  const rightEye = leftEye.clone();\n  leftEye.translate(-0.1, 0.2, 0.15);\n  rightEye.translate(0.1, 0.2, 0.15);\n  head.merge(leftEye);\n  head.merge(rightEye);\n  const leftArm = new CylinderGeometry(0.05, 0.03, 0.4, 6);\n  leftArm.faces.forEach((face) => {\n    face.color.set(palette.arms);\n  });\n  const rightArm = leftArm.clone();\n  leftArm.translate(0, -0.2, 0);\n  rightArm.translate(0, -0.2, 0);\n  const leftLeg = new CylinderGeometry(0.05, 0.05, 0.5, 4);\n  leftLeg.faces.forEach((face) => {\n    face.color.set(palette.legs);\n  });\n  const rightLeg = leftLeg.clone();\n  leftLeg.translate(0, -0.25, 0);\n  rightLeg.translate(0, -0.25, 0);\n  const geometry = Actor.geometryFromLimbs({\n    torso,\n    head,\n    leftArm,\n    rightArm,\n    leftLeg,\n    rightLeg,\n  });\n  geometry.boundingSphere.center.set(0, 0.7, 0);\n  geometry.boundingSphere.radius = 0.7;\n  return geometry;\n};\n\nDude.material = new MeshPhongMaterial({\n  skinning: true,\n  vertexColors: VertexColors,\n});\n\nexport default Dude;\n","import {\n  CircleBufferGeometry,\n  Mesh,\n  MeshPhongMaterial,\n} from 'three';\n\nclass Marker extends Mesh {\n  constructor() {\n    const geometry = new CircleBufferGeometry(0.25, 16);\n    geometry.rotateX(Math.PI * -0.5);\n    geometry.translate(0, 0.001, 0);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x222222,\n        transparent: true,\n      })\n    );\n    this.visible = false;\n  }\n\n  onAnimationTick({ time }) {\n    const { material, scale, visible } = this;\n    if (!visible) return;\n    const inc = ((1 + Math.sin(time * 4)) * 0.125);\n    const s = 0.75 + inc;\n    scale.set(s, 1, s);\n    material.opacity = 0.25 + inc;\n  }\n}\n\nexport default Marker;\n","import Dude from '@/actors/dude';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  const pack = {\n    dudes: [...Array(13)].map((v, i) => {\n      const dude = new Dude({\n        arms: 0x222222,\n        eyes: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n        head: i === 0 ? 0x333333 : (0x999999 * Math.random()),\n        hat: Math.random() > 0.5 ? (0x999999 * Math.random()) : false,\n        legs: 0x222222,\n        torso: i === 0 ? 0x990000 : (0x999999 * Math.random()),\n      });\n      dude.position.set(Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1), 0, 0);\n      scene.root.add(dude);\n      return dude;\n    }),\n    onAnimationTick() {\n      const { camera, grid } = scene;\n      const pointer = input.getPointerFrame();\n      camera.processInput(pointer);\n      if (pointer.primaryUp) {\n        const { raycaster } = pointer;\n        raycaster.setFromCamera(pointer.normalized, camera);\n        const hit = raycaster.intersectObject(grid)[0];\n        if (!hit) return;\n        pack.walkTo(hit.point);\n      }\n    },\n    walkTo(point) {\n      const { x: mainDudeX, z: mainDudeZ } = point;\n      this.dudes.forEach((dude, i) => {\n        point.x = mainDudeX + Math.floor((i + 1) / 2) * ((i + 1) % 2 === 0 ? 1 : -1);\n        point.z = mainDudeZ + Math.floor((i + 1) / 2) * -1;\n        if (i > 0) {\n          point.x += (Math.random() * 2) - 1;\n          point.z += (Math.random() * 2) - 1;\n          dude.actions.walk.timeScale = 0.8 + Math.random() * 0.4;\n        }\n        dude.walk([point.clone()]);\n      });\n    },\n  };\n\n  const [mainDude] = pack.dudes;\n  mainDude.destinationMarker = new Marker();\n  scene.root.add(mainDude.destinationMarker);\n  scene.camera.target = mainDude.position;\n\n  scene.camera.distance = 6;\n  scene.camera.pitch = Math.PI * 0.125;\n  scene.camera.updateOrbit();\n\n  scene.onAnimationTick = pack.onAnimationTick.bind(pack);\n};\n","import {\n  BoxGeometry,\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  VertexColors,\n} from 'three';\n\nclass Cabin extends Mesh {\n  constructor({\n    color,\n    scale,\n  }) {\n    const geometry = new BoxGeometry(\n      0.998, 0.999, 0.998,\n      scale.x, scale.y, scale.z\n    );\n    const aux = new Color();\n    geometry.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    geometry.translate(0, 0.5, 0);\n    for (let i = 0; i < 12; i += 1) {\n      geometry.faces.splice(40, 1);\n    }\n    geometry.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nexport default Cabin;\n","import {\n  BoxBufferGeometry,\n  Math as ThreeMath,\n  Mesh,\n  MeshPhongMaterial,\n  Vector3,\n} from 'three';\n\nclass Button extends Mesh {\n  constructor({ onTap, position }) {\n    const geometry = new BoxBufferGeometry(0.2, 0.1, 0.1);\n    geometry.translate(0, 0, 0.049);\n    super(\n      geometry,\n      new MeshPhongMaterial({\n        color: 0x440000,\n      })\n    );\n    this.animation = 0;\n    this.animationVector = new Vector3(0, 0, -0.05);\n    this.onTap = onTap;\n    this.position.copy(position);\n    this.origin = position.clone();\n  }\n\n  tap() {\n    const { onTap, tapping } = this;\n    if (tapping) return false;\n    let ret;\n    if (onTap) {\n      ret = onTap();\n    }\n    this.animation = 0;\n    this.tapping = true;\n    return ret;\n  }\n\n  onAnimationTick({ delta }) {\n    const { animationVector, origin, tapping } = this;\n    if (!tapping) return;\n    this.animation = Math.min(this.animation + (delta * 0.75), 1);\n    if (this.animation === 1) {\n      delete this.tapping;\n    }\n    const step = ThreeMath.smoothstep(\n      (this.animation > 0.5 ? 1 - this.animation : this.animation) * 2,\n      0,\n      1\n    );\n    this.position\n      .copy(origin)\n      .addScaledVector(animationVector, step);\n  }\n}\n\nexport default Button;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Math as ThreeMath,\n  Mesh,\n  MeshPhongMaterial,\n  Object3D,\n  PlaneGeometry,\n  VertexColors,\n  Vector3,\n} from 'three';\nimport Button from '@/items/button';\n\nclass Doors extends Object3D {\n  constructor({\n    color,\n    onCall,\n    scale,\n  }) {\n    super();\n    const plane = new PlaneGeometry(0.5, 1, scale.x * 0.5, scale.y);\n    const aux = new Color();\n    plane.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        aux.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.color.copy(aux);\n    });\n    plane.scale(scale.x, scale.y, scale.z);\n    const geometry = (new BufferGeometry()).fromGeometry(plane);\n    for (let i = 0; i < 2; i += 1) {\n      const door = new Mesh(\n        geometry,\n        new MeshPhongMaterial({\n          color,\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        })\n      );\n      door.position.set(\n        (-0.26 + (i * 0.52)) * scale.x,\n        0.5 * scale.y,\n        0.499 * scale.z\n      );\n      this.add(door);\n    }\n    this.animation = 0;\n    this.animationScale = scale.x;\n    this.state = Doors.states.CLOSED;\n    this.targetState = this.state;\n    this.callButton = new Button({\n      onTap: onCall,\n      position: new Vector3(0.6 * scale.x, (1 / 3) * scale.y, 0.5 * scale.z),\n    });\n    this.add(this.callButton);\n  }\n\n  open() {\n    this.targetState = Doors.states.OPEN;\n  }\n\n  close() {\n    this.targetState = Doors.states.CLOSED;\n  }\n\n  onAnimationTick(animation) {\n    const {\n      animationScale,\n      children,\n      state,\n      targetState,\n    } = this;\n    this.callButton.onAnimationTick(animation);\n    if (state === targetState) return;\n    const { delta } = animation;\n    const animationStep = delta * 0.75;\n    switch (targetState) {\n      case Doors.states.OPEN:\n        this.animation = Math.min(this.animation + animationStep, 1);\n        if (this.animation === 1) {\n          this.state = Doors.states.OPEN;\n        }\n        break;\n      case Doors.states.CLOSED:\n        this.animation = Math.max(this.animation - animationStep, 0);\n        if (this.animation === 0) {\n          this.state = Doors.states.CLOSED;\n        }\n        break;\n      default:\n        break;\n    }\n    const step = ThreeMath.smoothstep(this.animation, 0, 1) * 0.4;\n    for (let i = 0; i < 2; i += 1) {\n      children[i].position.x = (-0.26 + (i * 0.52) + (step * (i === 0 ? -1 : 1))) * animationScale;\n    }\n  }\n}\n\nDoors.states = {\n  OPEN: 0,\n  CLOSED: 1,\n};\n\nexport default Doors;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n} from 'three';\n\nclass Shaft extends Mesh {\n  constructor({\n    color,\n    floors,\n    scale,\n  }) {\n    const merged = new Geometry();\n    for (let i = 0; i <= floors; i += 1) {\n      if (i === 0 || i === floors) {\n        const floor = new PlaneGeometry(1, 1);\n        floor.rotateX(Math.PI * -0.5);\n        floor.translate(0, i, 0);\n        merged.merge(floor);\n        if (i === floors) break;\n      }\n      const back = new PlaneGeometry(1, 1);\n      back.translate(0, i + 0.5, -0.5);\n      merged.merge(back);\n      const side = new PlaneGeometry(1, 1);\n      side.rotateY(Math.PI * -0.5);\n      side.translate(-0.5, i + 0.5, 0);\n      merged.merge(side);\n      side.translate(1, 0, 0);\n      merged.merge(side);\n    }\n    merged.scale(scale.x, scale.y, scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      new MeshPhongMaterial({\n        color,\n        side: DoubleSide,\n      })\n    );\n  }\n}\n\nexport default Shaft;\n","import {\n  Object3D,\n  Vector3,\n} from 'three';\nimport Cabin from './cabin';\nimport Doors from './doors';\nimport Shaft from './shaft';\n\nclass Elevator extends Object3D {\n  constructor({\n    floors,\n    origin,\n  }) {\n    super();\n    this.buttons = [];\n    this.floors = floors;\n    this.origin = origin;\n    this.animationStart = Math.random() * 512;\n\n    this.shaft = new Shaft({\n      color: Elevator.shaft,\n      floors,\n      scale: Elevator.scale,\n    });\n    this.add(this.shaft);\n\n    this.doors = [...Array(floors)].map((v, floor) => {\n      const doors = new Doors({\n        color: Elevator.doors,\n        onCall: () => this.onCall(floor),\n        scale: Elevator.scale,\n      });\n      doors.position.y = floor * Elevator.scale.y;\n      this.buttons.push(doors.callButton);\n      this.add(doors);\n      return doors;\n    });\n\n    this.cabin = new Cabin({\n      color: Elevator.cabin,\n      scale: Elevator.scale,\n    });\n    this.add(this.cabin);\n    this.position.z = -1.5 * Elevator.scale.z;\n  }\n\n  onAnimationTick(animation) {\n    // const { time } = animation;\n    // const { animationStart, floors, cabin: { position: cabin } } = this;\n    // const mid = (floors - 1) * Elevator.scale.y * 0.5;\n    // cabin.y = mid + (Math.sin((animationStart + time) * 0.5) * mid);\n    this.doors.forEach(door => door.onAnimationTick(animation));\n  }\n\n  onCall(floor) {\n    const { doors } = this;\n    // Debug: Door toggle testing\n    if (doors[floor].state === Doors.states.OPEN) {\n      doors[floor].close();\n      return false;\n    }\n    doors[floor].open();\n    return true;\n  }\n}\n\nElevator.scale = new Vector3(2, 3, 2);\nElevator.cabin = 0x440000;\nElevator.doors = 0x333333;\nElevator.shaft = 0x333333;\n\nexport default Elevator;\n","import {\n  BufferGeometry,\n  Color,\n  DoubleSide,\n  Mesh,\n  MeshPhongMaterial,\n  PlaneGeometry,\n  Vector3,\n  VertexColors,\n} from 'three';\n\nclass Wall extends Mesh {\n  static getGeometry({\n    aoTop = true,\n    aoBottom = true,\n    width = 1,\n    height = 1,\n    material,\n    orientation,\n  }) {\n    const wall = new PlaneGeometry(\n      width,\n      height,\n      Math.ceil(width * Wall.scale.x),\n      Math.ceil(height * (orientation === 'horizontal' ? Wall.scale.x : Wall.scale.y))\n    );\n    const color = new Color();\n    wall.faces.forEach((face, i) => {\n      if (i % 2 === 0) {\n        color.setHSL(Math.random(), 0.05, 0.25 + (Math.random() * 0.125));\n      }\n      face.materialIndex = material;\n      const vertices = [\n        wall.vertices[face.a],\n        wall.vertices[face.b],\n        wall.vertices[face.c],\n      ];\n      face.vertexColors = [...Array(3)].map((v, j) => {\n        const c = color.clone();\n        if (\n          (aoTop && Math.abs(vertices[j].y - height * 0.5) < 0.0001)\n          || (aoBottom && Math.abs(vertices[j].y - height * -0.5) < 0.0001)\n        ) {\n          c.offsetHSL(0, 0, -0.1);\n        }\n        return c;\n      });\n    });\n    if (orientation === 'horizontal') {\n      wall.rotateX(Math.PI * -0.5);\n    }\n    return wall;\n  }\n\n  constructor({\n    aoTop = false,\n    aoBottom = false,\n  } = {}) {\n    const geometry = Wall.getGeometry({\n      aoTop,\n      aoBottom,\n      orientation: 'vertical',\n      material: 0,\n    });\n    geometry.translate(0, 0.5, -0.5);\n    geometry.scale(Wall.scale.x, Wall.scale.y, Wall.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshPhongMaterial({\n        side: DoubleSide,\n        vertexColors: VertexColors,\n      })\n    );\n  }\n}\n\nWall.scale = new Vector3(4, 3, 4);\n\nexport default Wall;\n","import {\n  BufferGeometry,\n  DoubleSide,\n  Geometry,\n  Mesh,\n  MeshPhongMaterial,\n  VertexColors,\n} from 'three';\nimport GridMaterial from '@/materials/grid';\nimport Wall from './wall';\n\nclass Hallway extends Mesh {\n  constructor({\n    hasCeiling,\n    hasElevator,\n    isEdge,\n    isLobby,\n  }) {\n    const merged = new Geometry();\n    const floor = Wall.getGeometry({\n      aoBottom: !isLobby,\n      material: 0,\n      orientation: 'horizontal',\n    });\n    merged.merge(floor);\n    if (hasElevator) {\n      const wall = Wall.getGeometry({\n        aoTop: hasCeiling,\n        width: 0.25,\n        material: 1,\n      });\n      wall.translate(-0.375, 0.5, -0.5);\n      merged.merge(wall);\n      wall.translate(0.75, 0, 0);\n      merged.merge(wall);\n    } else {\n      const wall = Wall.getGeometry({\n        aoTop: hasCeiling,\n        material: 1,\n      });\n      wall.translate(0, 0.5, -0.5);\n      merged.merge(wall);\n    }\n    if (!isLobby) {\n      const wall = Wall.getGeometry({\n        aoTop: false,\n        height: 1 / 3,\n        material: 1,\n      });\n      wall.rotateY(Math.PI);\n      wall.translate(0, 1 / 3 / 2, 0.5);\n      merged.merge(wall);\n      if (isEdge) {\n        const wall = Wall.getGeometry({\n          aoTop: false,\n          height: 1 / 3,\n          material: 1,\n        });\n        wall.rotateY(Math.PI * 0.5 * (isEdge === 'left' ? 1 : -1));\n        wall.translate(isEdge === 'left' ? -0.5 : 0.5, 1 / 3 / 2, 0);\n        merged.merge(wall);\n      }\n    }\n    merged.scale(Wall.scale.x, Wall.scale.y, Wall.scale.z);\n    super(\n      (new BufferGeometry()).fromGeometry(merged),\n      [\n        new GridMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n        new MeshPhongMaterial({\n          side: DoubleSide,\n          vertexColors: VertexColors,\n        }),\n      ]\n    );\n  }\n}\n\nexport default Hallway;\n","import {\n  BufferGeometry,\n  Geometry,\n  Mesh,\n  MeshBasicMaterial,\n  PlaneGeometry,\n  Vector3,\n} from 'three';\n\nimport { AStarFinder, Grid } from 'pathfinding';\n\nclass Walkable extends Mesh {\n  constructor(grid) {\n    const geometry = new Geometry();\n    const floor = new PlaneGeometry(1024, 1024, 2, 2);\n    floor.rotateX(Math.PI * -0.5);\n    floor.translate(0, 0, 512);\n    const intersect = new PlaneGeometry(1024, 1024, 2, 2);\n    intersect.translate(0, 512, 0);\n    geometry.merge(floor);\n    geometry.merge(intersect);\n    super(\n      (new BufferGeometry()).fromGeometry(geometry),\n      new MeshBasicMaterial({\n        transparent: true,\n        visible: false,\n      })\n    );\n    this.finder = new AStarFinder({\n      allowDiagonal: true,\n      dontCrossCorners: true,\n    });\n    this.grid = new Grid(grid);\n    this.grid.setWalkableAt(0, 1, true);\n  }\n\n  getPath(from, to) {\n    const { grid, finder } = this;\n    from = this.worldToGrid(from);\n    to = this.worldToGrid(to);\n    return finder.findPath(from.x, from.z, to.x, to.z, grid.clone()).map(([x, z]) => (\n      this.localToWorld(new Vector3(x + 0.5, 0, z + 0.5))\n    ));\n  }\n\n  worldToGrid(point) {\n    const { grid, position } = this;\n    point.y = position.y;\n    this.worldToLocal(point);\n    point.x = Math.min(Math.max(point.x, 0), grid.width - 1);\n    point.z = Math.min(Math.max(point.z, 0), grid.height - 1);\n    point = {\n      x: Math.floor(point.x),\n      z: Math.floor(point.z),\n    };\n    while (!grid.isWalkableAt(point.x, point.z) && point.z < grid.height - 1) {\n      point.z += 1;\n    }\n    return point;\n  }\n}\n\nexport default Walkable;\n","import { Object3D } from 'three';\nimport Elevator from './elevator';\nimport Hallway from './hallway';\nimport Wall from './wall';\nimport Walkable from '@/engine/walkable';\n\nclass Building extends Object3D {\n  constructor({\n    elevators,\n    floors,\n  }) {\n    super();\n    this.buttons = [];\n    this.elevators = elevators.map(({\n      floors,\n      origin,\n    }) => {\n      const elevator = new Elevator({ floors, origin });\n      elevator.position.x = origin.x * 4;\n      elevator.position.y = origin.y * 3;\n      this.buttons = [\n        ...this.buttons,\n        ...elevator.buttons,\n      ];\n      this.add(elevator);\n      return elevator;\n    });\n    const width = floors.reduce((width, layout) => Math.max(width, layout.split('').length * 4), 0);\n    this.heightmap = [...Array(6)].map(() => [...Array(width)].map(() => (0)));\n    this.floors = floors.map((layout, floor) => {\n      const rooms = layout.split('');\n      const grid = [...Array(4)].map(() => [...Array(rooms.length * 4)].map(() => (1)));\n      rooms.forEach((type, room) => {\n        let mesh;\n        switch (type) {\n          case ' ':\n            return;\n          case '_':\n            mesh = new Wall();\n            break;\n          case '.':\n          default: {\n            let isEdge = false;\n            if (room === 0 || ~[' ', '_'].indexOf(rooms[room - 1])) isEdge = 'left';\n            else if (room === rooms.length - 1 || ~[' ', '_'].indexOf(rooms[room + 1])) isEdge = 'right';\n            const hasCeiling = floor < floors.length - 1 && [' ', '_'].indexOf(floors[floor + 1].split('')[room]) === -1;\n            const hasElevator = (\n              this.elevators.findIndex(({\n                floors,\n                origin,\n              }) => (\n                origin.x === room\n                && origin.y <= floor\n                && origin.y + floors > floor\n              ))\n            ) !== -1;\n            mesh = new Hallway({\n              hasCeiling,\n              hasElevator,\n              isEdge,\n              isLobby: floor === 0,\n            });\n            for (let x = 0; x < 4; x += 1) {\n              for (let z = 0; z < 6; z += 1) {\n                if (z > 1) {\n                  this.heightmap[z][(room * 4) + x] = floor * 3;\n                } else if (hasElevator && x > 1 && x < 4) {\n                  this.heightmap[z][(room * 4) + x] = (floor + 1) * 3;\n                }\n              }\n              for (let y = 0; y < 4; y += 1) {\n                grid[y][(room * 4) + x] = 0;\n              }\n            }\n            break;\n          }\n        }\n        mesh.position.set(room * 4, floor * 3, 0);\n        this.add(mesh);\n      });\n      const walkable = new Walkable(grid);\n      walkable.position.set(-2, floor * 3, -2);\n      this.add(walkable);\n      return walkable;\n    });\n  }\n\n  addToFloorGrid({\n    floor,\n    mesh,\n    x,\n    z,\n  }) {\n    const { floors: { [floor]: walkable } } = this;\n    walkable.grid.setWalkableAt(x, z, false);\n    mesh.position.set(x + 0.5, 0, z + 0.5).add(walkable.position);\n    this.add(mesh);\n  }\n\n  getHeight(x, z) {\n    const { heightmap } = this;\n    x = Math.floor(x + 2);\n    z = Math.floor(z + 4);\n    if (\n      x < 0\n      || x > heightmap[0].length - 1\n      || z < 0\n      || z > heightmap.length - 1\n    ) {\n      return 0;\n    }\n    return heightmap[z][x];\n  }\n\n  onAnimationTick(animation) {\n    const { children } = this;\n    children.forEach((child) => {\n      if (child.onAnimationTick) {\n        child.onAnimationTick(animation);\n      }\n    });\n  }\n}\n\nexport default Building;\n","import Dude from '@/actors/dude';\nimport Building from '@/building';\nimport Marker from '@/items/marker';\n\nexport default ({ input, scene }) => {\n  /* Spawn player */\n  const player = new Dude({\n    arms: 0x222222,\n    eyes: 0x990000,\n    head: 0x333333,\n    legs: 0x222222,\n    torso: 0x990000,\n  });\n  player.position.set(6, 3, 0);\n  player.destinationMarker = new Marker();\n  scene.root.add(player);\n  scene.root.add(player.destinationMarker);\n  scene.camera.maxHeight = 2.9;\n  scene.camera.target = player.position;\n\n  /* Spawn test building */\n  const building = new Building({\n    elevators: [\n      {\n        floors: 2,\n        origin: { x: 1, y: 0 },\n      },\n      {\n        floors: 3,\n        origin: { x: 4, y: 1 },\n      },\n    ],\n    floors: [\n      '  ...',\n      ' .._..',\n      ' .._..',\n      '......',\n      '......',\n    ].reverse(),\n  });\n  scene.root.add(building);\n  scene.rain.position.x = building.heightmap[0].length * 0.5;\n  scene.rain.setHeightTest(building.getHeight.bind(building));\n\n  /* Spawn some dudes */\n  const dudes = [...Array(4)].map(() => {\n    const dude = new Dude({\n      arms: 0x222222,\n      eyes: 0x999999 * Math.random(),\n      hat: Math.random() > 0.5 ? (0x999999 * Math.random()) : false,\n      head: 0x999999 * Math.random(),\n      legs: 0x222222,\n      torso: 0x999999 * Math.random(),\n    });\n    const floor = Math.floor(Math.random() * 2);\n    const { grid } = building.floors[floor];\n    let spawn;\n    do {\n      spawn = {\n        x: Math.floor(Math.random() * grid.width),\n        z: Math.floor(Math.random() * grid.height - 1),\n      };\n    } while (!grid.isWalkableAt(spawn.x, spawn.z));\n    building.addToFloorGrid({\n      floor,\n      mesh: dude,\n      ...spawn,\n    });\n    return dude.collisionMesh;\n  });\n\n  /* Animation loop */\n  const floor = 1;\n  scene.onAnimationTick = () => {\n    const { camera } = scene;\n    const pointer = input.getPointerFrame();\n    camera.processInput(pointer);\n    if (pointer.primaryUp) {\n      const { raycaster } = pointer;\n      raycaster.setFromCamera(pointer.normalized, camera);\n      const walkable = building.floors[floor];\n      {\n        const hit = raycaster.intersectObjects(dudes)[0];\n        if (hit) {\n          const { object: { parent: dude } } = hit;\n          const lines = [\n            'Fuck You',\n            'Go away',\n            'Leave me alone',\n          ];\n          const onDestination = () => {\n            player.faceTo(dude.position);\n            setTimeout(() => (\n              dude.say([lines[Math.floor(Math.random() * lines.length)]])\n            ), 1000);\n          };\n          const path = walkable.getPath(player.position.clone(), dude.position.clone());\n          if (path.length > 1) {\n            player.walk(path.slice(1), onDestination);\n          } else if (path.length) {\n            onDestination();\n          }\n          return;\n        }\n      }\n      {\n        const hit = raycaster.intersectObjects(building.buttons)[0];\n        if (hit) {\n          const { point, object: button } = hit;\n          const onDestination = () => {\n            player.faceTo(point);\n            if (button.tap()) {\n              setTimeout(() => {\n                setTimeout(() => (\n                  player.say([\n                    'Crap!',\n                    \"It's Broken!\",\n                    'What a night...',\n                  ])\n                ), 500);\n                const aux = camera.position.clone();\n                camera.getWorldPosition(aux);\n                player.faceTo(aux);\n              }, 1000);\n            }\n          };\n          const path = walkable.getPath(player.position.clone(), point.clone());\n          if (path.length > 1) {\n            player.walk(path.slice(1), onDestination);\n          } else if (path.length) {\n            onDestination();\n          }\n          return;\n        }\n      }\n      {\n        const hit = raycaster.intersectObject(walkable)[0];\n        if (hit) {\n          const path = walkable.getPath(player.position.clone(), hit.point);\n          if (path.length > 1) {\n            player.walk(path.slice(1));\n          }\n        }\n      }\n    }\n  };\n};\n","export { default as debug } from './debug';\nexport { default as game } from './game';\n","import {\n  ShaderLib,\n  ShaderMaterial,\n  UniformsUtils,\n} from 'three';\n\nclass GridMaterial extends ShaderMaterial {\n  constructor({\n    color = 0xFFFFFF,\n    size = 1,\n    subdivisions = 10,\n    ...rest\n  } = {}) {\n    const vertexShader = ShaderLib.phong.vertexShader.replace(\n      '#include <clipping_planes_pars_vertex>',\n      [\n        '#include <clipping_planes_pars_vertex>',\n        'varying vec3 vPosition;',\n      ].join('\\n')\n    ).replace(\n      '#include <fog_vertex>',\n      [\n        '#include <fog_vertex>',\n        'vPosition = (modelMatrix * vec4( transformed, 1.0 )).xyz;',\n      ].join('\\n')\n    );\n    const primaryGrid = 1 / size;\n    const secondaryGrid = primaryGrid * subdivisions;\n    const fragmentShader = ShaderLib.phong.fragmentShader.replace(\n      '#include <clipping_planes_pars_fragment>',\n      [\n        '#include <clipping_planes_pars_fragment>',\n        'varying vec3 vPosition;',\n        'float getGrid(float scale) {',\n        ' vec2 coord = vPosition.xz * scale;',\n        ' vec2 grid = abs(fract(coord - 0.5) - 0.5) / fwidth(coord);',\n        ' return 1.0 - min(min(grid.x, grid.y), 1.0);',\n        '}',\n      ].join('\\n')\n    ).replace(\n      'vec4 diffuseColor = vec4( diffuse, opacity );',\n      [\n        `float primaryGrid = getGrid(${primaryGrid}${primaryGrid % 1 === 0 ? '.0' : ''});`,\n        `float secondaryGrid = getGrid(${secondaryGrid}${secondaryGrid % 1 === 0 ? '.0' : ''});`,\n        'vec3 grid = mix(mix(diffuse, diffuse * 0.95, secondaryGrid), diffuse * 1.15, primaryGrid);',\n        'vec4 diffuseColor = vec4(grid, opacity);',\n      ].join('\\n')\n    );\n    super({\n      name: `grid-material-${size}-${subdivisions}`,\n      uniforms: UniformsUtils.clone(ShaderLib.phong.uniforms),\n      fragmentShader,\n      vertexShader,\n      extensions: { derivatives: true },\n      fog: true,\n      lights: true,\n      ...rest,\n    });\n    this.color = this.uniforms.diffuse.value;\n    this.color.set(color);\n  }\n}\n\nexport default GridMaterial;\n","import Input from '@/engine/input';\nimport Music from '@/engine/music';\nimport Scene from '@/engine/scene';\nimport * as Scenes from '@/scenes';\n\nconst mount = document.getElementById('mount');\nconst input = new Input({ mount });\nconst music = new Music({ toggle: document.getElementById('sound') });\nconst scene = new Scene({ mount });\n\nlet route = window.location.hash.split('/').slice(1)[0];\nif (!Scenes[route]) {\n  window.location.hash = '/game';\n  route = 'game';\n}\nsetImmediate(() => window.addEventListener('hashchange', () => window.location.reload(), false));\n\nfunction onLoad() {\n  document.body.className = 'loaded';\n  Scenes[route]({ input, scene });\n  input.touches.once('end', () => {\n    document.getElementById('splash').style.display = 'none';\n    input.isEnabled = true;\n    music.play();\n  });\n}\n\nfunction waitForFonts(fonts) {\n  let loaded = 0;\n  fonts.forEach(({ font, test }) => {\n    const fontTester = document.createElement('div');\n    fontTester.innerText = test;\n    fontTester.style.position = 'absolute';\n    fontTester.style.fontFamily = 'sans-serif';\n    fontTester.style.top = '-999999px';\n    document.body.appendChild(fontTester);\n    const { width: initialWidth } = fontTester.getBoundingClientRect();\n    fontTester.style.fontFamily = font;\n    const check = () => {\n      const { width } = fontTester.getBoundingClientRect();\n      if (width > initialWidth) {\n        document.body.removeChild(fontTester);\n        loaded += 1;\n        if (loaded === fonts.length) {\n          onLoad();\n        }\n      } else {\n        setTimeout(check, 10);\n      }\n    };\n    check();\n  });\n}\n\nwaitForFonts([\n  { font: \"'Print Char 21'\", test: 'QW@HhsXJ' },\n]);\n","import {\n  CanvasTexture,\n  SpriteMaterial as ThreeSprite,\n} from 'three';\n\nclass SpriteMaterial extends ThreeSprite {\n  constructor({ width, height, ...rest }) {\n    const renderer = document.createElement('canvas');\n    renderer.width = width;\n    renderer.height = height;\n    const texture = new CanvasTexture(renderer);\n    super({\n      map: texture,\n      ...rest,\n    });\n    this.renderer = renderer;\n    this.ctx = renderer.getContext('2d');\n  }\n}\n\nexport default SpriteMaterial;\n"],"sourceRoot":""}